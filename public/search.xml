<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>高可定+低维护的博客搭建指南</title>
      <link href="/2018/12/08/%E9%AB%98%E5%8F%AF%E5%AE%9A+%E4%BD%8E%E7%BB%B4%E6%8A%A4%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/"/>
      <url>/2018/12/08/%E9%AB%98%E5%8F%AF%E5%AE%9A+%E4%BD%8E%E7%BB%B4%E6%8A%A4%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/</url>
      <content type="html"><![CDATA[<h2 id="为什么要有博客"><a href="#为什么要有博客" class="headerlink" title="为什么要有博客"></a>为什么要有博客</h2><p>博客之于程序员意义重大，因为，<strong>输出</strong>是一个程序员的基本素养和技能，<strong>开源分享</strong>是科学技术发展和人类社会进步的重要美德和推动力，而博客正是输出分享的重要途径之一。</p><p>为什么输出分享对程序员来说十分重要，我有以下几点看法。</p><ul><li><p>从技术角度考虑，技术的提升依赖于专业知识的学习以及实际经验的积累，而人的大脑需要不断地进行重复记忆，才能将这些知识经验留在自己的知识库里。因此，无论是学习新知识还是通过实践得到的经验，有了即时的输出记录，才便于复盘与巩固。</p></li><li><p>在实际工作中，当我们面临复杂大型的项目，和其中大量的代码时，如果只根据个人喜好而不根据代码规范去开发，写完后不留存开发文档以及接口文档，必然给项目的维护带来更高的代价，给团队中的其他开发者带来困扰。因此，代码规范和开发文档的输出也相当必要。</p></li></ul><p>如果你还不相信，坚持输出给程序员带来好处的例子很多，我随意举几个。</p><ul><li><p>例如 IT 圈出名的<a href="http://www.ruanyifeng.com" target="_blank" rel="noopener">阮一峰</a>，<a href="https://www.zhangxinxu.com/" target="_blank" rel="noopener">张鑫旭</a>，stormzhang(这位已经不再分享技术了)等等大佬，他们有今天这种影响力的一个重要因素就是输出分享；</p></li><li><p>我也曾不止一次吸取前辈的经验以及建议，前端圈的<a href="https://www.zhihu.com/people/xiao-jue-83/activities" target="_blank" rel="noopener">小爝</a>大佬在知乎的某个<a href="https://www.zhihu.com/question/301802742/answer/528508203" target="_blank" rel="noopener">回答</a>当中提到过“长期坚持技术输出和总结分享”在找工作面试中是一个亮点和加分项；</p></li><li><p>“前端桃园”公号的运营者桃翁也十分提倡坚持输出，他在他星球小圈子中给我们分享过他自己 因为坚持输出提升了影响力 而多次收到阿里面试邀请的经历。</p></li></ul><p>还有很多例子，不一一例举，分享本文的原因也就写到这，不再赘述。</p><p>（当然输出分享的途径很多，本文以介绍博客为目的，如果选择其他途径可以忽略下文）</p><h2 id="如何选择博客"><a href="#如何选择博客" class="headerlink" title="如何选择博客"></a>如何选择博客</h2><p>现在网络上有各式各样的博客，有基于第三方的平台（如博客园、csdn 等）</p><p>也有可供个人搭建的工具（如 Hexo、Ghost、wordpress、jekyll 等）</p><p>自建博客的选择丰富多彩，选择一个最适合自己的最重要。</p><p>作为一个博客，我最重视的有两个方面：</p><ol><li>可自定义，可个性化。</li></ol><p>因为每个人追求的博客风格不同，想要展示的内容和格式也有所不同。</p><ol start="2"><li>高效转化。</li></ol><p>我指的转化，是你的输出原文档 到 博客文本的转化，这一转化的过程对于想要存档原文，或不习惯于博客编辑器，不习惯于博客网页格式的人之分重要。</p><p>我推崇用 markdown 来写笔记，因为 markdown 足够简约优雅，兼容性也十分强，</p><blockquote><p>Markdown 是一种轻量级的「标记语言」，通常为程序员群体所用，目前它已是全球最大的技术分享网站 GitHub 和技术问答网站 StackOverFlow 的御用书写格式。</p><p>非技术类笔记用户，千万不要被「标记」、「语言」吓到，Markdown 的语法十分简单，常用的标记符号不超过十个，用于日常写作记录绰绰有余，不到半小时就能完全掌握。</p><p>就是这十个不到的标记符号，却能让人优雅地沉浸式记录，专注内容而不是纠结排版，达到「心中无尘，码字入神」的境界。</p></blockquote><p>因此今天推荐的博客搭建工具，就是<a href="https://hexo.io" target="_blank" rel="noopener">Hexo</a>.</p><ul><li>通过 Hexo，你可以高定制化的 DIY 自己的博客（可以选择主题）</li><li>搭建后，只需要将 md 文档源文件丢尽指定目录，输一个命令，hexo 就可以自动生成页面</li><li>生成静态文件后，可以无需服务器+域名，直接将静态文件丢在 GithubPages 上即可</li></ul><h2 id="Hexo-博客搭建-amp-DIY-amp-使用指南"><a href="#Hexo-博客搭建-amp-DIY-amp-使用指南" class="headerlink" title="Hexo 博客搭建 &amp; DIY &amp; 使用指南"></a>Hexo 博客搭建 &amp; DIY &amp; 使用指南</h2><blockquote><p>具体 api 请看 hexo 官网文档，下面只分享搭建+DIY+使用流程</p></blockquote><ol><li>安装 node 和 git</li><li>npm 安装 hexo 和相关依赖</li><li>根据 hexo 命令 初始化 博客文件夹，在 config 中添加博客相关信息和配置</li><li>在 hexo 官网/themes 选择相关主题，或使用默认主题，以我使用的简约主题<a href="https://github.com/tufu9441/maupassant-hexo" target="_blank" rel="noopener">maupassant</a>为例</li></ol><p>主题默认样式如图：</p><p><img src="/images/maupassant.jpg" alt="maupassant"></p><ol start="5"><li>除了默认的首页/归档等 tab 页，可以在配置中添加更多 tab 页，tab 的内容也可以从 markdown 渲染。</li></ol><p>例如添加/Demo 分页，可以再配置文件中新增一项 tab 配置，在 source 文件夹下添加/demo/index.md 即可，可以在 post.pug 模板中更改 tab 分页渲染 index.md 的方式。</p><p>配置:</p><p><img src="/images/hexo1.jpg" alt="hexo1"></p><p>post.pug 模板代码:</p><p><img src="/images/hexo2.jpg" alt="hexo2"></p><p>实现效果：</p><p><img src="/images/hexo3.jpg" alt="hexo3"></p><ol start="6"><li>其他的各种折腾，其实原理都类似，找到对应的 pug 模板代码进行增删改即可，包括样式、脚本、内容。（注：pug，即前 jade，前端的一种模板引擎，api 参见<a href="https://pugjs.org" target="_blank" rel="noopener">文档</a>）</li><li>调试的过程也很方便，使用 hexo server 命令可以启动本地环境，并且会自动 watch 你的更改（包括配置+scss+pug 模板），并自动重新生成，这个过程也很快，大概一口茶不到的功夫。</li><li>搭建完成后，日常使用只需要将 md 源文件放入 source/_post 文件夹下，再运行一个简单的命令，即可自动生成+部署到 git</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate --deploy</span><br><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><ol start="9"><li>一些其他的实用功能也很多，例如：根据 markdown#标题，自动生成 toc 目录；可以方便的引入各大评论网站的脚本，只需要账号，第三方存储评论留言不需要维护；引入百度/busuanzi 等的访问量统计；文章字数统计和预计阅读时间；等等很多，不一一例举。<strong>总之 DIY 自由度极高，适合开发者</strong></li></ol><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>最近有一些感悟，以技术为目标的人，不要浮躁，莫逞他人嘴上快，莫争浮世虚功名，心无旁骛，沉下心来钻研技术就好。</p>]]></content>
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Node版本管理工具 nvm for windows</title>
      <link href="/2018/09/29/nvm%20for%20windows/"/>
      <url>/2018/09/29/nvm%20for%20windows/</url>
      <content type="html"><![CDATA[<h1 id="nvm"><a href="#nvm" class="headerlink" title="nvm"></a>nvm</h1><p>只支持 linux 和 cent os</p><h1 id="nvm-for-windows"><a href="#nvm-for-windows" class="headerlink" title="nvm for windows"></a>nvm for windows</h1><p><a href="https://github.com/coreybutler/nvm-windows/releases" target="_blank" rel="noopener">https://github.com/coreybutler/nvm-windows/releases</a></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><pre><code>0. 安装前卸载干净已经有的node1. 设置nvm安装路径（不能有空格，否则nvm use 报错）2. 设置node路径（当前使用的node的存放路径，会被添加到环境变量）</code></pre><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nvm list -当前安装的node版本</span><br><span class="line">nvm list available -可获取的版本</span><br><span class="line">nvm install xx.xx.xx -安装某版本node</span><br><span class="line">nvm use xx.xx.xx -使用某版本node</span><br><span class="line">nvm uninstall xx.xx.xx -卸载某版本node</span><br></pre></td></tr></table></figure><h1 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">nvm arch -查看当前系统位数</span><br><span class="line">nvm on/off -打开/关闭nvm（好像并没有什么区别</span><br><span class="line">nvm proxy [url] -设置代理下载地址</span><br><span class="line">nvm root [path] -nvm安装路径</span><br><span class="line">nvm node_mirror [url] -node下载库路径</span><br><span class="line">nvm npm_mirror [url] -npm下载库路径</span><br></pre></td></tr></table></figure><hr><pre><code>“重点是node为什么更新那么快？”</code></pre>]]></content>
      
      <categories>
          
          <category> node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node </tag>
            
            <tag> nvm </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>360FED课程——CSS</title>
      <link href="/2018/09/07/360FE-02-CSS/"/>
      <url>/2018/09/07/360FE-02-CSS/</url>
      <content type="html"><![CDATA[<h1 id="css"><a href="#css" class="headerlink" title="css"></a>css</h1><p>cascading stylesheet<br>级联样式表</p><h1 id="Level-版本"><a href="#Level-版本" class="headerlink" title="Level 版本"></a>Level 版本</h1><ul><li>CSS Level 1（废弃</li><li>CSS Level 2 (CSS 2.2 完整规范)</li><li>CSS Level 3（在 2.2 的基础上增加新模块特性<ul><li>Color Module Level 3</li><li>Selectors Level 3</li><li>Media Queries</li><li>Fonts Level 3</li></ul></li></ul><h1 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h1><h2 id="简单"><a href="#简单" class="headerlink" title="简单"></a>简单</h2><ul><li>通配 *</li><li>标签 E</li><li>类 .class</li><li>id #id</li></ul><h2 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器 [ ]"></a>属性选择器 [ ]</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 具有某个属性 */</span></span><br><span class="line"><span class="selector-attr">[disabled]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 属性为指定的值 */</span></span><br><span class="line"><span class="selector-attr">[type="checkbox"]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 属性值包含某个字符串 */</span></span><br><span class="line"><span class="selector-attr">[href*="example"]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 属性值以某个字符串开头 */</span></span><br><span class="line"><span class="selector-attr">[href^="http:"]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 属性值以某个字符串结束 */</span></span><br><span class="line"><span class="selector-attr">[href$="jpg"]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 属性值以空格分割后包含某个字符串 */</span></span><br><span class="line"><span class="selector-attr">[lang~＝"zh-cn"]</span><span class="comment">/* class选择器的实现机制 */</span></span><br></pre></td></tr></table></figure><h2 id="伪类"><a href="#伪类" class="headerlink" title="伪类"></a>伪类</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 动态性伪类，根据状态选择 */</span></span><br><span class="line">a:link    &#123; ... &#125;       /* 未访问过的链接 */</span><br><span class="line">a:visited &#123; ... &#125;       /* 已访问过的链接 */</span><br><span class="line"></span><br><span class="line">a:hover   &#123; ... &#125;       /* 鼠标移到链接上的样式 */</span><br><span class="line">a:active  &#123; ... &#125;       /* 鼠标在连接上按下时的样式 */</span><br><span class="line">a:focus   &#123; ... &#125;       /* 获得焦点时的样式 */</span><br><span class="line"></span><br><span class="line">input:disabled &#123; ... &#125;  /* 禁用时的样式 */</span><br><span class="line">input:checked &#123; ... &#125;   /* 选中时的样式 */</span><br><span class="line">                        <span class="comment">/*利用:checked来做某些toggle组件状态转换*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 结构性伪类 */</span></span><br><span class="line"><span class="selector-pseudo">:first-child</span></span><br><span class="line"><span class="selector-pseudo">:last-child</span></span><br><span class="line"><span class="selector-pseudo">:nth-child(2n+1)</span></span><br><span class="line"></span><br><span class="line"><span class="selector-pseudo">:first-of-type</span></span><br><span class="line"><span class="selector-pseudo">:last-of-type</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">:nth-of-type(2n+1)</span>   <span class="comment">/*对nth-child()增加类型限制*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-pseudo">:empty</span></span><br></pre></td></tr></table></figure><h2 id="组合性选择器"><a href="#组合性选择器" class="headerlink" title="组合性选择器"></a>组合性选择器</h2><ul><li>后代 E F</li><li>父子 E&gt;F</li><li>兄弟 E~F</li><li>相邻兄弟 E+F</li></ul><h1 id="伪元素"><a href="#伪元素" class="headerlink" title="伪元素"></a>伪元素</h1><ul><li>::before</li><li>::after</li><li>::first-letter</li><li>::first-line</li></ul><h1 id="优先级-特异度-Specificity"><a href="#优先级-特异度-Specificity" class="headerlink" title="优先级/特异度 Specificity"></a>优先级/特异度 Specificity</h1><ul><li>!important &gt; 内联 &gt; id &gt; （伪）类 &gt; （伪）元素</li><li>覆盖：同样优先级：后面写的覆盖前面写的</li><li>复合选择器：从优先级高的选择器 的 数量 开始比较</li></ul><h1 id="样式来源"><a href="#样式来源" class="headerlink" title="样式来源"></a>样式来源</h1><ul><li>页面开发者</li><li>用户设置（浏览器可以指定一个本地 CSS 文件，打开所有页面时自动加载</li><li>浏览器预设<ul><li><a href="https://dxr.mozilla.org/mozilla-central/source/layout/style/res/html.css" target="_blank" rel="noopener">Mozilla Firefox 预设样式</a></li><li><a href="https://chromium.googlesource.com/chromium/blink/+/master/Source/core/css/html.css" target="_blank" rel="noopener">Google Chrome 预设样式</a></li></ul></li><li>优先级： 开发者 &gt; 用户设置 &gt; 浏览器预设</li><li>加了!important 的优先级：用户 important &gt; 开发者 important &gt; 开发者 &gt; 用户设置 &gt; 浏览器预设</li></ul><h1 id="默认值策略-Defaulting"><a href="#默认值策略-Defaulting" class="headerlink" title="默认值策略 Defaulting"></a>默认值策略 Defaulting</h1><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><p>某些属性若不指定值，会自动继承父元素的 ！！！【计算值】</p><h2 id="显示继承"><a href="#显示继承" class="headerlink" title="显示继承"></a>显示继承</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">box-sizing</span>: inherit;</span><br><span class="line">    <span class="comment">/* 优点是有某一块都要设置为content-box时，只需要设置其最外层元素，不需要全设置 */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#xxx</span> &#123;</span><br><span class="line">    <span class="attribute">box-sizing</span>: content-box;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="初始值-initial"><a href="#初始值-initial" class="headerlink" title="初始值 initial"></a>初始值 initial</h2><ul><li>CSS 中，每个属性都有一个初始值</li><li>background-color 的初始值为 transparent</li><li>margin-left 的初始值为 0，font-size 是 16px，line-height 是 1.2，但根据 font-family 而不同</li><li>可以显式重置为初始值，比如 background-color: initial</li><li>可以上 mdn 查初始值</li></ul><h1 id="CSS-求值过程"><a href="#CSS-求值过程" class="headerlink" title="CSS 求值过程"></a>CSS 求值过程</h1><h2 id="一个令人疑惑的很皮的-CSS-求值例子"><a href="#一个令人疑惑的很皮的-CSS-求值例子" class="headerlink" title="一个令人疑惑的很皮的 CSS 求值例子"></a>一个令人疑惑的很皮的 CSS 求值例子</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>卡尔斯巴德洞窟<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        卡尔斯巴德洞窟（Carlsbad Caverns）是美国的一座国家公园，</span><br><span class="line">        位于新墨西哥州东南部。游客可以通过天然入口徒步进入，也可以</span><br><span class="line">        通过电梯直接到达230米的洞穴深处。</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    body &#123;</span></span><br><span class="line"><span class="undefined">        margin: 0;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    article &#123;</span></span><br><span class="line"><span class="undefined">        line-height: 150%;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    h1 &#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">font-size</span>: 40<span class="selector-tag">px</span>; <span class="comment">/*最终实际的line-height值为24px*/</span></span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    p &#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">font-size</span>: 14<span class="selector-tag">px</span>; <span class="comment">/*最终实际的line-height值为24px*/</span></span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    body &#123;</span></span><br><span class="line"><span class="undefined">        margin: 0;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    article &#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">line-height</span>: 1<span class="selector-class">.5</span>;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    h1 &#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">font-size</span>: 40<span class="selector-tag">px</span>; <span class="comment">/*最终实际的line-height值为60px*/</span></span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    p &#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">font-size</span>: 14<span class="selector-tag">px</span>; <span class="comment">/*最终实际的line-height值为21px*/</span></span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    原因：</span></span><br><span class="line"><span class="comment">    设为150%时，子元素继承前，父元素的line-height=150%会先被计算（resolving），得到一个绝对值，被计算为16px(默认的font-size值)*1.5=24px，子元素继承到的值是24px</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    设为1.5时，子元素继承前，父元素在执行resolving时，1.5是绝对值，不会被转换，所以子元素继承到值1.5，后面再根据自己的font-size*1.5计算line-height</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    总结：子元素继承到的是父元素的 计算值（一个绝对值）</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><h2 id="CSS-求值详细过程"><a href="#CSS-求值详细过程" class="headerlink" title="CSS 求值详细过程"></a>CSS 求值详细过程</h2><ul><li>filtering：有效选择器 有效属性值 符合 media ，筛选出所有<strong>声明值 Declared Values</strong></li><li>cascading：选出优先级最高的一条声明，得到<strong>层叠值 Cascaded Value</strong></li><li>defaulting：当层叠值为空时，用 继承 | 初始值，得到<strong>指定值 Specified Value</strong></li><li>resolving：将相对值、关键字转化为绝对值，如 em 转换为 px，%被转换为 px，相对路径转换为绝对路径，得到<strong>计算值 Computed Value</strong></li><li>formatting:将计算值进一步转换，比如百分比、关键字转换为绝对值，得到<strong>使用值 Used Value</strong></li><li>constraining：将小数像素转为整数，得到<strong>实际值</strong></li></ul><h1 id="CSS-排版原理"><a href="#CSS-排版原理" class="headerlink" title="CSS 排版原理"></a>CSS 排版原理</h1><h2 id="盒模型"><a href="#盒模型" class="headerlink" title="盒模型"></a>盒模型</h2><h3 id="content-box："><a href="#content-box：" class="headerlink" title="content-box："></a>content-box：</h3><ul><li>margin</li><li>border</li><li>padding</li><li>content（width height）</li></ul><h3 id="border-box"><a href="#border-box" class="headerlink" title="border-box"></a>border-box</h3><ul><li>margin</li><li>border （width = border + padding + content_width）</li><li>padding</li><li>content</li></ul><h2 id="height-100-（一般不用"><a href="#height-100-（一般不用" class="headerlink" title="height 100%（一般不用"></a>height 100%（一般不用</h2><ul><li>高度百分数，是相对于父元素的高度</li><li>若父元素无高度，则百分比高度不生效</li><li>用 vw vh 设置相对于屏幕的百分比高度，100vh 即 100%屏幕高度</li></ul><h2 id="padding-100"><a href="#padding-100" class="headerlink" title="padding 100%"></a>padding 100%</h2><ul><li>padding 百分比值，不论是 padding top、left，都是相对于<strong>父元素宽度</strong></li><li>应用：做固定宽高比的盒子.</li></ul><h2 id="margin-折叠"><a href="#margin-折叠" class="headerlink" title="margin 折叠"></a>margin 折叠</h2><p>上下相邻元素的间距会取其 margin 中较大值。</p><h2 id="border：四条边不同颜色"><a href="#border：四条边不同颜色" class="headerlink" title="border：四条边不同颜色"></a>border：四条边不同颜色</h2><ul><li>实际相邻的 border 交界处，是斜切的。</li><li>当元素的 width height 为 0 时，会得到四个三角形</li></ul><h1 id="background-repeating-conic-gradient-black-0-60deg-yellow-0-120deg"><a href="#background-repeating-conic-gradient-black-0-60deg-yellow-0-120deg" class="headerlink" title="background: repeating-conic-gradient(black 0 60deg, yellow 0 120deg);"></a>background: repeating-conic-gradient(black 0 60deg, yellow 0 120deg);</h1><h1 id="视觉格式化模型"><a href="#视觉格式化模型" class="headerlink" title="视觉格式化模型"></a>视觉格式化模型</h1><h2 id="Viewport-视口"><a href="#Viewport-视口" class="headerlink" title="Viewport 视口"></a>Viewport 视口</h2><p>浏览器的可视区域，所有元素都在 viewport 内</p><h2 id="块级元素-Block-level-Elements"><a href="#块级元素-Block-level-Elements" class="headerlink" title="块级元素(Block-level Elements)"></a>块级元素(Block-level Elements)</h2><ul><li>会被格式化成块状的元素</li><li>例如 p、div、section 等</li><li>将 display 设置为 block、list-item、table 会使元素变为块级</li></ul><h2 id="行内元素-Inline-level-Elements"><a href="#行内元素-Inline-level-Elements" class="headerlink" title="行内元素(Inline-level Elements)"></a>行内元素(Inline-level Elements)</h2><ul><li>不会为其内容生成块级框</li><li>让其内容分布在多行中</li><li>display 设置为 inline、inline-block、inline-table 会使元素变为行级</li></ul><hr><pre><code>“因为大佬比你知道的多”</code></pre>]]></content>
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 360fed </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>360FED课程——HTML</title>
      <link href="/2018/09/02/360FE-01-HTML/"/>
      <url>/2018/09/02/360FE-01-HTML/</url>
      <content type="html"><![CDATA[<h1 id="1-前端做什么"><a href="#1-前端做什么" class="headerlink" title="1. 前端做什么"></a>1. 前端做什么</h1><p>用 web 标准技术 html css js svg http 等</p><p>做界面与交互</p><p>功能+美观+无障碍+安全+兼容+性能+体验</p><h1 id="2-知识图谱-技术栈"><a href="#2-知识图谱-技术栈" class="headerlink" title="2. 知识图谱/技术栈"></a>2. 知识图谱/技术栈</h1><h2 id="2-1-语言"><a href="#2-1-语言" class="headerlink" title="2.1. 语言"></a>2.1. 语言</h2><ul><li>js</li><li>html</li><li>css</li><li>php</li></ul><h2 id="2-2-行业标准"><a href="#2-2-行业标准" class="headerlink" title="2.2. 行业标准"></a>2.2. 行业标准</h2><ul><li>DOM</li><li>ES2018</li><li>HTTP</li><li>JSON</li><li>XML</li></ul><h2 id="2-3-框架"><a href="#2-3-框架" class="headerlink" title="2.3. 框架"></a>2.3. 框架</h2><ul><li>React.js</li><li>Angular.js</li><li>jQuery</li><li>Vue.js</li><li>lodash</li></ul><h2 id="2-4-兼容性"><a href="#2-4-兼容性" class="headerlink" title="2.4. 兼容性"></a>2.4. 兼容性</h2><ul><li>IE 等浏览器</li><li>CSS3 新特性</li><li>HTML5 新特性</li><li>ES2018</li><li>移动端</li></ul><h2 id="2-5-编程思想"><a href="#2-5-编程思想" class="headerlink" title="2.5. 编程思想"></a>2.5. 编程思想</h2><ul><li>函数式编程</li><li>面向对象</li><li>设计模式</li></ul><h2 id="2-6-调试"><a href="#2-6-调试" class="headerlink" title="2.6. 调试"></a>2.6. 调试</h2><ul><li>浏览器</li><li>Fiddler http</li></ul><h2 id="2-7-工程化"><a href="#2-7-工程化" class="headerlink" title="2.7. 工程化"></a>2.7. 工程化</h2><ul><li>npm</li><li>webpack</li><li>postcss</li></ul><h2 id="2-8-安全性"><a href="#2-8-安全性" class="headerlink" title="2.8. 安全性"></a>2.8. 安全性</h2><ul><li>XSS</li><li>CSRF</li><li>加密解密</li><li>编解码</li></ul><h2 id="2-9-性能"><a href="#2-9-性能" class="headerlink" title="2.9. 性能"></a>2.9. 性能</h2><ul><li>优化规则</li><li>开发者工具</li><li>浏览器原理</li></ul><h2 id="2-10-团队协作"><a href="#2-10-团队协作" class="headerlink" title="2.10. 团队协作"></a>2.10. 团队协作</h2><ul><li>git/svn</li><li>编码规范/eslint</li><li>文档管理</li></ul><h2 id="2-11-交互设计"><a href="#2-11-交互设计" class="headerlink" title="2.11. 交互设计"></a>2.11. 交互设计</h2><h1 id="3-前端边界"><a href="#3-前端边界" class="headerlink" title="3. 前端边界"></a>3. 前端边界</h1><p>node、electron、react native、webRTC、WebGL、WEBAssembly</p><h1 id="4-HTML"><a href="#4-HTML" class="headerlink" title="4. HTML"></a>4. HTML</h1><h2 id="4-1-doctype"><a href="#4-1-doctype" class="headerlink" title="4.1. doctype"></a>4.1. doctype</h2><ul><li>指定文档使用的标准和版本；</li><li>浏览器根据 doctype 决定使用哪种渲染模式；</li><li>没写会以怪异模式渲染（盒模型不同等待）</li><li>渲染模式</li></ul><h2 id="4-2-语义化"><a href="#4-2-语义化" class="headerlink" title="4.2. 语义化"></a>4.2. 语义化</h2><ul><li>元素、属性、属性值都有特定含义，应该遵循语义来写 HTML</li><li>可读性、可维护性、搜索引擎优化、无障碍性</li></ul><h2 id="4-3-标签"><a href="#4-3-标签" class="headerlink" title="4.3. 标签"></a>4.3. 标签</h2><h3 id="4-3-1-flow-流式元素："><a href="#4-3-1-flow-流式元素：" class="headerlink" title="4.3.1. flow 流式元素："></a>4.3.1. flow 流式元素：</h3><ul><li>heading 标题</li><li>sectioning 章节</li><li>phrasing 段落内容 p h</li><li>Embedded 嵌入式内容 audio canvas</li><li>interactive 可交互性内容 button a</li><li>metadata 元数据元素 base link meta noscript script style title</li></ul><h3 id="4-3-2-看规范"><a href="#4-3-2-看规范" class="headerlink" title="4.3.2. 看规范"></a>4.3.2. 看规范</h3><h2 id="4-4-HTML-扩展"><a href="#4-4-HTML-扩展" class="headerlink" title="4.4. HTML 扩展"></a>4.4. HTML 扩展</h2><h3 id="4-4-1-meta-标签（增加元数据"><a href="#4-4-1-meta-标签（增加元数据" class="headerlink" title="4.4.1. meta 标签（增加元数据"></a>4.4.1. meta 标签（增加元数据</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 编码 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 指定http header --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Security-Policy"</span> <span class="attr">content</span>=<span class="string">"script-src 'self'"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- seo优化 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">"关键词"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"页面介绍"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 移动设备的viewport 初始缩放比例，视口宽度 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"initial-scale=1"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 关闭IOS电话号码识别 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"format-detection"</span> <span class="attr">content</span>=<span class="string">"telphone=no"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 360等双核浏览器 指定渲染内核 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"renderer"</span> <span class="attr">content</span>=<span class="string">"webkit"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 指定IE渲染模式 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"X-UA-Compatibla"</span> <span class="attr">content</span>=<span class="string">"IE=Edge"</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-4-2-data-属性（规范内-自定义的属性）"><a href="#4-4-2-data-属性（规范内-自定义的属性）" class="headerlink" title="4.4.2. data-*属性（规范内-自定义的属性）"></a>4.4.2. data-*属性（规范内-自定义的属性）</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">datasetAPI</span><br><span class="line">  <span class="tag">&lt;<span class="name">el</span> <span class="attr">data-id</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line">  el.dataset.id</span><br></pre></td></tr></table></figure><h3 id="4-4-3-link"><a href="#4-4-3-link" class="headerlink" title="4.4.3. link"></a>4.4.3. link</h3><ul><li>rel 属性（relation 关系，外部资源与当前页面的关系）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引入css --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">""</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    浏览器性能优化：dns预解析rel=dns-prefetch、资源预加载rel=prefetch、预渲染 rel=prerender</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"dns-prefetch"</span> <span class="attr">href</span>=<span class="string">""</span> /&gt;</span> <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"prefetch"</span> <span class="attr">href</span>=<span class="string">""</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"prerender"</span> <span class="attr">href</span>=<span class="string">""</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- favicon：rel=icon --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"icon"</span> <span class="attr">type</span>=<span class="string">"image/png"</span> <span class="attr">href</span>=<span class="string">""</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- RSS：rel=alternate --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"alternate"</span> <span class="attr">type</span>=<span class="string">"application/rss+xml"</span> <span class="attr">href</span>=<span class="string">""</span> /&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-4-4-JSON-LD"><a href="#4-4-4-JSON-LD" class="headerlink" title="4.4.4. JSON-LD"></a>4.4.4. JSON-LD</h3><p>LD：linkdata 链接的数据 (直接在页面嵌 json 数据)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"application/ld+json"</span>&gt;</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"@context"</span>: <span class="string">"http://schema.org"</span>,</span><br><span class="line">  <span class="string">"@type"</span>: <span class="string">"Person"</span>,</span><br><span class="line">  <span class="string">"name"</span>: <span class="string">"John Doe"</span>,</span><br><span class="line">  <span class="string">"jobTitle"</span>: <span class="string">"Graduate research assistant"</span>,</span><br><span class="line">  <span class="string">"affiliation"</span>: <span class="string">"University of Dreams"</span>,</span><br><span class="line">  <span class="string">"additionalName"</span>: <span class="string">"Johnny"</span>,</span><br><span class="line">  <span class="string">"url"</span>: <span class="string">"http://www.example.com"</span>,</span><br><span class="line">  <span class="string">"address"</span>: &#123;</span><br><span class="line">    <span class="string">"@type"</span>: <span class="string">"PostalAddress"</span>,</span><br><span class="line">    <span class="string">"streetAddress"</span>: <span class="string">"1234 Peach Drive"</span>,</span><br><span class="line">    <span class="string">"addressLocality"</span>: <span class="string">"Wonderland"</span>,</span><br><span class="line">    <span class="string">"addressRegion"</span>: <span class="string">"Georgia"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//  应用例如分享页面时的数据</span></span><br><span class="line"><span class="comment">//  搜索引擎能识别等等</span></span><br><span class="line"><span class="comment">//  分享链接带有一些标题图片等信息</span></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-5-Web-无障碍-Accessibility"><a href="#4-5-Web-无障碍-Accessibility" class="headerlink" title="4.5. Web 无障碍/Accessibility"></a>4.5. Web 无障碍/Accessibility</h2><ul><li>一些 Web 开发者规范：<ul><li>WCAG2.0</li><li>ARIA</li></ul></li><li>提升无障碍性<ul><li>img alt</li><li>noscript</li><li>input 和 label 对应</li><li>图片验证码与语音验证码</li><li>文字背景对比度</li><li>键盘可操作（tab modal focus）</li></ul></li></ul><h2 id="4-6-工具"><a href="#4-6-工具" class="headerlink" title="4.6. 工具"></a>4.6. 工具</h2><ul><li><a href="http://validator.w3.org/" target="_blank" rel="noopener">W3C Validator（检查 html 合法性）</a></li><li>emmet（插件）</li><li>markdown（适合写文档）</li></ul><h2 id="4-7-参考链接"><a href="#4-7-参考链接" class="headerlink" title="4.7. 参考链接"></a>4.7. 参考链接</h2><ul><li><a href="https://html.spec.whatwg.org/dev/" target="_blank" rel="noopener">HTML: The Living Standard</a></li><li><a href="https://hsivonen.fi/doctype/" target="_blank" rel="noopener">Activating Browser Modes with Doctype</a></li><li><a href="https://www.w3.org/standards/webdesign/accessibility" target="_blank" rel="noopener">Accessibility</a></li><li>Web Content Accessibility Guidelines 2.0</li><li><a href="http://html5doctor.com/element-index/" target="_blank" rel="noopener">HTML5 Doctor: Semantics</a></li></ul><h2 id="全局属性"><a href="#全局属性" class="headerlink" title="全局属性"></a>全局属性</h2><h3 id="class-id-style"><a href="#class-id-style" class="headerlink" title="class id style"></a>class id style</h3><h3 id="title"><a href="#title" class="headerlink" title="title"></a>title</h3><p>（兼容性最好的 tooltip😂）</p><h3 id="tabindex"><a href="#tabindex" class="headerlink" title="tabindex"></a>tabindex</h3><p>tab 键控制次序</p><h3 id="lang"><a href="#lang" class="headerlink" title="lang"></a>lang</h3><p>语言代码（利于语义化机器理解）（语言代码参考手册<a href="http://www.runoob.com/tags/html-language-codes.html）" target="_blank" rel="noopener">http://www.runoob.com/tags/html-language-codes.html）</a></p><h3 id="dir"><a href="#dir" class="headerlink" title="dir"></a>dir</h3><p>文本方向（rtl ltr auto）</p><h3 id="accesskey"><a href="#accesskey" class="headerlink" title="accesskey"></a>accesskey</h3><p>元素的键盘访问快捷键（例值为’h’则不同浏览器不同 OS 有不同的操作方式，例 chrome 是 alt + ‘h’）</p><h2 id="（HTML5-全局属性）"><a href="#（HTML5-全局属性）" class="headerlink" title="（HTML5 全局属性）"></a>（HTML5 全局属性）</h2><h3 id="data-属性"><a href="#data-属性" class="headerlink" title="data-*属性"></a>data-*属性</h3><p>属性名不要包含大写字母，在 data- 后必须至少有一个字符。<br>该属性可以是任何字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">el.getAttribute(&quot;data-xx&quot;)</span><br></pre></td></tr></table></figure><h3 id="hidden"><a href="#hidden" class="headerlink" title="hidden"></a>hidden</h3><p>不需要属性值，隐藏元素，原理是 display:none</p><h3 id="contenteditable"><a href="#contenteditable" class="headerlink" title="contenteditable"></a>contenteditable</h3><p>元素是否可编辑</p><h3 id="contextmenu"><a href="#contextmenu" class="headerlink" title="contextmenu"></a>contextmenu</h3><p>（说是目前只有 firefox 支持，亲测没效果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;p contextmenu=&quot;mymenu&quot;&gt;&lt;/p&gt;</span><br><span class="line">&lt;menu id=&quot;mymenu&quot;&gt;</span><br><span class="line">    &lt;command label=&quot;xxx&quot; onclick=&quot;fn()&quot;/&gt;</span><br><span class="line">    &lt;command label=&quot;xxx&quot; onclick=&quot;fn()&quot;/&gt;</span><br><span class="line">&lt;/menu&gt;</span><br></pre></td></tr></table></figure><h3 id="draggable：-与-HTML5drag-结合用"><a href="#draggable：-与-HTML5drag-结合用" class="headerlink" title="draggable：(与 HTML5drag 结合用)"></a>draggable：(与 HTML5drag 结合用)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;div id=<span class="string">"div1"</span> ondrop=<span class="string">"drop(event)"</span> ondragover=<span class="string">"allowDrop(event)"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;p id=<span class="string">"drag1"</span> draggable=<span class="string">"true"</span> ondragstart=<span class="string">"drag(event)"</span>&gt;这是一段可移动的段落。可把该段落拖入上下的矩形。&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;div id="div2" ondrop="drop(event)" ondragover="allowDrop(event)"&gt;&lt;/</span>div&gt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">allowDrop</span>(<span class="params">ev</span>)</span>&#123;</span><br><span class="line">ev.preventDefault();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">drag</span>(<span class="params">ev</span>)</span>&#123;</span><br><span class="line">ev.dataTransfer.setData(<span class="string">"Text"</span>,ev.target.id);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">drop</span>(<span class="params">ev</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> data=ev.dataTransfer.getData(<span class="string">"Text"</span>);</span><br><span class="line">ev.target.appendChild(<span class="built_in">document</span>.getElementById(data));</span><br><span class="line">ev.preventDefault();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="dropzone-属性"><a href="#dropzone-属性" class="headerlink" title="dropzone 属性:"></a>dropzone 属性:</h3><p>规定当被拖动的数据在拖放到元素上时，是否被复制### 动或链接,无浏览器支持</p><h3 id="sppelcheck："><a href="#sppelcheck：" class="headerlink" title="sppelcheck："></a>sppelcheck：</h3><p>对元素的文本进行拼写检查</p><h3 id="translate-属性："><a href="#translate-属性：" class="headerlink" title="translate 属性："></a>translate 属性：</h3><p>规定元素内容是否要翻译，=yes|no</p><h1 id="遗留"><a href="#遗留" class="headerlink" title="遗留"></a>遗留</h1><p>表单元素 属性 datalist select 下拉多选 input 的 multiple 属性 button 的 type 属性默认值<br>video 不能嵌套 img<br>p 不能嵌套 div<br>figure dfn cite 标签</p><hr><pre><code>“因为你永远不知道你知道的有多深”</code></pre>]]></content>
      
      <categories>
          
          <category> html </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 360fed </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>古老神奇的table</title>
      <link href="/2018/08/29/%E5%8F%A4%E8%80%81%E7%A5%9E%E5%A5%87%E7%9A%84table/"/>
      <url>/2018/08/29/%E5%8F%A4%E8%80%81%E7%A5%9E%E5%A5%87%E7%9A%84table/</url>
      <content type="html"><![CDATA[<h1 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">caption</span>&gt;</span>表格上方的居中标题<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">colgroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">col</span> <span class="attr">span</span>=<span class="string">"2"</span> <span class="attr">style</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">col</span> <span class="attr">style</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">colgroup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>ISBN<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Price<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tody</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>3476896<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>My first HTML<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>$53<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tfoot</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>3476896<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>My first HTML<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>$53<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tfoot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;caption&gt;、&lt;col&gt;、&lt;colgroup&gt;、&lt;thead&gt;、&lt;tfoot&gt; 以及 &lt;tbody&gt;</span><br></pre></td></tr></table></figure><h1 id="lt-caption-gt-标题"><a href="#lt-caption-gt-标题" class="headerlink" title="&lt;caption&gt;标题"></a><code>&lt;caption&gt;标题</code></h1><p>对齐方式：</p><ul><li>用 CSS 属性 “text-align” 和 “caption-side”</li><li>caption-side 只有 top 和 bootom 两个，即位于表格上方或下方</li><li>用 text-align 来控制左右位置</li></ul><p>无其他属性（HTML4.01 的 align 属性被 HTML5 删除）</p><h1 id="lt-colgroup-gt-和-lt-col-gt-：对列进行组合"><a href="#lt-colgroup-gt-和-lt-col-gt-：对列进行组合" class="headerlink" title="&lt;colgroup&gt; 和 &lt;col&gt; ：对列进行组合"></a><code>&lt;colgroup&gt;</code> 和 <code>&lt;col&gt;</code> ：对列进行组合</h1><p>对列进行组合</p><p>span 属性：定义横跨的列数,无 span 属性默认为 1（类似于 td 的 colspan 属性）</p><p>无其他属性（表示样式的 HTML4.01 属性均被 HTML5 删除）</p><h1 id="lt-thead-gt-lt-tbody-gt-lt-tfoot-gt"><a href="#lt-thead-gt-lt-tbody-gt-lt-tfoot-gt" class="headerlink" title="&lt;thead&gt; &lt;tbody&gt; &lt;tfoot&gt;"></a><code>&lt;thead&gt; &lt;tbody&gt; &lt;tfoot&gt;</code></h1><p>无属性（样式属性被 HTML5 删除）</p><p>默认不会影响表格的样式布局</p><p>优点：</p><ul><li>使浏览器有能力支持独立于表格表头和表格页脚的表格主体滚动。</li><li>当包含多个页面的长的表格被打印时，表格的表头和页脚可被打印在包含表格数据的每张页面上。</li><li>可以方便的定义 三部分 的样式</li></ul><h1 id="lt-table-gt"><a href="#lt-table-gt" class="headerlink" title="&lt;table&gt;"></a><code>&lt;table&gt;</code></h1><p>属性：border=1 或”” 规定是否有边框</p><p>无其他属性（表示样式的 HTML4.01 属性均被 HTML5 删除）</p><h1 id="表格行：-lt-tr-gt"><a href="#表格行：-lt-tr-gt" class="headerlink" title="表格行：&lt;tr&gt;"></a>表格行：<code>&lt;tr&gt;</code></h1><p>无属性（表示样式的 HTML4.01 属性均被 HTML5 删除）</p><h1 id="单元格：-lt-td-gt-和-lt-th-gt"><a href="#单元格：-lt-td-gt-和-lt-th-gt" class="headerlink" title="单元格：&lt;td&gt; 和 &lt;th&gt;"></a>单元格：<code>&lt;td&gt;</code> 和 <code>&lt;th&gt;</code></h1><p>差异</p><ul><li>th：文本粗体，居中</li><li>td：文本普通，左对齐</li></ul><p>属性</p><ul><li>colspan：横跨的列数</li><li>rowspan：横跨的行数</li><li>headers：header_id 单元格关联的一个或多个表头单元格</li><li>无其他属性（表示样式的 HTML4.01 属性均被 HTML5 删除）</li></ul><p>自动居中</p><ul><li>如果给 td 定义了尺寸，且子元素的尺寸小于 td 尺寸，子元素会自动垂直居中</li><li>居中后子元素与 td 的边距，不属于 td 的 padding 值，也不属于子元素的 margin 值</li><li>IE6 居中随便写，写不出来算我输</li></ul><h1 id="CSS-属性：border-collapse"><a href="#CSS-属性：border-collapse" class="headerlink" title="CSS 属性：border-collapse"></a>CSS 属性：border-collapse</h1><p>默认情况：单元格之间有间隔隔开，border-collapse:separate</p><p>一般不需要隔开：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">table</span> &#123;</span><br><span class="line">    <span class="attribute">border-collapse</span>: collapse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><pre><code>&quot;你大爷还是你大爷&quot;</code></pre>]]></content>
      
      <categories>
          
          <category> html </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> table </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>用chrome调试node.js服务端代码</title>
      <link href="/2018/07/30/%E7%94%A8chrome%E8%B0%83%E8%AF%95node.js/"/>
      <url>/2018/07/30/%E7%94%A8chrome%E8%B0%83%E8%AF%95node.js/</url>
      <content type="html"><![CDATA[<h3 id="开启调试命令"><a href="#开启调试命令" class="headerlink" title="开启调试命令"></a>开启调试命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">node --inspect app.js</span><br><span class="line"></span><br><span class="line">//在第一行就停下来等待调试,也可以使用</span><br><span class="line">node --inspect-brk app.js</span><br></pre></td></tr></table></figure><h3 id="debugger-地址"><a href="#debugger-地址" class="headerlink" title="debugger 地址"></a>debugger 地址</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//运行开启调试命令后，能看到类似如下的输出：</span><br><span class="line">Debugger listening on ws://127.0.0.1:9229/4dc825ec-a204-46f8-8edc-4afadc8da61a</span><br><span class="line">For help see https://nodejs.org/en/docs/inspector</span><br></pre></td></tr></table></figure><h3 id="在-chrome-中打开-debugger"><a href="#在-chrome-中打开-debugger" class="headerlink" title="在 chrome 中打开 debugger"></a>在 chrome 中打开 debugger</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在Chrome中打开chrome://inspect/#devices</span><br><span class="line">点击inspect进入调试界面</span><br></pre></td></tr></table></figure><h3 id="debugger-端口"><a href="#debugger-端口" class="headerlink" title="debugger 端口"></a>debugger 端口</h3><p>inspect 调试默认监听 9229 端口,可以通过下面的参数指定端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--inspect=9222</span><br></pre></td></tr></table></figure><hr><pre><code>用VSC、用webstorm啊对不起我懒(～﹃～)~zZ</code></pre>]]></content>
      
      <categories>
          
          <category> node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> chrome </tag>
            
            <tag> node.js </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Fullpage.js</title>
      <link href="/2018/04/19/Fullpage.js/"/>
      <url>/2018/04/19/Fullpage.js/</url>
      <content type="html"><![CDATA[<h2 id="主要功能有："><a href="#主要功能有：" class="headerlink" title="主要功能有："></a>主要功能有：</h2><ul><li>支持鼠标滚动</li><li>支持前进后退和键盘控制</li><li>多个回调函数</li><li>支持手机、平板触摸事件</li><li>支持 CSS3 动画</li><li>支持窗口缩放</li><li>窗口缩放时自动调整</li><li>可设置滚动宽度、背景颜色、滚动速度、 循环选项、回调、文本对齐方式等等</li></ul><h2 id="兼容性"><a href="#兼容性" class="headerlink" title="兼容性"></a>兼容性</h2><pre><code>jQuery 兼容:兼容 jQuery 1.7+。浏览器兼容:IE8+ ✔    Chrome ✔    Firefox ✔    Opera ✔    Safari ✔</code></pre><h2 id="引入文件"><a href="#引入文件" class="headerlink" title="引入文件"></a>引入文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;css/jquery.fullPage.css&quot;&gt;</span><br><span class="line">&lt;script src=&quot;js/jquery.fullPage.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;js/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;!-- jquery.easings.min.js 用于 easing 参数，也可以使用完整的 jQuery UI 代替，如果不需要设置 easing 参数，可去掉改文件 --&gt;</span><br><span class="line">&lt;script src=&quot;js/jquery.easings.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;!-- 如果 scrollOverflow 设置为 true，则需要引入 jquery.slimscroll.min.js，一般情况下不需要 --&gt;</span><br><span class="line">&lt;script src=&quot;js/jquery.slimscroll.min.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;dowebok&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;section&quot;&gt;</span><br><span class="line">        &lt;h3&gt;第一屏&lt;/h3&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;section&quot;&gt;</span><br><span class="line">        &lt;h3&gt;第二屏&lt;/h3&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;section&quot;&gt;</span><br><span class="line">        &lt;h3&gt;第三屏&lt;/h3&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;section&quot;&gt;</span><br><span class="line">        &lt;h3&gt;第四屏&lt;/h3&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">每个 section 代表一屏，默认显示“第一屏”，如果要指定加载页面时显示的“屏幕”，可以在对应的 section 加上 class=”active”，如：</span><br><span class="line"></span><br><span class="line">&lt;div class=&quot;section active&quot;&gt;第三屏&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">同时，可以在 section 内加入 slide，如：</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;dowebok&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;section&quot;&gt;第一屏&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;section&quot;&gt;第二屏&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;section&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;slide&quot;&gt;第三屏的第一屏&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;slide&quot;&gt;第三屏的第二屏&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;slide&quot;&gt;第三屏的第三屏&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;slide&quot;&gt;第三屏的第四屏&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;section&quot;&gt;第四屏&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">### JavaScript</span><br><span class="line">``</span><br><span class="line">$(function()&#123;</span><br><span class="line">    $(&apos;#dowebok&apos;).fullpage();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="详细配置见官方文档"><a href="#详细配置见官方文档" class="headerlink" title="详细配置见官方文档"></a>详细配置见官方文档</h2><p><a href="https://github.com/alvarotrigo/fullPage.js/tree/master/lang/chinese#fullpagejs" target="_blank" rel="noopener">Fullpage.js-Github</a></p><hr><pre><code>皮不动了...</code></pre>]]></content>
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> FullPage.js </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>MongoDB配置</title>
      <link href="/2018/03/06/MongoDB%E9%85%8D%E7%BD%AE/"/>
      <url>/2018/03/06/MongoDB%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<h2 id="官网下载安装"><a href="#官网下载安装" class="headerlink" title="官网下载安装"></a>官网下载安装</h2><pre><code>（我版本3.0.15[官网下载地址](https://www.mongodb.com/download-center?jmp=nav)</code></pre><h2 id="安装路径"><a href="#安装路径" class="headerlink" title="安装路径"></a>安装路径</h2><pre><code>将C:\Program Files\MongoDB\Server\3.0\bin(windows下的默认路径)添加到环境变量即可在任何位置使用mongo   使用数据库mongod  开机mongoimport  导入数据</code></pre><h2 id="新建"><a href="#新建" class="headerlink" title="新建"></a>新建</h2><pre><code>C:\data\db路径作为数据库</code></pre><h2 id="开机-cmd-命令："><a href="#开机-cmd-命令：" class="headerlink" title="开机 cmd 命令："></a>开机 cmd 命令：</h2><pre><code>mongod --dbpath c:\data\db（保持该cmd窗口才能正常运行mongodb）（其他数据操作另外开cmd）--dbpath是选择数据库文档所在文件夹即，mongodb中数据库有物理文件</code></pre><h2 id="use"><a href="#use" class="headerlink" title="use"></a>use</h2><pre><code>use 数据库名字使用一个数据库如果想新建数据库，也是use。use一个不存在的，就是新建。</code></pre><h2 id="查看当前所在数据库"><a href="#查看当前所在数据库" class="headerlink" title="查看当前所在数据库"></a>查看当前所在数据库</h2><pre><code>db</code></pre><h2 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h2><pre><code>数据库中不能直接插入数据，只能往集合(collections)中插入数据db.userid.insert({&quot;id&quot;:&quot;zengsuyu&quot;,&quot;password&quot;:&quot;123456789&quot;});此处的userid就是集合</code></pre><h2 id="删除当前所在的数据库"><a href="#删除当前所在的数据库" class="headerlink" title="删除当前所在的数据库"></a>删除当前所在的数据库</h2><pre><code>db.dropDatabase();</code></pre><h2 id="导入外部-json-数据"><a href="#导入外部-json-数据" class="headerlink" title="导入外部 json 数据"></a>导入外部 json 数据</h2><pre><code>用sublime在外部写好json数据库的形式，然后导入数据库：-db 数据库名（选择数据库--collection 集合名（ 选择集合--drop （把集合清空--file json文件名（选择要导入的json文件</code></pre><h2 id="查找数据"><a href="#查找数据" class="headerlink" title="查找数据:"></a>查找数据:</h2><pre><code>db.集合名.find() （列出所有数据db.集合名.find({&quot;key&quot;:&quot;value&quot;})  (精确匹配key为value值的数据db.集合名.find().sort(&quot;&quot;)  （升降排序</code></pre><h2 id="mongoose"><a href="#mongoose" class="headerlink" title="mongoose"></a>mongoose</h2><pre><code>不用直接操作数据库，操作对象，对象自动持久</code></pre><ul><li>连接 Mongo 数据库</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var mongoose = require(&apos;mongoose&apos;);</span><br><span class="line">var db = mongoose.connect(&apos;mongodb://localhost/geekChat&apos;);//；连接数据库</span><br></pre></td></tr></table></figure><ul><li>监听 open 事件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db.once(&apos;open&apos;, function (callback) &#123;</span><br><span class="line">    console.log(&quot;数据库成功连接&quot;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>创建类</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//创建了一个模型。猫的模型。所有的猫，都有名字，是字符串。“类”。</span><br><span class="line">var Cat = mongoose.model(&apos;Cat&apos;, &#123; name: String &#125;);</span><br><span class="line">//实例化一只猫</span><br><span class="line">var kitty = new Cat(&#123; name: &apos;Zildjian&apos; &#125;);</span><br><span class="line">//调用这只猫的save方法，保存这只猫</span><br><span class="line">kitty.save(function (err) &#123;</span><br><span class="line">  console.log(&apos;喵喵喵&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>创建模型</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var Schema = mongoose.Schema;</span><br><span class="line">var userScheMa = new Schema(&#123;</span><br><span class="line">    name: String,</span><br><span class="line">    password: String</span><br><span class="line">&#125;); //  定义了一个新的模型，但是此模式还未和users集合有关联</span><br><span class="line">exports.user = db.model(&apos;user&apos;, userScheMa); //  与users集合关联</span><br><span class="line"></span><br><span class="line">ref 数据表关联</span><br></pre></td></tr></table></figure><hr><pre><code>这次不皮了</code></pre>]]></content>
      
      <categories>
          
          <category> mongodb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mongodb </tag>
            
            <tag> mongoose </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Animate.css</title>
      <link href="/2018/02/01/Animate.css/"/>
      <url>/2018/02/01/Animate.css/</url>
      <content type="html"><![CDATA[<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul><li>它预设了抖动（shake）</li><li>闪烁（flash）</li><li>弹跳（bounce）</li><li>翻转（flip）</li><li>旋转（rotateIn/rotateOut）</li><li>淡入淡出（fadeIn/fadeOut）</li><li>等多达 60 多种动画效果</li></ul><h2 id="浏览器兼容："><a href="#浏览器兼容：" class="headerlink" title="浏览器兼容："></a>浏览器兼容：</h2><pre><code>只兼容支持 CSS3 animate 属性的浏览器，分别是：IE10+、Firefox、Chrome、Opera、Safari。</code></pre><h2 id="引入文件"><a href="#引入文件" class="headerlink" title="引入文件"></a>引入文件</h2><pre><code>&lt;link rel=&quot;stylesheet&quot; href=&quot;animate.min.css&quot;&gt;</code></pre><h2 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h2><pre><code>[Animate.css](https://daneden.github.io/animate.css/)[Github](https://github.com/daneden/animate.css)</code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1 class=&quot;animated infinite bounce delay-2s&quot;&gt;Example&lt;/h1&gt;</span><br></pre></td></tr></table></figure><ul><li>首先给元素加上 animated 类</li><li>第二个 infinate 使动画无限播放，可选</li><li>第三个 bounce 是具体的动画效果名称，<a href="https://daneden.github.io/animate.css/" target="_blank" rel="noopener">全部动效演示</a></li><li>第四个 delay-2s 是动效延迟播放 2s，可选</li></ul><h2 id="通过-Js-Jq-给元素添加-class："><a href="#通过-Js-Jq-给元素添加-class：" class="headerlink" title="通过 Js,Jq 给元素添加 class："></a>通过 Js,Jq 给元素添加 class：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(function()&#123;</span><br><span class="line">   $(&apos;#dowebok&apos;).addClass(&apos;animated bounce&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="更改-animate-css-的默认设置："><a href="#更改-animate-css-的默认设置：" class="headerlink" title="更改 animate.css 的默认设置："></a>更改 animate.css 的默认设置：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#dowebok &#123;</span><br><span class="line">    animate-duration: 2s;    //动画持续时间</span><br><span class="line">    animate-delay: 1s;    //动画延迟时间</span><br><span class="line">    animate-iteration-count: 2;    //动画执行次数</span><br><span class="line">&#125;</span><br><span class="line">//兼容各种浏览器代码，需要添加各浏览器前缀：</span><br><span class="line">#dowebok&#123;</span><br><span class="line">         -webkit-animation-duration: 3s;</span><br><span class="line">         -webkit-animation-delay: 4s;</span><br><span class="line">         -webkit-animation-iteration-count: 5;</span><br><span class="line"></span><br><span class="line">         -moz-animation-duration: 3s;</span><br><span class="line">         -moz-animation-delay: 4s;</span><br><span class="line">         -moz-animation-iteration-count: 5;</span><br><span class="line"></span><br><span class="line">         -o-animation-duration: 3s;</span><br><span class="line">         -o-animation-delay: 4s;</span><br><span class="line">         -0-animation-iteration-count: 5;</span><br><span class="line"></span><br><span class="line">         -ms-animation-duration: 3s;</span><br><span class="line">         -ms-animation-delay: 4s;</span><br><span class="line">         -ms-animation-iteration-count:5;</span><br><span class="line"></span><br><span class="line">         animation-duration: 3s;</span><br><span class="line">         animation-delay: 4s;</span><br><span class="line">         animation-iteration-count: 5;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="动画结束触发函数："><a href="#动画结束触发函数：" class="headerlink" title="动画结束触发函数："></a>动画结束触发函数：</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">".test"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">         $(<span class="keyword">this</span>).addClass(<span class="string">'animated fadeOut'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">var</span> animateEnd=(<span class="function"><span class="keyword">function</span>(<span class="params">el</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> animations=&#123;</span><br><span class="line">        animation:<span class="string">'animationend'</span>,</span><br><span class="line">        OAnimation:<span class="string">'oAnimationEnd'</span>,</span><br><span class="line">        MozAnimation:<span class="string">'mozAnimationEnd'</span></span><br><span class="line">        WebktiAnimation:<span class="string">'webkitAnimationEnd'</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> animations)&#123;</span><br><span class="line">        <span class="keyword">if</span>(el.style[i]!==<span class="literal">undefined</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> animations[i]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)(<span class="built_in">document</span>.createElement(<span class="string">'div'</span>));<span class="comment">//通过任意元素检测浏览器内核类型</span></span><br><span class="line">$(<span class="string">'.test'</span>).one(animateEnd, doSomething);</span><br><span class="line"><span class="comment">//$.one():为元素的特定事件绑定一个一次性的事件处理函数。</span></span><br></pre></td></tr></table></figure><h2 id="将以上过程整合为-Jq-扩展函数"><a href="#将以上过程整合为-Jq-扩展函数" class="headerlink" title="将以上过程整合为 Jq 扩展函数"></a>将以上过程整合为 Jq 扩展函数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">jq自定义函数</span><br><span class="line">$.fn.extend(&#123;</span><br><span class="line">    animateCss: function (animationName, callback) &#123;</span><br><span class="line">        var animationEnd = (function (el) &#123;</span><br><span class="line">            var animations = &#123;</span><br><span class="line">                animation: &apos;animationend&apos;,</span><br><span class="line">                OAnimation: &apos;oAnimationEnd&apos;,</span><br><span class="line">                MozAnimation: &apos;mozAnimationEnd&apos;,</span><br><span class="line">                WebkitAnimation: &apos;webkitAnimationEnd&apos;,</span><br><span class="line">            &#125;;</span><br><span class="line">            for (var t in animations) &#123;</span><br><span class="line">                if (el.style[t] !== undefined) &#123;</span><br><span class="line">                    return animations[t];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)(document.createElement(&apos;div&apos;));</span><br><span class="line">        this.addClass(&apos;animated &apos; + animationName).one(animationEnd, function () &#123;</span><br><span class="line">            //某些动画效果执行完后元素不可见又需要这个元素（实际遇过这个问题）</span><br><span class="line">            //eg.淡出、向左滑动等等，</span><br><span class="line">        //可能需要将 class 删除</span><br><span class="line">            $(this).removeClass(&apos;animated &apos; + animationName);</span><br><span class="line">            if (typeof callback === &apos;function&apos;) callback();</span><br><span class="line">        &#125;);</span><br><span class="line">        return this;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;);</span><br><span class="line">$(&apos;#yourElement&apos;).animateCss(&apos;bounce&apos;);</span><br><span class="line">$(&apos;#yourElement&apos;).animateCss(&apos;bounce&apos;, function () &#123;</span><br><span class="line">    // 事件结束触发的函数</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><hr><pre><code>为什么不自己写动画？别人比你写的好啊小辣鸡。</code></pre>]]></content>
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>基于Hexo &amp; GithubPages 的 博客</title>
      <link href="/2017/11/01/HelloHexo/"/>
      <url>/2017/11/01/HelloHexo/</url>
      <content type="html"><![CDATA[<p>选择用<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo</a>和<a href="https://pages.github.com/" target="_blank" rel="noopener">GithubPages</a>搭建个人博客，原因有三点：</p><ul><li>一是习惯于 markdown 笔记，一直以来都是用 md 来写笔记存在有道云，简单纯净；</li><li>二是每次写完笔记只需要把 md 文件丢在项目路径里，然后跑两行命令，就可以更新，只关注于笔记本身；</li><li>三是使用 GitHub Pages 不需要再自己买服务器搭。</li></ul><p>选择的 Hexo 主题：<a href="https://github.com/tufu9441/maupassant-hexo/" target="_blank" rel="noopener">Maupassant Theme</a></p><hr><pre><code>为什么用Hexo呢？因为懒。为什么用Github Pages呢？因为穷。</code></pre>]]></content>
      
      <categories>
          
          <category> daily </category>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> daily </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
