{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"source/favicon_bak_big.ico","path":"favicon_bak_big.ico","modified":0,"renderable":0},{"_id":"source/images/hexo1.jpg","path":"images/hexo1.jpg","modified":0,"renderable":0},{"_id":"source/images/hexo2.jpg","path":"images/hexo2.jpg","modified":0,"renderable":0},{"_id":"source/images/hexo3.jpg","path":"images/hexo3.jpg","modified":0,"renderable":0},{"_id":"source/images/profile.jpg","path":"images/profile.jpg","modified":0,"renderable":0},{"_id":"source/images/wxCode.jpg","path":"images/wxCode.jpg","modified":0,"renderable":0},{"_id":"source/images/Slogan.png","path":"images/Slogan.png","modified":0,"renderable":0},{"_id":"source/images/maupassant.jpg","path":"images/maupassant.jpg","modified":0,"renderable":0},{"_id":"source/images/profile_bak_big.jpg","path":"images/profile_bak_big.jpg","modified":0,"renderable":0},{"_id":"source/images/schedule v3.0.png","path":"images/schedule v3.0.png","modified":0,"renderable":0},{"_id":"source/images/devtools/020.png","path":"images/devtools/020.png","modified":0,"renderable":0},{"_id":"source/images/devtools/030.png","path":"images/devtools/030.png","modified":0,"renderable":0},{"_id":"source/images/devtools/060.png","path":"images/devtools/060.png","modified":0,"renderable":0},{"_id":"source/images/devtools/100.png","path":"images/devtools/100.png","modified":0,"renderable":0},{"_id":"source/images/devtools/110.png","path":"images/devtools/110.png","modified":0,"renderable":0},{"_id":"source/images/devtools/120.png","path":"images/devtools/120.png","modified":0,"renderable":0},{"_id":"source/images/devtools/132.png","path":"images/devtools/132.png","modified":0,"renderable":0},{"_id":"source/images/devtools/135.gif","path":"images/devtools/135.gif","modified":0,"renderable":0},{"_id":"source/images/devtools/140.png","path":"images/devtools/140.png","modified":0,"renderable":0},{"_id":"source/images/devtools/150.png","path":"images/devtools/150.png","modified":0,"renderable":0},{"_id":"source/images/devtools/160.png","path":"images/devtools/160.png","modified":0,"renderable":0},{"_id":"source/images/devtools/180.png","path":"images/devtools/180.png","modified":0,"renderable":0},{"_id":"source/images/devtools/190.png","path":"images/devtools/190.png","modified":0,"renderable":0},{"_id":"source/images/devtools/170.png","path":"images/devtools/170.png","modified":0,"renderable":0},{"_id":"source/images/devtools/191.png","path":"images/devtools/191.png","modified":0,"renderable":0},{"_id":"source/images/devtools/204.png","path":"images/devtools/204.png","modified":0,"renderable":0},{"_id":"source/images/devtools/205.png","path":"images/devtools/205.png","modified":0,"renderable":0},{"_id":"source/images/devtools/209.png","path":"images/devtools/209.png","modified":0,"renderable":0},{"_id":"source/images/devtools/210.png","path":"images/devtools/210.png","modified":0,"renderable":0},{"_id":"source/images/devtools/211.png","path":"images/devtools/211.png","modified":0,"renderable":0},{"_id":"source/images/post/002.png","path":"images/post/002.png","modified":0,"renderable":0},{"_id":"source/images/post/006.png","path":"images/post/006.png","modified":0,"renderable":0},{"_id":"source/images/stateofjs/10.png","path":"images/stateofjs/10.png","modified":0,"renderable":0},{"_id":"source/images/stateofjs/11.png","path":"images/stateofjs/11.png","modified":0,"renderable":0},{"_id":"source/images/stateofjs/12.png","path":"images/stateofjs/12.png","modified":0,"renderable":0},{"_id":"source/images/stateofjs/13.png","path":"images/stateofjs/13.png","modified":0,"renderable":0},{"_id":"source/images/stateofjs/14.png","path":"images/stateofjs/14.png","modified":0,"renderable":0},{"_id":"source/images/stateofjs/15.png","path":"images/stateofjs/15.png","modified":0,"renderable":0},{"_id":"source/images/stateofjs/16.png","path":"images/stateofjs/16.png","modified":0,"renderable":0},{"_id":"source/images/stateofjs/17.png","path":"images/stateofjs/17.png","modified":0,"renderable":0},{"_id":"source/images/stateofjs/19.png","path":"images/stateofjs/19.png","modified":0,"renderable":0},{"_id":"source/images/stateofjs/18.png","path":"images/stateofjs/18.png","modified":0,"renderable":0},{"_id":"source/images/stateofjs/2.png","path":"images/stateofjs/2.png","modified":0,"renderable":0},{"_id":"source/images/stateofjs/20.png","path":"images/stateofjs/20.png","modified":0,"renderable":0},{"_id":"source/images/stateofjs/21.png","path":"images/stateofjs/21.png","modified":0,"renderable":0},{"_id":"source/images/stateofjs/22.png","path":"images/stateofjs/22.png","modified":0,"renderable":0},{"_id":"source/images/stateofjs/23.png","path":"images/stateofjs/23.png","modified":0,"renderable":0},{"_id":"source/images/stateofjs/3.png","path":"images/stateofjs/3.png","modified":0,"renderable":0},{"_id":"source/images/stateofjs/4.png","path":"images/stateofjs/4.png","modified":0,"renderable":0},{"_id":"source/images/stateofjs/5.png","path":"images/stateofjs/5.png","modified":0,"renderable":0},{"_id":"source/images/stateofjs/6.png","path":"images/stateofjs/6.png","modified":0,"renderable":0},{"_id":"source/images/stateofjs/7.png","path":"images/stateofjs/7.png","modified":0,"renderable":0},{"_id":"source/images/stateofjs/8.png","path":"images/stateofjs/8.png","modified":0,"renderable":0},{"_id":"source/images/stateofjs/9.png","path":"images/stateofjs/9.png","modified":0,"renderable":0},{"_id":"themes/maupassant/source/css/default.css","path":"css/default.css","modified":0,"renderable":1},{"_id":"themes/maupassant/source/css/donate.css","path":"css/donate.css","modified":0,"renderable":1},{"_id":"themes/maupassant/source/donate/index.html","path":"donate/index.html","modified":0,"renderable":1},{"_id":"themes/maupassant/source/css/style.scss","path":"css/style.scss","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/AliPayQR.png","path":"img/AliPayQR.png","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/BTCQR.png","path":"img/BTCQR.png","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/WeChatQR.png","path":"img/WeChatQR.png","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/alipay.svg","path":"img/alipay.svg","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/bitcoin.svg","path":"img/bitcoin.svg","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/github.svg","path":"img/github.svg","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/like.svg","path":"img/like.svg","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/paypal.svg","path":"img/paypal.svg","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/wechat.svg","path":"img/wechat.svg","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/busuanzi.pure.mini.js","path":"js/busuanzi.pure.mini.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","path":"js/codeblock-resizer.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/donate.js","path":"js/donate.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/fancybox.js","path":"js/fancybox.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/share.js","path":"js/share.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/totop.js","path":"js/totop.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/smartresize.js","path":"js/smartresize.js","modified":0,"renderable":1},{"_id":"source/images/devtools/000.png","path":"images/devtools/000.png","modified":0,"renderable":0},{"_id":"source/images/devtools/011.png","path":"images/devtools/011.png","modified":0,"renderable":0},{"_id":"source/images/devtools/051.png","path":"images/devtools/051.png","modified":0,"renderable":0},{"_id":"source/images/devtools/130.png","path":"images/devtools/130.png","modified":0,"renderable":0},{"_id":"source/images/devtools/131.png","path":"images/devtools/131.png","modified":0,"renderable":0},{"_id":"source/images/devtools/133.gif","path":"images/devtools/133.gif","modified":0,"renderable":0},{"_id":"source/images/devtools/200.png","path":"images/devtools/200.png","modified":0,"renderable":0},{"_id":"source/images/devtools/203.gif","path":"images/devtools/203.gif","modified":0,"renderable":0},{"_id":"source/images/devtools/207.png","path":"images/devtools/207.png","modified":0,"renderable":0},{"_id":"source/images/devtools/211.gif","path":"images/devtools/211.gif","modified":0,"renderable":0},{"_id":"source/images/post/000.png","path":"images/post/000.png","modified":0,"renderable":0},{"_id":"source/images/post/003.png","path":"images/post/003.png","modified":0,"renderable":0},{"_id":"source/images/stateofjs/1.png","path":"images/stateofjs/1.png","modified":0,"renderable":0},{"_id":"source/images/devtools/010.png","path":"images/devtools/010.png","modified":0,"renderable":0},{"_id":"source/images/devtools/201.gif","path":"images/devtools/201.gif","modified":0,"renderable":0},{"_id":"source/images/devtools/212.gif","path":"images/devtools/212.gif","modified":0,"renderable":0},{"_id":"source/images/post/004.png","path":"images/post/004.png","modified":0,"renderable":0},{"_id":"source/images/post/005.png","path":"images/post/005.png","modified":0,"renderable":0},{"_id":"source/images/stateofjs/001.png","path":"images/stateofjs/001.png","modified":0,"renderable":0},{"_id":"themes/maupassant/source/js/gitment.browser.js","path":"js/gitment.browser.js","modified":0,"renderable":1},{"_id":"source/images/devtools/040.png","path":"images/devtools/040.png","modified":0,"renderable":0},{"_id":"source/images/devtools/208.gif","path":"images/devtools/208.gif","modified":0,"renderable":0},{"_id":"source/images/stateofjs/000.png","path":"images/stateofjs/000.png","modified":0,"renderable":0},{"_id":"source/images/devtools/050.png","path":"images/devtools/050.png","modified":0,"renderable":0},{"_id":"source/images/devtools/202.gif","path":"images/devtools/202.gif","modified":0,"renderable":0},{"_id":"source/images/devtools/207.gif","path":"images/devtools/207.gif","modified":0,"renderable":0},{"_id":"source/images/post/001.png","path":"images/post/001.png","modified":0,"renderable":0},{"_id":"source/images/devtools/206.gif","path":"images/devtools/206.gif","modified":0,"renderable":0},{"_id":"source/images/devtools/213.gif","path":"images/devtools/213.gif","modified":0,"renderable":0},{"_id":"source/images/gitbook/web_font01.png","path":"images/gitbook/web_font01.png","modified":0,"renderable":0},{"_id":"source/images/gitbook/web_font03.png","path":"images/gitbook/web_font03.png","modified":0,"renderable":0},{"_id":"source/images/gitbook/web_font02.png","path":"images/gitbook/web_font02.png","modified":0,"renderable":0},{"_id":"source/images/gitbook/web_font04.png","path":"images/gitbook/web_font04.png","modified":0,"renderable":0},{"_id":"source/images/grunt/grunt01.png","path":"images/grunt/grunt01.png","modified":0,"renderable":0},{"_id":"source/images/grunt/grunt02.png","path":"images/grunt/grunt02.png","modified":0,"renderable":0},{"_id":"source/images/grunt/grunt03.png","path":"images/grunt/grunt03.png","modified":0,"renderable":0},{"_id":"source/images/grunt/grunt04.png","path":"images/grunt/grunt04.png","modified":0,"renderable":0},{"_id":"source/images/devtools/214.png","path":"images/devtools/214.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/favicon.ico","hash":"9445630aff5bce00ea44758fc3de1da69ab1007b","modified":1562302834000},{"_id":"themes/maupassant/.travis.yml","hash":"0339959f29deddc365e8fe8bd85da524410b9a23","modified":1562302834000},{"_id":"themes/maupassant/LICENSE","hash":"f0ac2f92770650c9835183f79010c0d307b34acd","modified":1562302834000},{"_id":"themes/maupassant/_config.yml","hash":"d59066512ec301dcf67cd0fe8fe4df0487cb2917","modified":1562687013819},{"_id":"themes/maupassant/README.md","hash":"a3dcfa9b646980ee5811ec03b4c5786618b85ff9","modified":1562302834000},{"_id":"themes/maupassant/package.json","hash":"f092433469eb87362e831326425a6a5c3c9fea0d","modified":1562302834000},{"_id":"source/favicon_bak_big.ico","hash":"20054e2789b1a26d9ba34be4662a0910015b8c10","modified":1562302834000},{"_id":"source/_posts/2018_javascript_report.md","hash":"6a9798e1be9b733bd2ca4825d15518b3525d42f8","modified":1562302834000},{"_id":"source/_posts/2018_summary_and_2019_plan.md","hash":"1a071d6c2a8d426289548f5c45bc8bc02a64e144","modified":1562302834000},{"_id":"source/_posts/360fe_01_html.md","hash":"ad3206bea0535a4272e1fc00443679c2b40c9909","modified":1562302834000},{"_id":"source/_posts/360fe_02_css.md","hash":"2754e63d17ac958c588d5a3792ab8412bb9fedf5","modified":1562302834000},{"_id":"source/_posts/Animate.css.md","hash":"cc92936682b85c7ff56b87d23fd1444f1ac4758e","modified":1562302834000},{"_id":"source/_posts/Fullpage.js.md","hash":"0be4ccd24ecda5f97ac2afbcf909451547704b4b","modified":1562302834000},{"_id":"source/_posts/ancient_magical_table.md","hash":"d2b6b6ff5df8ed4e11dab0885ecf541a09020073","modified":1562302834000},{"_id":"source/_posts/debug_node.js_with_chrome.md","hash":"d1827d03a1ccacc5085aa23e79af12451b79326e","modified":1562302834000},{"_id":"source/_posts/hello_hexo.md","hash":"ec0db1e720e617933792a3efaff725345a2324fd","modified":1562305954000},{"_id":"source/_posts/highly_configurable_low_maintenance_blog_build_guide.md","hash":"4ac7ade4cd940585a77d9d802ab8ad58e80d946a","modified":1562302834000},{"_id":"source/_posts/mongoDB_configuration.md","hash":"43300455a9a34e6653cae094b7a4fc2563dba900","modified":1562302834000},{"_id":"source/_posts/nvm_for_windows.md","hash":"79fee5fdd257933010d7a66f2fb7940161c89e23","modified":1562302834000},{"_id":"source/_source/devtools_01.md","hash":"d478557fb5032df15cb9636efa028fd05b4d3a54","modified":1562302834000},{"_id":"source/_source/devtools_01_intro.md","hash":"9861c39c48beb0faf4bc22e721aee3d4c78f928f","modified":1562302834000},{"_id":"source/_source/devtools_02.md","hash":"9467f760a5b28d8a76eb7ab78742fffb3fb1f2c9","modified":1562302834000},{"_id":"source/_source/devtools_02_elements.md","hash":"3c649af6dfbccdaac434b6392014a32e63d8e6d2","modified":1562302834000},{"_id":"source/_source/devtools_03.md","hash":"d1c23c89c448bf709b944bc2eca1bc448ec18876","modified":1562302834000},{"_id":"source/_source/devtools_03_console.md","hash":"d71a24b3c4976088860d7842e69e4e222eb8524d","modified":1562302834000},{"_id":"source/_source/devtools_04.md","hash":"5482280bd072546cf6df51d95f016ce3dd814551","modified":1562302834000},{"_id":"source/_source/devtools_04_sources.md","hash":"c5dbf5ccdd75b394f9f0cf105aed65ddee253f55","modified":1562302834000},{"_id":"source/_source/devtools_05_network.md","hash":"3185c0ce155fe8e28ec6d222299ab1a90f6fca1f","modified":1562302834000},{"_id":"source/_source/devtools_06_performance.md","hash":"6ef64c09d91bdad74dcd9b590ba2bc6a4bdd6081","modified":1562302834000},{"_id":"source/_source/devtools_07_memory.md","hash":"f731ed3ca5ede3830fc6eb9dc6278a695b428fe9","modified":1562302834000},{"_id":"source/_source/devtools_intro_share.md","hash":"2fab6ed0e9534f3404bda00e647ebcb0f88625cb","modified":1562302834000},{"_id":"source/_source/vm in devtools.md","hash":"1375ef3c7d14caa30c4b12b6940db19b506803a5","modified":1562302834000},{"_id":"source/_source/写md笔记要点.md","hash":"8272a29ccecf49d65ad8bc89bf044aa71ad6fc46","modified":1562304936000},{"_id":"source/about/index.md","hash":"e5cb432e2dc2d83f194bbcb8bbbb17ca1a39b9ec","modified":1562564024000},{"_id":"source/cognition/index.md","hash":"db489ab330aee33d475e1f85e1a090cb90f6670c","modified":1562564934000},{"_id":"source/demo/index.md","hash":"51ecf9193306d0a84026f531c53c20a564fe537f","modified":1562302834000},{"_id":"source/fe_nav/index.md","hash":"0d49f915e045a30fbf9281ba33fd977dbbf93ba6","modified":1562779168000},{"_id":"source/gitbook/index.md","hash":"edb1d1032778698bc40015bda495d71a3afef99c","modified":1562302834000},{"_id":"source/images/hexo1.jpg","hash":"1cc06bda617b8e4a1f9c8367f36da71bef7e2dd1","modified":1562302834000},{"_id":"source/images/hexo2.jpg","hash":"7a720d31151cf9bee431d1497f8644e273475c20","modified":1562302834000},{"_id":"source/images/hexo3.jpg","hash":"fac5866e8108733189e45a1355a9ec44343503e3","modified":1562302834000},{"_id":"source/images/profile.jpg","hash":"27cd2ec742f33453f4a150df01e109b7c9e11e27","modified":1562302834000},{"_id":"source/images/wxCode.jpg","hash":"0216612a947f42797c6197d6b4551080cd1a81cb","modified":1562302834000},{"_id":"source/self_regulation/index.md","hash":"b195ac8e5e6983dfbfc5974b6be4944ffd9b99b1","modified":1562302834000},{"_id":"themes/maupassant/languages/de-DE.yml","hash":"5d3556a885e355a8c2da65ef3e7b3ee36a628bfa","modified":1562302834000},{"_id":"themes/maupassant/languages/en.yml","hash":"41ff52f530aea6ab4689a20c63695287025db4c4","modified":1562759334000},{"_id":"themes/maupassant/languages/es-ES.yml","hash":"58e1d04bcd1834fa9d2960e18e027abbbccbedc9","modified":1562302834000},{"_id":"themes/maupassant/languages/fr-FR.yml","hash":"b47906ec0abf867fb3e3360bc046b7afb68aee25","modified":1562302834000},{"_id":"themes/maupassant/languages/ko.yml","hash":"909a33e0befa6978e8e72157c6b415b48551ee31","modified":1562302834000},{"_id":"themes/maupassant/languages/ru.yml","hash":"2476a631f4d3c668de04af85a6c2c97ba2a57e96","modified":1562302834000},{"_id":"themes/maupassant/languages/zh-CN.yml","hash":"4ee918fe21523dbb5783296aff304839a947eed3","modified":1562564330000},{"_id":"themes/maupassant/languages/zh-TW.yml","hash":"ec492ec536b5b19130b48f686923e711f7ab2f40","modified":1562306198000},{"_id":"themes/maupassant/layout/archive.pug","hash":"550959ac7ca8b2dccedd7aa0f65603f3efccbaae","modified":1562302834000},{"_id":"themes/maupassant/layout/base-without-sidebar.pug","hash":"16c4d1079450f801b5ac079d3cc101856d8f387c","modified":1562302834000},{"_id":"themes/maupassant/layout/base.pug","hash":"1785b840a0703ee5fe3c067d510c3491f87e8201","modified":1562688322870},{"_id":"themes/maupassant/layout/index.pug","hash":"f552cf3097cf401d8a41939c824f1be695c9b38c","modified":1562302834000},{"_id":"themes/maupassant/layout/page.pug","hash":"c2679fe9c2068add8e5348d33ecef44496e99331","modified":1562302834000},{"_id":"themes/maupassant/layout/post.pug","hash":"8cdd779fe899330514cb429b4cf7e587aaa500e4","modified":1562306948000},{"_id":"themes/maupassant/layout/single-column.pug","hash":"0593f261dc208bb0b5c4232eb41eff597a291bd9","modified":1562302834000},{"_id":"themes/maupassant/layout/timeline.pug","hash":"84fbfc92ccdf291b491140d89557553141a5d3f9","modified":1562302834000},{"_id":"source/images/Slogan.png","hash":"d270bba16d21a8207e1a3abe7efa646ac83506e3","modified":1562302834000},{"_id":"source/images/maupassant.jpg","hash":"fa0e39d4cca3899571140ebf259d6a6045c234bb","modified":1562302834000},{"_id":"source/images/profile_bak_big.jpg","hash":"02c503eebd742f9aac901cd3d2e9cd1a2db7cbf4","modified":1562302834000},{"_id":"source/images/schedule v3.0.png","hash":"85d53ede58a8ce03d337c287a29cc12c4bb97e75","modified":1562302834000},{"_id":"source/images/devtools/020.png","hash":"20a3c5c04916e17ab616d953f8b2bc9cb63938de","modified":1562302834000},{"_id":"source/images/devtools/030.png","hash":"804c693c0f5a0743db2da304d6ccf3eec593ed22","modified":1562302834000},{"_id":"source/images/devtools/060.png","hash":"eb8f29bf8fa98e16bbf1a2ec435ed2cecd8974f0","modified":1562302834000},{"_id":"source/images/devtools/100.png","hash":"ddd33280b017b4491fb12471caaa3ac1735ef6f6","modified":1562302834000},{"_id":"source/images/devtools/110.png","hash":"eba2980ad9b9df66e7fe29f1fdd4ea74d3320f6d","modified":1562302834000},{"_id":"source/images/devtools/120.png","hash":"db63189d91e50f56ea85ff69d89bf4e719c1da1e","modified":1562302834000},{"_id":"source/images/devtools/132.png","hash":"c908c9855df43d54c4f7180c666530802b905811","modified":1562302834000},{"_id":"source/images/devtools/135.gif","hash":"fd7bfff0563b7e31efb305a7b5243b6e95a233a7","modified":1562302834000},{"_id":"source/images/devtools/140.png","hash":"86ec1c8dc95294346f9f3929423d4644909a86a9","modified":1562302834000},{"_id":"source/images/devtools/150.png","hash":"5495d072f6f1aeb63eb599d1ad6ebdae09923ec6","modified":1562302834000},{"_id":"source/images/devtools/160.png","hash":"ee08ea8e09a00a974c22e53829cd54bfcba856c8","modified":1562302834000},{"_id":"source/images/devtools/180.png","hash":"652b613e0d55f3c9b46598f01cd4d018e1d96b4d","modified":1562302834000},{"_id":"source/images/devtools/190.png","hash":"84112be795cc0cd097ff6f5d2eb8f45fed2270f7","modified":1562302834000},{"_id":"source/images/devtools/170.png","hash":"d7307a319a2ea73234bd426b9a6a656f6b57ad0d","modified":1562302834000},{"_id":"source/images/devtools/191.png","hash":"168599000723952d3787dcfb802a6dbd6d6b1eb6","modified":1562302834000},{"_id":"source/images/devtools/204.png","hash":"16f6eb34d710a2b02aea3c1b7b19c0a0ddc40442","modified":1562302834000},{"_id":"source/images/devtools/205.png","hash":"e0d81980e1f494df7706ef6649d9b4dede2d0f3b","modified":1562302834000},{"_id":"source/images/devtools/209.png","hash":"35459e6f0a7d47d8b11979a7363bd50c6c2b4dce","modified":1562302834000},{"_id":"source/images/devtools/210.png","hash":"022d95969ca44093e4aff8260dfea63ac13f35ed","modified":1562302834000},{"_id":"source/images/devtools/211.png","hash":"44166d76b38a081b49b28ffbec937c059d779c22","modified":1562302834000},{"_id":"source/images/post/002.png","hash":"b5c2f919135697d19a37d81fe42c915b827d7e4e","modified":1562302834000},{"_id":"source/images/post/006.png","hash":"68b441ee371899a31be5ac1e9ad28801e3188707","modified":1562302834000},{"_id":"source/images/stateofjs/10.png","hash":"ea8c6838aa1c91d29f65b02e652ea66138aa86e6","modified":1562302834000},{"_id":"source/images/stateofjs/11.png","hash":"3efbb1fa7a72542f2c31e2ac76c95c5a11bc0ae3","modified":1562302834000},{"_id":"source/images/stateofjs/12.png","hash":"e165ead054c37823e3136d7f20b0bb6bf3c1db18","modified":1562302834000},{"_id":"source/images/stateofjs/13.png","hash":"79f5658c2e2fd12e207f394e4fe7a9352d61b5dc","modified":1562302834000},{"_id":"source/images/stateofjs/14.png","hash":"46e06656c42b74d32d11eba0ec55e28d8f38e69e","modified":1562302834000},{"_id":"source/images/stateofjs/15.png","hash":"1b126657a5c0feab23cb2b44e07f158a4a3d4bf2","modified":1562302834000},{"_id":"source/images/stateofjs/16.png","hash":"1567896a8a70f44f5cdebbf272100138976f59d1","modified":1562302834000},{"_id":"source/images/stateofjs/17.png","hash":"b5e71e6035e4920eb0e96c8e8be42520a4dd826f","modified":1562302834000},{"_id":"source/images/stateofjs/19.png","hash":"e96721bc1fae4f3a6061ca3820e87547f373f8c1","modified":1562302834000},{"_id":"source/images/stateofjs/18.png","hash":"f76eb54fe2f58cbe97bbc94f6881bb0387e9a48b","modified":1562302834000},{"_id":"source/images/stateofjs/2.png","hash":"5826deb5ff27ff26fe34396d51aff6e85b4615f8","modified":1562302834000},{"_id":"source/images/stateofjs/20.png","hash":"c2b23b3f72d922aaf06345d627f4c2e910c61423","modified":1562302834000},{"_id":"source/images/stateofjs/21.png","hash":"0e634f4ad7be66fd1e1184ebb44fe87b594b8c5f","modified":1562302834000},{"_id":"source/images/stateofjs/22.png","hash":"930ae81b060233ba30e6d4f7b7721d547d455aad","modified":1562302834000},{"_id":"source/images/stateofjs/23.png","hash":"04fce4509a18a8e7e3ea853fae0f20b9b71514b4","modified":1562302834000},{"_id":"source/images/stateofjs/3.png","hash":"8ba961493d2e87fd9d117f51d95aa1f97a53d85c","modified":1562302834000},{"_id":"source/images/stateofjs/4.png","hash":"6fc7177289d99308fab327c4d95b53e92b2d4a78","modified":1562302834000},{"_id":"source/images/stateofjs/5.png","hash":"79cf6c61431003a9d901ba8a396212ee8caa87cd","modified":1562302834000},{"_id":"source/images/stateofjs/6.png","hash":"b944f703a919d79369b113494d4fd32fa9b47236","modified":1562302834000},{"_id":"source/images/stateofjs/7.png","hash":"1618150df07c867acec4a2208bd4324aab27e48f","modified":1562302834000},{"_id":"source/images/stateofjs/8.png","hash":"cdb87a31ad7f2f12b57a3b68d4d197c7d17e1963","modified":1562302834000},{"_id":"source/images/stateofjs/9.png","hash":"e2b23fa1d0929a9f6d4b352f806e876c42462343","modified":1562302834000},{"_id":"themes/maupassant/layout/_partial/after_footer.pug","hash":"bf5e24891d18c19b31ef7887cd22ae2a74f9ad4b","modified":1562302834000},{"_id":"themes/maupassant/layout/_partial/comments.pug","hash":"69fa52eac8dfcf8073db7e540a4b0e87f41654f6","modified":1562302834000},{"_id":"themes/maupassant/layout/_partial/footer.pug","hash":"c7d8dae0e70f152a109c4ae402d77ca20342ff4c","modified":1562759334000},{"_id":"themes/maupassant/layout/_partial/head.pug","hash":"a6c2cfdfa82c56ce3a866bd8c49f851e47b1caca","modified":1562682552751},{"_id":"themes/maupassant/layout/_partial/helpers.pug","hash":"5e6e4157cb5f581b79ff6d31e94cb6191b845542","modified":1562302834000},{"_id":"themes/maupassant/layout/_partial/mathjax.pug","hash":"e3a5e2d44ac261e3168a0b10e968f9a57bc5a237","modified":1562302834000},{"_id":"themes/maupassant/layout/_partial/mathjax2.pug","hash":"75cfa2cda3ff0681d03bbe89326818b824e5e524","modified":1562302834000},{"_id":"themes/maupassant/layout/_partial/paginator.pug","hash":"53f9cb77448e84a98da5eb688e2e12b173c555bb","modified":1562302834000},{"_id":"themes/maupassant/layout/_partial/post_nav.pug","hash":"a2d698c84bb6da08195fe870dbd7215f65388d3f","modified":1562302834000},{"_id":"themes/maupassant/layout/_partial/tag.pug","hash":"0f0e6770e9d5dd8040e330d71bbbfadd2df36a28","modified":1562302834000},{"_id":"themes/maupassant/layout/_partial/totop.pug","hash":"8225bbc3cdb9648bc2e6872e5c616a9a1e4def4f","modified":1562302834000},{"_id":"themes/maupassant/layout/_partial/wordcount.pug","hash":"004c8a3edc19d428179b83a0f97eae3c1a6d3cfa","modified":1562302834000},{"_id":"themes/maupassant/layout/_widget/category.pug","hash":"7c6aed762934ca51aa2669b886254da24b77bc14","modified":1562302834000},{"_id":"themes/maupassant/layout/_widget/links.pug","hash":"c45aa7ec00158579e58f1f8dfd890447bb5e5e54","modified":1562302834000},{"_id":"themes/maupassant/layout/_widget/recent_comments.pug","hash":"4102d446f13b02ff617f055c2a8f726bca12744a","modified":1562302834000},{"_id":"themes/maupassant/layout/_widget/recent_posts.pug","hash":"d4123e901253e56370efb9a2e2f1af6687c181e0","modified":1562302834000},{"_id":"themes/maupassant/layout/_widget/search.pug","hash":"226340ba7d09f2023aed05fdd4aab3ce52330ad0","modified":1562302834000},{"_id":"themes/maupassant/layout/_widget/tag.pug","hash":"132f049ce677d0e38f50073174c4ee4b825d4a06","modified":1562302834000},{"_id":"themes/maupassant/source/css/default.css","hash":"c245680e6900ca43514d2023bf1f0e1b539992dc","modified":1562302834000},{"_id":"themes/maupassant/source/css/donate.css","hash":"f019876946aeb80e567ece250d54c1327c794583","modified":1562302834000},{"_id":"themes/maupassant/source/donate/index.html","hash":"bd5cbe475b7bce89a8c96375c56c8e3e188d6afc","modified":1562302834000},{"_id":"themes/maupassant/source/css/style.scss","hash":"66ff27ca1b8da56aea191d985b6aa3cc3cbd9578","modified":1562759334000},{"_id":"themes/maupassant/source/img/AliPayQR.png","hash":"7787b5d91cbf0e19a1260df24f7d949771c7d45b","modified":1562302834000},{"_id":"themes/maupassant/source/img/BTCQR.png","hash":"7d1c80f953bfb6f0a37d432b04c936ea165bfd97","modified":1562302834000},{"_id":"themes/maupassant/source/img/WeChatQR.png","hash":"8c41aca7883e5ff714c56556f5fff8e7e7c38093","modified":1562302834000},{"_id":"themes/maupassant/source/img/alipay.svg","hash":"46cc0552a9f6d700d618db3fcad25e1b8e697e36","modified":1562302834000},{"_id":"themes/maupassant/source/img/bitcoin.svg","hash":"635f7cca5e675d192be2717788175c7a2146013a","modified":1562302834000},{"_id":"themes/maupassant/source/img/github.svg","hash":"90ba9a3b0dc19e70e742a39b014194f801e00f97","modified":1562302834000},{"_id":"themes/maupassant/source/img/like.svg","hash":"22a2754dc454d7b0321b70914fb2936b8d2ea8ab","modified":1562302834000},{"_id":"themes/maupassant/source/img/paypal.svg","hash":"92f3bc495f20a0190d3041be03345c46d6238c25","modified":1562302834000},{"_id":"themes/maupassant/source/img/wechat.svg","hash":"330496ad42446a29f37a2b97fc388ebd77a8cb9f","modified":1562302834000},{"_id":"themes/maupassant/source/js/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1562302834000},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","hash":"5d0b786d60bf225d9eabcc9cece2719ff4d9b6cd","modified":1562302834000},{"_id":"themes/maupassant/source/js/donate.js","hash":"89f0b9d9d0c4fce183161d29c2a44aef750efb27","modified":1562302834000},{"_id":"themes/maupassant/source/js/fancybox.js","hash":"13c4781570339f4fba76a3d7f202e442817dd605","modified":1562302834000},{"_id":"themes/maupassant/source/js/search.js","hash":"0c0630e2ef213701d393b041f10572e951a27985","modified":1562302834000},{"_id":"themes/maupassant/source/js/share.js","hash":"a2f9de374523dc7f2ddb90ed5f24b668c20d9272","modified":1562302834000},{"_id":"themes/maupassant/source/js/totop.js","hash":"7dbf8fcf582a4fb6eb9b2c60d6de9f9c2091ec4c","modified":1562302834000},{"_id":"themes/maupassant/source/js/smartresize.js","hash":"3ef157fd877167e3290f42c67a624ea375a46c24","modified":1562302834000},{"_id":"source/images/devtools/000.png","hash":"cc3498ea5ef888a78868c473fcd25b76ba6e62c5","modified":1562302834000},{"_id":"source/images/devtools/011.png","hash":"198e745a5d1729cb59d40084c79b4f670c68e3f8","modified":1562302834000},{"_id":"source/images/devtools/051.png","hash":"c331ce7d6c91967c72d8132ae6fa4fd47e349a54","modified":1562302834000},{"_id":"source/images/devtools/130.png","hash":"ffa1f9ecd4bdd0c41d002d883f89b423d53f881b","modified":1562302834000},{"_id":"source/images/devtools/131.png","hash":"163aa1ff1ccf47e45a99a6dff5fd19101118cb37","modified":1562302834000},{"_id":"source/images/devtools/133.gif","hash":"1aa7fc9ad2b024b3f5fce63add221ae5f5e5ea6d","modified":1562302834000},{"_id":"source/images/devtools/200.png","hash":"4fed1fdfbd0beda6d803720479f6464d88982515","modified":1562302834000},{"_id":"source/images/devtools/203.gif","hash":"a5950c2e1b1fdecdd5680866244e0809e91afcb6","modified":1562302834000},{"_id":"source/images/devtools/207.png","hash":"0e2afa90952c38932e87676b83e89b8ab0951b26","modified":1562302834000},{"_id":"source/images/devtools/211.gif","hash":"a8a2e27f0f85490bec6fbe3cbd0f96cd00d38d26","modified":1562302834000},{"_id":"source/images/post/000.png","hash":"efdc1476a2bd9af5c9e9ecba3240b0f0fd018d1f","modified":1562302834000},{"_id":"source/images/post/003.png","hash":"77e199bb723835b4989290731b9a4e39fede67f3","modified":1562302834000},{"_id":"source/images/stateofjs/1.png","hash":"d87af032052cfdc70f3786234d9bc922ca526d04","modified":1562302834000},{"_id":"source/images/devtools/010.png","hash":"2bcf243f9f3c22c8e7c7d119f14443457596c6d3","modified":1562302834000},{"_id":"source/images/devtools/201.gif","hash":"a55d80037ca54a18934e2a13c07c3cfe48251c8d","modified":1562302834000},{"_id":"source/images/devtools/212.gif","hash":"932a547023ac293373d0a7d0a99103920a75b693","modified":1562302834000},{"_id":"source/images/post/004.png","hash":"3e8c5fd447b95e73daee4477701b7d0690217a3a","modified":1562302834000},{"_id":"source/images/post/005.png","hash":"7ca58e79e362dc47225100e63641359aff4dd744","modified":1562302834000},{"_id":"source/images/stateofjs/001.png","hash":"61ea320c9a2580c68884cbb100f5a3432adebffe","modified":1562302834000},{"_id":"themes/maupassant/source/js/gitment.browser.js","hash":"7f51928392c2c38ad20928f4134ec89f307598bc","modified":1562302834000},{"_id":"source/images/devtools/040.png","hash":"901acbb786cef1cc8a21b08613670ea3e344895a","modified":1562302834000},{"_id":"source/images/devtools/208.gif","hash":"768a2842d3270857a7cc02ead069287005d539bc","modified":1562302834000},{"_id":"source/images/stateofjs/000.png","hash":"39990e5515da56e3179274c33c4d6adcfc32afc0","modified":1562302834000},{"_id":"source/images/devtools/050.png","hash":"2de60daf6e505379587d4e502a1bccf50fe6b86c","modified":1562302834000},{"_id":"source/images/devtools/202.gif","hash":"8d098caa60ac7728d4d817cbba7f36c056f9a31b","modified":1562302834000},{"_id":"source/images/devtools/207.gif","hash":"8fa8fae5d8fce89678326a4997f3e1993792daf9","modified":1562302834000},{"_id":"source/images/post/001.png","hash":"744026cb0a6f80dd336d94765170fe7c5dd812d2","modified":1562302834000},{"_id":"source/images/devtools/206.gif","hash":"7017d0776ca9fea8232eba98082e0b2cd2269033","modified":1562302834000},{"_id":"source/images/devtools/213.gif","hash":"38f16d2021930f25ede0fa59d894ae306ea524d4","modified":1562302834000},{"_id":"source/_source/devtools_intro_share.pdf","hash":"2af27c4c8c9ffbbdb2a71ca8ecfebbd2938a0e2c","modified":1562302834000},{"_id":"public/search.xml","hash":"e958140636e256ae0d5c72beb8f19f525e84b56a","modified":1562780994284},{"_id":"public/about/index.html","hash":"91e569479aeb04f07de59b2139342c02e4986f52","modified":1562780994340},{"_id":"public/cognition/index.html","hash":"32e80bd9c0dbb8f047fe32aa1b8fa769c262268f","modified":1562780994340},{"_id":"public/demo/index.html","hash":"bf22240bf3314c0d33be50c2ed5f801471daa7ff","modified":1562780994342},{"_id":"public/fe_nav/index.html","hash":"39ba5593edc62646dddf1424cae88da7e3f3d1d1","modified":1562780994342},{"_id":"public/gitbook/index.html","hash":"cea601d524d80df4805cb18f5ce5d974ae0cdd5a","modified":1562780994342},{"_id":"public/self_regulation/index.html","hash":"04df7030be2632e2ca7cecc393f52a7807ec9181","modified":1562780994342},{"_id":"public/hello_hexo/index.html","hash":"ababdeaa7d1abcf24ee8707206507ef5d865d4ac","modified":1562780994342},{"_id":"public/2018_summary_and_2019_plan/index.html","hash":"eee3bd140641cb9bf563cd6955b23ecd9fe51f31","modified":1562780994342},{"_id":"public/nvm_for_windows/index.html","hash":"1e92148310f21d8413d11c2fa75b3461684e170c","modified":1562759406857},{"_id":"public/debug_node.js_with_chrome/index.html","hash":"c93e26c98a403472669044e509d9e6928632c813","modified":1562759406857},{"_id":"public/Fullpage.js/index.html","hash":"ce4fd826410568be98b366138aaad89554aa4a2f","modified":1562759406857},{"_id":"public/mongoDB_configuration/index.html","hash":"30d660fac1cd395f3a144f2d979a57014a0c45cd","modified":1562759406857},{"_id":"public/archives/index.html","hash":"6177ab7cc16619fd8e7d2543bfe64f737459f198","modified":1562780994342},{"_id":"public/archives/2018/index.html","hash":"550fabf1b0e4c358076c5c71d8a1d4bd0796700f","modified":1562780994342},{"_id":"public/archives/2018/02/index.html","hash":"e4ed3f70e6c59769e69241061f82c02ab966cca5","modified":1562780994342},{"_id":"public/archives/2018/03/index.html","hash":"5ff700b47c0f5a1a9672f480276e688dceffab2b","modified":1562780994342},{"_id":"public/archives/2018/04/index.html","hash":"516653907cf9ccf8b6c7bf2479f5fec58d4f84ee","modified":1562780994342},{"_id":"public/archives/2018/07/index.html","hash":"9e073ad88b16d522bd70b47244b3f05819ae6ff0","modified":1562780994342},{"_id":"public/archives/2018/08/index.html","hash":"d10b6dce6f6cc9ce1f15a949559561c6e4d62534","modified":1562780994342},{"_id":"public/archives/2018/09/index.html","hash":"549527d6f74c8427d1421d0638d6392a4a9a5c52","modified":1562780994342},{"_id":"public/archives/2018/12/index.html","hash":"7cd62bb35da277165626a9511729fe711f22b292","modified":1562780994342},{"_id":"public/archives/2019/index.html","hash":"40e22fc1bb6e02fa707ca817d3fccf9e9d68d28f","modified":1562780994342},{"_id":"public/archives/2019/01/index.html","hash":"30852d6020761f0f188bbfa142d18b677981bc3d","modified":1562780994342},{"_id":"public/archives/2099/index.html","hash":"ecd60d6fc58a476b6945c74df835b4500f53dfdd","modified":1562780994342},{"_id":"public/archives/2099/12/index.html","hash":"92dde6ce465a992c884011d385889fe8426a78d6","modified":1562780994342},{"_id":"public/index.html","hash":"4f2b0319442482dc9dc953530b3ea4a15e22253d","modified":1562780994343},{"_id":"public/categories/FED/index.html","hash":"228d72a88d9272a1f898d42ac0e1182631e93c80","modified":1562780994342},{"_id":"public/categories/ScarSu/index.html","hash":"2908277233c02c1dd8cf180aff50b670cea508b3","modified":1562780994342},{"_id":"public/categories/html/index.html","hash":"06ddcae74454660f56abb4aa1d49de4fd2921c86","modified":1562780994342},{"_id":"public/categories/css/index.html","hash":"a1f15a3707efd4e92badb5cb1d4da985babc1385","modified":1562780994342},{"_id":"public/categories/js/index.html","hash":"685719aa90c91aa682d6cda0881b2af1f6ed04c9","modified":1562780994342},{"_id":"public/categories/node/index.html","hash":"9e8341d48bf12f8124e700a03c33465050690470","modified":1562780994342},{"_id":"public/categories/daily/index.html","hash":"39143323c0fe80ef95541f35be9019ce0092a34a","modified":1562780994343},{"_id":"public/categories/hexo/index.html","hash":"6c6ce4d6383053aa77ebc6f80992e808764920bd","modified":1562780994343},{"_id":"public/categories/mongodb/index.html","hash":"de97c016fcb53fe5c10dd419bbc6b37c309e2925","modified":1562780994343},{"_id":"public/categories/daily/blog/index.html","hash":"72e4b721d1bef7bffa035c90b8e3dca6f914523b","modified":1562780994343},{"_id":"public/tags/stateogjs/index.html","hash":"ab0209300a0d1f11a91df586b897231e95415b45","modified":1562780994343},{"_id":"public/tags/ScarSu/index.html","hash":"9e67478f484217a3502bd16a31ec9ad45663a541","modified":1562780994343},{"_id":"public/tags/360fed/index.html","hash":"ba71d10c4db34c103fb9d59e01aa9766c74050c3","modified":1562780994343},{"_id":"public/tags/html/index.html","hash":"46e7b2a52c48dacc90b7d73a0763817a4c986851","modified":1562780994343},{"_id":"public/tags/css/index.html","hash":"cf91e1b2f1a2eea66f88a3f873f1e03f0b2618cb","modified":1562780994343},{"_id":"public/tags/js/index.html","hash":"c155e404b531fdea68205083ad9244d8d001b848","modified":1562780994343},{"_id":"public/tags/FullPage-js/index.html","hash":"93fb9e95d35b8750b3a280807ad5d21def2afcad","modified":1562780994343},{"_id":"public/tags/table/index.html","hash":"8c5b447691f820e3f220cd59941931e7a17b5c86","modified":1562780994343},{"_id":"public/tags/chrome/index.html","hash":"b2ef38f5e5790f0df61599df84f6e5d2617c4081","modified":1562780994343},{"_id":"public/tags/node-js/index.html","hash":"2cc12b299f02880ecc5cfa2fdf8b54554c31a5cd","modified":1562780994343},{"_id":"public/tags/daily/index.html","hash":"7594c00d2c97404d9331d00843b87c353d16c9a0","modified":1562780994343},{"_id":"public/tags/blog/index.html","hash":"ce5b7ea46e661a512e77fea060b6fcad74a0562d","modified":1562780994343},{"_id":"public/tags/mongodb/index.html","hash":"4ed64d0352a2e6e5ae842e7e9dccda4623fca1e0","modified":1562780994343},{"_id":"public/tags/mongoose/index.html","hash":"04b83b1e01fce264576d461b7426b40786b8dd65","modified":1562780994343},{"_id":"public/tags/node/index.html","hash":"a0bd1ad47750cb4fd3f6765edc69fc4a7ceec6eb","modified":1562780994343},{"_id":"public/tags/nvm/index.html","hash":"620ed28015ce3178943b1d1364ecbbcbf83d3eb2","modified":1562780994343},{"_id":"public/2018_javascript_report/index.html","hash":"67429f1113755eb3067b3232423f342146b166f6","modified":1562759406859},{"_id":"public/highly_configurable_low_maintenance_blog_build_guide/index.html","hash":"f87b74d26d8d2b786cd6bcbd12cd96e7842a53d9","modified":1562759406859},{"_id":"public/360fe_02_css/index.html","hash":"40397c95922b15c7376cfa4de797bc148667519b","modified":1562759406859},{"_id":"public/360fe_01_html/index.html","hash":"5650671e5008c15529b0fc4961222e13d50b1d3c","modified":1562759406859},{"_id":"public/ancient_magical_table/index.html","hash":"6d96a51213812850b35fea057caff007dd7dc0fe","modified":1562759406859},{"_id":"public/Animate.css/index.html","hash":"11b3e1e74e4defe1752500c61978496399930b83","modified":1562759406859},{"_id":"public/favicon.ico","hash":"9445630aff5bce00ea44758fc3de1da69ab1007b","modified":1562564991562},{"_id":"public/images/hexo1.jpg","hash":"1cc06bda617b8e4a1f9c8367f36da71bef7e2dd1","modified":1562564991562},{"_id":"public/images/hexo2.jpg","hash":"7a720d31151cf9bee431d1497f8644e273475c20","modified":1562564991562},{"_id":"public/images/hexo3.jpg","hash":"fac5866e8108733189e45a1355a9ec44343503e3","modified":1562564991562},{"_id":"public/images/profile.jpg","hash":"27cd2ec742f33453f4a150df01e109b7c9e11e27","modified":1562564991562},{"_id":"public/images/wxCode.jpg","hash":"0216612a947f42797c6197d6b4551080cd1a81cb","modified":1562564991562},{"_id":"public/images/devtools/020.png","hash":"20a3c5c04916e17ab616d953f8b2bc9cb63938de","modified":1562564991562},{"_id":"public/images/devtools/060.png","hash":"eb8f29bf8fa98e16bbf1a2ec435ed2cecd8974f0","modified":1562564991562},{"_id":"public/images/devtools/030.png","hash":"804c693c0f5a0743db2da304d6ccf3eec593ed22","modified":1562564991562},{"_id":"public/images/devtools/100.png","hash":"ddd33280b017b4491fb12471caaa3ac1735ef6f6","modified":1562564991562},{"_id":"public/images/devtools/110.png","hash":"eba2980ad9b9df66e7fe29f1fdd4ea74d3320f6d","modified":1562564991562},{"_id":"public/images/devtools/120.png","hash":"db63189d91e50f56ea85ff69d89bf4e719c1da1e","modified":1562564991562},{"_id":"public/images/devtools/132.png","hash":"c908c9855df43d54c4f7180c666530802b905811","modified":1562564991562},{"_id":"public/images/devtools/135.gif","hash":"fd7bfff0563b7e31efb305a7b5243b6e95a233a7","modified":1562564991562},{"_id":"public/images/devtools/150.png","hash":"5495d072f6f1aeb63eb599d1ad6ebdae09923ec6","modified":1562564991562},{"_id":"public/images/devtools/140.png","hash":"86ec1c8dc95294346f9f3929423d4644909a86a9","modified":1562564991562},{"_id":"public/images/devtools/160.png","hash":"ee08ea8e09a00a974c22e53829cd54bfcba856c8","modified":1562564991562},{"_id":"public/images/devtools/180.png","hash":"652b613e0d55f3c9b46598f01cd4d018e1d96b4d","modified":1562564991562},{"_id":"public/images/devtools/190.png","hash":"84112be795cc0cd097ff6f5d2eb8f45fed2270f7","modified":1562564991562},{"_id":"public/images/devtools/170.png","hash":"d7307a319a2ea73234bd426b9a6a656f6b57ad0d","modified":1562564991562},{"_id":"public/images/devtools/191.png","hash":"168599000723952d3787dcfb802a6dbd6d6b1eb6","modified":1562564991562},{"_id":"public/images/devtools/204.png","hash":"16f6eb34d710a2b02aea3c1b7b19c0a0ddc40442","modified":1562564991562},{"_id":"public/images/devtools/205.png","hash":"e0d81980e1f494df7706ef6649d9b4dede2d0f3b","modified":1562564991562},{"_id":"public/images/devtools/209.png","hash":"35459e6f0a7d47d8b11979a7363bd50c6c2b4dce","modified":1562564991562},{"_id":"public/images/devtools/210.png","hash":"022d95969ca44093e4aff8260dfea63ac13f35ed","modified":1562564991562},{"_id":"public/images/devtools/211.png","hash":"44166d76b38a081b49b28ffbec937c059d779c22","modified":1562564991562},{"_id":"public/images/post/002.png","hash":"b5c2f919135697d19a37d81fe42c915b827d7e4e","modified":1562564991563},{"_id":"public/images/post/006.png","hash":"68b441ee371899a31be5ac1e9ad28801e3188707","modified":1562564991563},{"_id":"public/images/stateofjs/10.png","hash":"ea8c6838aa1c91d29f65b02e652ea66138aa86e6","modified":1562564991563},{"_id":"public/images/stateofjs/11.png","hash":"3efbb1fa7a72542f2c31e2ac76c95c5a11bc0ae3","modified":1562564991563},{"_id":"public/images/stateofjs/12.png","hash":"e165ead054c37823e3136d7f20b0bb6bf3c1db18","modified":1562564991563},{"_id":"public/images/stateofjs/13.png","hash":"79f5658c2e2fd12e207f394e4fe7a9352d61b5dc","modified":1562564991563},{"_id":"public/images/stateofjs/14.png","hash":"46e06656c42b74d32d11eba0ec55e28d8f38e69e","modified":1562564991563},{"_id":"public/images/stateofjs/15.png","hash":"1b126657a5c0feab23cb2b44e07f158a4a3d4bf2","modified":1562564991563},{"_id":"public/images/stateofjs/16.png","hash":"1567896a8a70f44f5cdebbf272100138976f59d1","modified":1562564991564},{"_id":"public/images/stateofjs/17.png","hash":"b5e71e6035e4920eb0e96c8e8be42520a4dd826f","modified":1562564991564},{"_id":"public/images/stateofjs/19.png","hash":"e96721bc1fae4f3a6061ca3820e87547f373f8c1","modified":1562564991564},{"_id":"public/images/stateofjs/18.png","hash":"f76eb54fe2f58cbe97bbc94f6881bb0387e9a48b","modified":1562564991564},{"_id":"public/images/stateofjs/2.png","hash":"5826deb5ff27ff26fe34396d51aff6e85b4615f8","modified":1562564991564},{"_id":"public/images/stateofjs/20.png","hash":"c2b23b3f72d922aaf06345d627f4c2e910c61423","modified":1562564991564},{"_id":"public/images/stateofjs/21.png","hash":"0e634f4ad7be66fd1e1184ebb44fe87b594b8c5f","modified":1562564991564},{"_id":"public/images/stateofjs/22.png","hash":"930ae81b060233ba30e6d4f7b7721d547d455aad","modified":1562564991564},{"_id":"public/images/stateofjs/23.png","hash":"04fce4509a18a8e7e3ea853fae0f20b9b71514b4","modified":1562564991564},{"_id":"public/images/stateofjs/3.png","hash":"8ba961493d2e87fd9d117f51d95aa1f97a53d85c","modified":1562564991564},{"_id":"public/images/stateofjs/4.png","hash":"6fc7177289d99308fab327c4d95b53e92b2d4a78","modified":1562564991564},{"_id":"public/images/stateofjs/5.png","hash":"79cf6c61431003a9d901ba8a396212ee8caa87cd","modified":1562564991564},{"_id":"public/images/stateofjs/6.png","hash":"b944f703a919d79369b113494d4fd32fa9b47236","modified":1562564991564},{"_id":"public/images/stateofjs/7.png","hash":"1618150df07c867acec4a2208bd4324aab27e48f","modified":1562564991564},{"_id":"public/images/stateofjs/8.png","hash":"cdb87a31ad7f2f12b57a3b68d4d197c7d17e1963","modified":1562564991564},{"_id":"public/images/stateofjs/9.png","hash":"e2b23fa1d0929a9f6d4b352f806e876c42462343","modified":1562564991564},{"_id":"public/img/AliPayQR.png","hash":"7787b5d91cbf0e19a1260df24f7d949771c7d45b","modified":1562564991564},{"_id":"public/img/BTCQR.png","hash":"7d1c80f953bfb6f0a37d432b04c936ea165bfd97","modified":1562564991564},{"_id":"public/img/WeChatQR.png","hash":"8c41aca7883e5ff714c56556f5fff8e7e7c38093","modified":1562564991564},{"_id":"public/img/alipay.svg","hash":"46cc0552a9f6d700d618db3fcad25e1b8e697e36","modified":1562564991564},{"_id":"public/img/bitcoin.svg","hash":"635f7cca5e675d192be2717788175c7a2146013a","modified":1562564991564},{"_id":"public/img/github.svg","hash":"90ba9a3b0dc19e70e742a39b014194f801e00f97","modified":1562564991564},{"_id":"public/img/like.svg","hash":"22a2754dc454d7b0321b70914fb2936b8d2ea8ab","modified":1562564991564},{"_id":"public/img/paypal.svg","hash":"92f3bc495f20a0190d3041be03345c46d6238c25","modified":1562564991564},{"_id":"public/img/wechat.svg","hash":"330496ad42446a29f37a2b97fc388ebd77a8cb9f","modified":1562564991564},{"_id":"public/images/post/000.png","hash":"efdc1476a2bd9af5c9e9ecba3240b0f0fd018d1f","modified":1562564991564},{"_id":"public/favicon_bak_big.ico","hash":"20054e2789b1a26d9ba34be4662a0910015b8c10","modified":1562564991568},{"_id":"public/images/Slogan.png","hash":"d270bba16d21a8207e1a3abe7efa646ac83506e3","modified":1562564991568},{"_id":"public/images/maupassant.jpg","hash":"fa0e39d4cca3899571140ebf259d6a6045c234bb","modified":1562564991569},{"_id":"public/images/profile_bak_big.jpg","hash":"02c503eebd742f9aac901cd3d2e9cd1a2db7cbf4","modified":1562564991569},{"_id":"public/images/schedule v3.0.png","hash":"85d53ede58a8ce03d337c287a29cc12c4bb97e75","modified":1562564991569},{"_id":"public/images/devtools/000.png","hash":"cc3498ea5ef888a78868c473fcd25b76ba6e62c5","modified":1562564991569},{"_id":"public/images/devtools/011.png","hash":"198e745a5d1729cb59d40084c79b4f670c68e3f8","modified":1562564991569},{"_id":"public/images/devtools/051.png","hash":"c331ce7d6c91967c72d8132ae6fa4fd47e349a54","modified":1562564991569},{"_id":"public/images/devtools/130.png","hash":"ffa1f9ecd4bdd0c41d002d883f89b423d53f881b","modified":1562564991569},{"_id":"public/images/devtools/131.png","hash":"163aa1ff1ccf47e45a99a6dff5fd19101118cb37","modified":1562564991569},{"_id":"public/images/devtools/133.gif","hash":"1aa7fc9ad2b024b3f5fce63add221ae5f5e5ea6d","modified":1562564991569},{"_id":"public/images/devtools/200.png","hash":"4fed1fdfbd0beda6d803720479f6464d88982515","modified":1562564991569},{"_id":"public/images/devtools/203.gif","hash":"a5950c2e1b1fdecdd5680866244e0809e91afcb6","modified":1562564991569},{"_id":"public/images/devtools/207.png","hash":"0e2afa90952c38932e87676b83e89b8ab0951b26","modified":1562564991570},{"_id":"public/images/devtools/211.gif","hash":"a8a2e27f0f85490bec6fbe3cbd0f96cd00d38d26","modified":1562564991570},{"_id":"public/images/post/003.png","hash":"77e199bb723835b4989290731b9a4e39fede67f3","modified":1562564991570},{"_id":"public/images/stateofjs/1.png","hash":"d87af032052cfdc70f3786234d9bc922ca526d04","modified":1562564991570},{"_id":"public/images/devtools/010.png","hash":"2bcf243f9f3c22c8e7c7d119f14443457596c6d3","modified":1562564991570},{"_id":"public/css/donate.css","hash":"f019876946aeb80e567ece250d54c1327c794583","modified":1562564991589},{"_id":"public/js/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1562564991589},{"_id":"public/js/codeblock-resizer.js","hash":"5d0b786d60bf225d9eabcc9cece2719ff4d9b6cd","modified":1562564991589},{"_id":"public/js/donate.js","hash":"89f0b9d9d0c4fce183161d29c2a44aef750efb27","modified":1562564991589},{"_id":"public/js/fancybox.js","hash":"13c4781570339f4fba76a3d7f202e442817dd605","modified":1562564991589},{"_id":"public/js/search.js","hash":"0c0630e2ef213701d393b041f10572e951a27985","modified":1562564991589},{"_id":"public/js/share.js","hash":"a2f9de374523dc7f2ddb90ed5f24b668c20d9272","modified":1562564991589},{"_id":"public/js/totop.js","hash":"7dbf8fcf582a4fb6eb9b2c60d6de9f9c2091ec4c","modified":1562564991589},{"_id":"public/js/smartresize.js","hash":"3ef157fd877167e3290f42c67a624ea375a46c24","modified":1562564991589},{"_id":"public/donate/index.html","hash":"04ada98363af3e45a4c8c6e7efb0340f3f236733","modified":1562564991589},{"_id":"public/images/devtools/201.gif","hash":"a55d80037ca54a18934e2a13c07c3cfe48251c8d","modified":1562564991589},{"_id":"public/images/devtools/212.gif","hash":"932a547023ac293373d0a7d0a99103920a75b693","modified":1562564991589},{"_id":"public/images/post/004.png","hash":"3e8c5fd447b95e73daee4477701b7d0690217a3a","modified":1562564991590},{"_id":"public/images/post/005.png","hash":"7ca58e79e362dc47225100e63641359aff4dd744","modified":1562564991590},{"_id":"public/images/stateofjs/001.png","hash":"61ea320c9a2580c68884cbb100f5a3432adebffe","modified":1562564991590},{"_id":"public/images/devtools/040.png","hash":"901acbb786cef1cc8a21b08613670ea3e344895a","modified":1562564991590},{"_id":"public/images/stateofjs/000.png","hash":"39990e5515da56e3179274c33c4d6adcfc32afc0","modified":1562564991590},{"_id":"public/images/devtools/208.gif","hash":"768a2842d3270857a7cc02ead069287005d539bc","modified":1562564991591},{"_id":"public/images/devtools/050.png","hash":"2de60daf6e505379587d4e502a1bccf50fe6b86c","modified":1562564991591},{"_id":"public/images/post/001.png","hash":"744026cb0a6f80dd336d94765170fe7c5dd812d2","modified":1562564991592},{"_id":"public/css/default.css","hash":"c245680e6900ca43514d2023bf1f0e1b539992dc","modified":1562564991593},{"_id":"public/images/devtools/202.gif","hash":"8d098caa60ac7728d4d817cbba7f36c056f9a31b","modified":1562564991595},{"_id":"public/images/devtools/206.gif","hash":"7017d0776ca9fea8232eba98082e0b2cd2269033","modified":1562564991605},{"_id":"public/images/devtools/207.gif","hash":"8fa8fae5d8fce89678326a4997f3e1993792daf9","modified":1562564991629},{"_id":"public/css/style.css","hash":"22b798a68969797f69e9e13e41de18e81e99172d","modified":1562682664407},{"_id":"public/images/devtools/213.gif","hash":"38f16d2021930f25ede0fa59d894ae306ea524d4","modified":1562564991632},{"_id":"public/js/gitment.browser.js","hash":"7f51928392c2c38ad20928f4134ec89f307598bc","modified":1562564991632},{"_id":"source/_posts/animate.css.md","hash":"e69a9088eae51bfef09d599b2f4fdf798760697d","modified":1558613192184},{"_id":"source/_posts/fullpage.js.md","hash":"1d6c82d0851f8bd5cd15f248c72a4404ba8db4f3","modified":1558613192184},{"_id":"public/fullpage.js/index.html","hash":"64a5576ceca8f4ac2a3050963395c807b52cc1ec","modified":1562687039930},{"_id":"public/animate.css/index.html","hash":"24e0fa7a565e2d20468b049c67b8ace1d51d8fdb","modified":1562687039931},{"_id":"source/_posts/33_js_concepts.md","hash":"19783aa01f9a5e07be6788abb35afd0c5c335bef","modified":1562778962000},{"_id":"source/_posts/grunt.md","hash":"6381cc168ffb17e4fa0b1b232fe7bd97fde4bb84","modified":1562780980000},{"_id":"source/images/gitbook/._web_font01.png","hash":"45c6b5f75e612050c416176e071da4e4f51593d2","modified":1562764056000},{"_id":"source/images/gitbook/._web_font02.png","hash":"336f398f1a374fcf1390321f3a787a92ec6b618a","modified":1562771662000},{"_id":"source/images/gitbook/._web_font03.png","hash":"e032bae48dfc9e18ee0d69768c02fdb3b2cb442a","modified":1562771382000},{"_id":"source/images/gitbook/._web_font04.png","hash":"e032bae48dfc9e18ee0d69768c02fdb3b2cb442a","modified":1562773102000},{"_id":"source/images/gitbook/web_font02.png","hash":"fb975479c3c954b4939ea2151df8afd47b84db06","modified":1562771656000},{"_id":"source/images/gitbook/web_font04.png","hash":"f5f158b5072c4bfc7237814568d748f7043267f0","modified":1562773102000},{"_id":"source/images/grunt/._grunt01.png","hash":"a17a34b2d48e941d8809e8ee9128720811d160a3","modified":1562780322000},{"_id":"source/images/grunt/._grunt02.png","hash":"a99874c1180b1c14a46e71f39241eeaed9af579c","modified":1562780722000},{"_id":"source/images/grunt/._grunt03.png","hash":"746121711739f680ed2df8be6d7289defecee0c2","modified":1562780912000},{"_id":"source/images/grunt/._grunt04.png","hash":"ef50695cd1a8d7aced4499d5c44ff9f8e8c66ebb","modified":1562780952000},{"_id":"source/images/grunt/grunt01.png","hash":"e83e797076d76497aa6c5902ee4b7214ca44c964","modified":1562780288000},{"_id":"source/images/grunt/grunt02.png","hash":"b66b32865a140ef179897af5d96dda71eae4bfdb","modified":1562780718000},{"_id":"source/images/grunt/grunt03.png","hash":"3d8ac1eeef068a93df2b7790b54f2b1e6c8db305","modified":1562780906000},{"_id":"source/images/grunt/grunt04.png","hash":"8e5468599e491d91d757352ba89ecafb3f755fda","modified":1562780948000},{"_id":"source/images/gitbook/web_font01.png","hash":"e6795d49c23e8705f847bb3d1fbd49620cbd3350","modified":1562764016000},{"_id":"source/images/gitbook/web_font03.png","hash":"2e710f6177d2663f3b3dbb4bdcd200e5e2012a18","modified":1562771380000},{"_id":"public/archives/2019/06/index.html","hash":"de95ef3bccb58480c8896f2bd4c7698df7d42413","modified":1562780994345},{"_id":"public/archives/2019/07/index.html","hash":"cdf8fee67765ab3167c818259a52ba97cb96f076","modified":1562780994345},{"_id":"public/categories/tool/index.html","hash":"794b0203db4119a0875394c6d7426fa4ad8c6de5","modified":1562780994346},{"_id":"public/tags/grunt/index.html","hash":"c2a462ca9128774e4f13861ffb4a2be68a1d8a87","modified":1562780994346},{"_id":"public/33_js_concepts/index.html","hash":"77f6d76f498e320fa2ff6f0605e36152f8b5111f","modified":1562780994346},{"_id":"public/grunt/index.html","hash":"d041cdb9c5cccb720354a0cde1c41783cd5c9d3a","modified":1562780994346},{"_id":"public/images/gitbook/web_font02.png","hash":"fb975479c3c954b4939ea2151df8afd47b84db06","modified":1562780994347},{"_id":"public/images/grunt/grunt01.png","hash":"e83e797076d76497aa6c5902ee4b7214ca44c964","modified":1562780994347},{"_id":"public/images/gitbook/web_font04.png","hash":"f5f158b5072c4bfc7237814568d748f7043267f0","modified":1562780994347},{"_id":"public/images/grunt/grunt02.png","hash":"b66b32865a140ef179897af5d96dda71eae4bfdb","modified":1562780994347},{"_id":"public/images/grunt/grunt03.png","hash":"3d8ac1eeef068a93df2b7790b54f2b1e6c8db305","modified":1562780994347},{"_id":"public/images/grunt/grunt04.png","hash":"8e5468599e491d91d757352ba89ecafb3f755fda","modified":1562780994347},{"_id":"public/images/gitbook/web_font03.png","hash":"2e710f6177d2663f3b3dbb4bdcd200e5e2012a18","modified":1562780994348},{"_id":"public/images/gitbook/web_font01.png","hash":"e6795d49c23e8705f847bb3d1fbd49620cbd3350","modified":1562780994351}],"Category":[{"name":"FED","_id":"cjxtyumq60004hbghgwlnppgy"},{"name":"ScarSu","_id":"cjxtyumqc000bhbghfqmwj331"},{"name":"html","_id":"cjxtyumqh000ihbghqzx5djvk"},{"name":"css","_id":"cjxtyumql000ohbghryioint9"},{"name":"js","_id":"cjxtyumqw000yhbgh70eew4mz"},{"name":"node","_id":"cjxtyumqy0015hbgh3s2lipxh"},{"name":"daily","_id":"cjxtyumqy001bhbghdjg1ujpo"},{"name":"hexo","_id":"cjxtyumqz001ehbghgxp9mtd1"},{"name":"mongodb","_id":"cjxtyumqz001ihbghi9gvdef4"},{"name":"blog","parent":"cjxtyumqy001bhbghdjg1ujpo","_id":"cjxtyumr0001phbgh86ehbwy4"},{"name":"tool","_id":"cjxxjgbkg0001akghpb5heusb"}],"Data":[],"Page":[{"title":"关于","_content":"### Contact\n- 【github】<i class=\"fa fa-github\"></i>   scarsu\n- 【mail】<i class=\"fa fa-envelope\"></i>     scarsu001@gmail.com\n- 【qq/wechat】<i class=\"fa fa-qq\"></i><i class=\"fa fa-wechat\"></i>    907866991\n\n#### Tags Me\n- HNU|BD🎓\n- 职场新人👶 (from 2018 to now\n- 程序媛🙊\n- 辣鸡FEDer🐓\n- DIY爱好者🔨\n- 倡导轻断食 + 断舍离📖\n\n#### Skills\n- 前端：HTML | CSS | JS | REACT | GRUNT | NODE\n- 毕设：基于Node.js的即时通讯系统（Socket.io|Express)\n- 数据库：Oracle | SQL | PL/SQL\n- 服务端：Node | J2EE | ASP.net \n\n<!-- ### 微信公众号：自律神仙ScarSu\n<img id=\"slogan_img\" src=\"/images/Slogan.png\" title=\"微信公众号：自律神仙ScarSu\"/> -->","source":"about/index.md","raw":"---\ntitle: 关于\n---\n### Contact\n- 【github】<i class=\"fa fa-github\"></i>   scarsu\n- 【mail】<i class=\"fa fa-envelope\"></i>     scarsu001@gmail.com\n- 【qq/wechat】<i class=\"fa fa-qq\"></i><i class=\"fa fa-wechat\"></i>    907866991\n\n#### Tags Me\n- HNU|BD🎓\n- 职场新人👶 (from 2018 to now\n- 程序媛🙊\n- 辣鸡FEDer🐓\n- DIY爱好者🔨\n- 倡导轻断食 + 断舍离📖\n\n#### Skills\n- 前端：HTML | CSS | JS | REACT | GRUNT | NODE\n- 毕设：基于Node.js的即时通讯系统（Socket.io|Express)\n- 数据库：Oracle | SQL | PL/SQL\n- 服务端：Node | J2EE | ASP.net \n\n<!-- ### 微信公众号：自律神仙ScarSu\n<img id=\"slogan_img\" src=\"/images/Slogan.png\" title=\"微信公众号：自律神仙ScarSu\"/> -->","date":"2019-07-08T05:33:44.000Z","updated":"2019-07-08T05:33:44.000Z","path":"about/index.html","_id":"cjxtyumq30001hbghctaqqfa3","comments":1,"layout":"page","content":"<h3 id=\"Contact\"><a href=\"#Contact\" class=\"headerlink\" title=\"Contact\"></a>Contact</h3><ul>\n<li>【github】<i class=\"fa fa-github\"></i>   scarsu</li>\n<li>【mail】<i class=\"fa fa-envelope\"></i>     <a href=\"mailto:scarsu001@gmail.com\" target=\"_blank\" rel=\"noopener\">scarsu001@gmail.com</a></li>\n<li>【qq/wechat】<i class=\"fa fa-qq\"></i><i class=\"fa fa-wechat\"></i>    907866991</li>\n</ul>\n<h4 id=\"Tags-Me\"><a href=\"#Tags-Me\" class=\"headerlink\" title=\"Tags Me\"></a>Tags Me</h4><ul>\n<li>HNU|BD🎓</li>\n<li>职场新人👶 (from 2018 to now</li>\n<li>程序媛🙊</li>\n<li>辣鸡FEDer🐓</li>\n<li>DIY爱好者🔨</li>\n<li>倡导轻断食 + 断舍离📖</li>\n</ul>\n<h4 id=\"Skills\"><a href=\"#Skills\" class=\"headerlink\" title=\"Skills\"></a>Skills</h4><ul>\n<li>前端：HTML | CSS | JS | REACT | GRUNT | NODE</li>\n<li>毕设：基于Node.js的即时通讯系统（Socket.io|Express)</li>\n<li>数据库：Oracle | SQL | PL/SQL</li>\n<li>服务端：Node | J2EE | ASP.net </li>\n</ul>\n<!-- ### 微信公众号：自律神仙ScarSu\n<img id=\"slogan_img\" src=\"/images/Slogan.png\" title=\"微信公众号：自律神仙ScarSu\"/> -->","site":{"data":{}},"excerpt":"","more":"<h3 id=\"Contact\"><a href=\"#Contact\" class=\"headerlink\" title=\"Contact\"></a>Contact</h3><ul>\n<li>【github】<i class=\"fa fa-github\"></i>   scarsu</li>\n<li>【mail】<i class=\"fa fa-envelope\"></i>     <a href=\"mailto:scarsu001@gmail.com\" target=\"_blank\" rel=\"noopener\">scarsu001@gmail.com</a></li>\n<li>【qq/wechat】<i class=\"fa fa-qq\"></i><i class=\"fa fa-wechat\"></i>    907866991</li>\n</ul>\n<h4 id=\"Tags-Me\"><a href=\"#Tags-Me\" class=\"headerlink\" title=\"Tags Me\"></a>Tags Me</h4><ul>\n<li>HNU|BD🎓</li>\n<li>职场新人👶 (from 2018 to now</li>\n<li>程序媛🙊</li>\n<li>辣鸡FEDer🐓</li>\n<li>DIY爱好者🔨</li>\n<li>倡导轻断食 + 断舍离📖</li>\n</ul>\n<h4 id=\"Skills\"><a href=\"#Skills\" class=\"headerlink\" title=\"Skills\"></a>Skills</h4><ul>\n<li>前端：HTML | CSS | JS | REACT | GRUNT | NODE</li>\n<li>毕设：基于Node.js的即时通讯系统（Socket.io|Express)</li>\n<li>数据库：Oracle | SQL | PL/SQL</li>\n<li>服务端：Node | J2EE | ASP.net </li>\n</ul>\n<!-- ### 微信公众号：自律神仙ScarSu\n<img id=\"slogan_img\" src=\"/images/Slogan.png\" title=\"微信公众号：自律神仙ScarSu\"/> -->"},{"title":"认知/输入","subtitle":"睁开眼睛看看这世界吧","_content":"\n#### 文章推荐\n\n<a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283439&idx=5&sn=8b4b51e2c1a88f7fe369a4b756657672&chksm=88bc7865bfcbf17324e364a8ade43fd38556041908e3baa5e7268c6c4428696477a97cd0723a&token=842281904&lang=zh_CN#rd\">【为什么马云能成功而你不能】</a> \n<a href=\"http://www.fuyanshe.cn/headline/view/69259\">【你拥有的最宝贵的财富是什么？】</a> \n<a href=\"https://medium.com/s/notes-on-changing-your-life/how-to-seem-like-you-always-have-your-sh-t-together-11114005114e\">【How to Seem Like You Always Have Your Sh*t Together】</a> \n\n#### 优质社区\n- <a href=\"https://medium.com/\">Medium</a> - a place to read and write big ideas and important stories\n\n#### 推荐书单\n- <a href=\"https://book.douban.com/subject/10786473/\">《刻意学习》by Scalers</a> - 一本书教你借用数理学科的概念工具去思考和破解个人成长的问题\n- <a href=\"https://book.douban.com/subject/27071913/\">《自控力》by Kelly McGonigal</a> - 斯坦福大学最受欢迎心理学课程\n- <a href=\"https://book.douban.com/subject/24749465/\">《断舍离》by 山下英子</a> - 透过整理物品了解自己，整理心中的混沌，让人生舒适的行动技术。\n- <a href=\"https://book.douban.com/subject/25882638/\">《轻断食》</a>","source":"cognition/index.md","raw":"---\ntitle: 认知/输入\nsubtitle: 睁开眼睛看看这世界吧\n---\n\n#### 文章推荐\n\n<a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283439&idx=5&sn=8b4b51e2c1a88f7fe369a4b756657672&chksm=88bc7865bfcbf17324e364a8ade43fd38556041908e3baa5e7268c6c4428696477a97cd0723a&token=842281904&lang=zh_CN#rd\">【为什么马云能成功而你不能】</a> \n<a href=\"http://www.fuyanshe.cn/headline/view/69259\">【你拥有的最宝贵的财富是什么？】</a> \n<a href=\"https://medium.com/s/notes-on-changing-your-life/how-to-seem-like-you-always-have-your-sh-t-together-11114005114e\">【How to Seem Like You Always Have Your Sh*t Together】</a> \n\n#### 优质社区\n- <a href=\"https://medium.com/\">Medium</a> - a place to read and write big ideas and important stories\n\n#### 推荐书单\n- <a href=\"https://book.douban.com/subject/10786473/\">《刻意学习》by Scalers</a> - 一本书教你借用数理学科的概念工具去思考和破解个人成长的问题\n- <a href=\"https://book.douban.com/subject/27071913/\">《自控力》by Kelly McGonigal</a> - 斯坦福大学最受欢迎心理学课程\n- <a href=\"https://book.douban.com/subject/24749465/\">《断舍离》by 山下英子</a> - 透过整理物品了解自己，整理心中的混沌，让人生舒适的行动技术。\n- <a href=\"https://book.douban.com/subject/25882638/\">《轻断食》</a>","date":"2019-07-08T05:48:54.000Z","updated":"2019-07-08T05:48:54.000Z","path":"cognition/index.html","_id":"cjxtyumq50003hbghwe95tq7t","comments":1,"layout":"page","content":"<h4 id=\"文章推荐\"><a href=\"#文章推荐\" class=\"headerlink\" title=\"文章推荐\"></a>文章推荐</h4><p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283439&idx=5&sn=8b4b51e2c1a88f7fe369a4b756657672&chksm=88bc7865bfcbf17324e364a8ade43fd38556041908e3baa5e7268c6c4428696477a97cd0723a&token=842281904&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">【为什么马云能成功而你不能】</a><br><a href=\"http://www.fuyanshe.cn/headline/view/69259\" target=\"_blank\" rel=\"noopener\">【你拥有的最宝贵的财富是什么？】</a><br><a href=\"https://medium.com/s/notes-on-changing-your-life/how-to-seem-like-you-always-have-your-sh-t-together-11114005114e\" target=\"_blank\" rel=\"noopener\">【How to Seem Like You Always Have Your Sh*t Together】</a> </p>\n<h4 id=\"优质社区\"><a href=\"#优质社区\" class=\"headerlink\" title=\"优质社区\"></a>优质社区</h4><ul>\n<li><a href=\"https://medium.com/\" target=\"_blank\" rel=\"noopener\">Medium</a> - a place to read and write big ideas and important stories</li>\n</ul>\n<h4 id=\"推荐书单\"><a href=\"#推荐书单\" class=\"headerlink\" title=\"推荐书单\"></a>推荐书单</h4><ul>\n<li><a href=\"https://book.douban.com/subject/10786473/\" target=\"_blank\" rel=\"noopener\">《刻意学习》by Scalers</a> - 一本书教你借用数理学科的概念工具去思考和破解个人成长的问题</li>\n<li><a href=\"https://book.douban.com/subject/27071913/\" target=\"_blank\" rel=\"noopener\">《自控力》by Kelly McGonigal</a> - 斯坦福大学最受欢迎心理学课程</li>\n<li><a href=\"https://book.douban.com/subject/24749465/\" target=\"_blank\" rel=\"noopener\">《断舍离》by 山下英子</a> - 透过整理物品了解自己，整理心中的混沌，让人生舒适的行动技术。</li>\n<li><a href=\"https://book.douban.com/subject/25882638/\" target=\"_blank\" rel=\"noopener\">《轻断食》</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"文章推荐\"><a href=\"#文章推荐\" class=\"headerlink\" title=\"文章推荐\"></a>文章推荐</h4><p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283439&idx=5&sn=8b4b51e2c1a88f7fe369a4b756657672&chksm=88bc7865bfcbf17324e364a8ade43fd38556041908e3baa5e7268c6c4428696477a97cd0723a&token=842281904&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">【为什么马云能成功而你不能】</a><br><a href=\"http://www.fuyanshe.cn/headline/view/69259\" target=\"_blank\" rel=\"noopener\">【你拥有的最宝贵的财富是什么？】</a><br><a href=\"https://medium.com/s/notes-on-changing-your-life/how-to-seem-like-you-always-have-your-sh-t-together-11114005114e\" target=\"_blank\" rel=\"noopener\">【How to Seem Like You Always Have Your Sh*t Together】</a> </p>\n<h4 id=\"优质社区\"><a href=\"#优质社区\" class=\"headerlink\" title=\"优质社区\"></a>优质社区</h4><ul>\n<li><a href=\"https://medium.com/\" target=\"_blank\" rel=\"noopener\">Medium</a> - a place to read and write big ideas and important stories</li>\n</ul>\n<h4 id=\"推荐书单\"><a href=\"#推荐书单\" class=\"headerlink\" title=\"推荐书单\"></a>推荐书单</h4><ul>\n<li><a href=\"https://book.douban.com/subject/10786473/\" target=\"_blank\" rel=\"noopener\">《刻意学习》by Scalers</a> - 一本书教你借用数理学科的概念工具去思考和破解个人成长的问题</li>\n<li><a href=\"https://book.douban.com/subject/27071913/\" target=\"_blank\" rel=\"noopener\">《自控力》by Kelly McGonigal</a> - 斯坦福大学最受欢迎心理学课程</li>\n<li><a href=\"https://book.douban.com/subject/24749465/\" target=\"_blank\" rel=\"noopener\">《断舍离》by 山下英子</a> - 透过整理物品了解自己，整理心中的混沌，让人生舒适的行动技术。</li>\n<li><a href=\"https://book.douban.com/subject/25882638/\" target=\"_blank\" rel=\"noopener\">《轻断食》</a></li>\n</ul>\n"},{"title":"demo","_content":"\n#### [1. 实时弹幕墙](http://htmlpreview.github.io/?https://github.com/scarsu/code_lib/blob/master/project%26module/fcc03-%E5%BC%B9%E5%B9%95%E5%A2%99/index.html)\n\n#### [2.RandomQuote](https://codepen.io/zsy/full/PmpWzz)\n\n#### [3.Calculate](https://codepen.io/zsy/full/EmvpVm)\n\n#### [4.番茄钟](https://codepen.io/zsy/full/zwEpzL/)\n\n#### [5.GruntLearn](https://github.com/scarsu/gruntlearn)\n\n<!-- #### [6.ife 课程](https://github.com/scarsu/code_lib/tree/master/exercise/ife_baidu/01html.css) -->\n\n#### 6.Node.js即时通讯(毕设  等买的起服务器再放)\n\n#### 7.愿望清单\n- 【快应用】简黑时钟    (这么简单的功能实在没必要做app)\n- 【小程序】日子    (类似于生日管家，但是app太臃肿商业化)\n- 【Chrome 插件】书签导出助手   (导出定时任务 / 监控书签更改自动导出)\n```js\n//有想合作的请联系我邮箱  scarsu001@gmail.com\n```","source":"demo/index.md","raw":"---\ntitle: demo\n---\n\n#### [1. 实时弹幕墙](http://htmlpreview.github.io/?https://github.com/scarsu/code_lib/blob/master/project%26module/fcc03-%E5%BC%B9%E5%B9%95%E5%A2%99/index.html)\n\n#### [2.RandomQuote](https://codepen.io/zsy/full/PmpWzz)\n\n#### [3.Calculate](https://codepen.io/zsy/full/EmvpVm)\n\n#### [4.番茄钟](https://codepen.io/zsy/full/zwEpzL/)\n\n#### [5.GruntLearn](https://github.com/scarsu/gruntlearn)\n\n<!-- #### [6.ife 课程](https://github.com/scarsu/code_lib/tree/master/exercise/ife_baidu/01html.css) -->\n\n#### 6.Node.js即时通讯(毕设  等买的起服务器再放)\n\n#### 7.愿望清单\n- 【快应用】简黑时钟    (这么简单的功能实在没必要做app)\n- 【小程序】日子    (类似于生日管家，但是app太臃肿商业化)\n- 【Chrome 插件】书签导出助手   (导出定时任务 / 监控书签更改自动导出)\n```js\n//有想合作的请联系我邮箱  scarsu001@gmail.com\n```","date":"2019-07-04T16:40:10.861Z","updated":"2019-07-04T16:40:10.861Z","path":"demo/index.html","_id":"cjxtyumq80007hbghlldxeqhq","comments":1,"layout":"page","content":"<h4 id=\"1-实时弹幕墙\"><a href=\"#1-实时弹幕墙\" class=\"headerlink\" title=\"1. 实时弹幕墙\"></a><a href=\"http://htmlpreview.github.io/?https://github.com/scarsu/code_lib/blob/master/project%26module/fcc03-%E5%BC%B9%E5%B9%95%E5%A2%99/index.html\" target=\"_blank\" rel=\"noopener\">1. 实时弹幕墙</a></h4><h4 id=\"2-RandomQuote\"><a href=\"#2-RandomQuote\" class=\"headerlink\" title=\"2.RandomQuote\"></a><a href=\"https://codepen.io/zsy/full/PmpWzz\" target=\"_blank\" rel=\"noopener\">2.RandomQuote</a></h4><h4 id=\"3-Calculate\"><a href=\"#3-Calculate\" class=\"headerlink\" title=\"3.Calculate\"></a><a href=\"https://codepen.io/zsy/full/EmvpVm\" target=\"_blank\" rel=\"noopener\">3.Calculate</a></h4><h4 id=\"4-番茄钟\"><a href=\"#4-番茄钟\" class=\"headerlink\" title=\"4.番茄钟\"></a><a href=\"https://codepen.io/zsy/full/zwEpzL/\" target=\"_blank\" rel=\"noopener\">4.番茄钟</a></h4><h4 id=\"5-GruntLearn\"><a href=\"#5-GruntLearn\" class=\"headerlink\" title=\"5.GruntLearn\"></a><a href=\"https://github.com/scarsu/gruntlearn\" target=\"_blank\" rel=\"noopener\">5.GruntLearn</a></h4><!-- #### [6.ife 课程](https://github.com/scarsu/code_lib/tree/master/exercise/ife_baidu/01html.css) -->\n<h4 id=\"6-Node-js即时通讯-毕设-等买的起服务器再放\"><a href=\"#6-Node-js即时通讯-毕设-等买的起服务器再放\" class=\"headerlink\" title=\"6.Node.js即时通讯(毕设  等买的起服务器再放)\"></a>6.Node.js即时通讯(毕设  等买的起服务器再放)</h4><h4 id=\"7-愿望清单\"><a href=\"#7-愿望清单\" class=\"headerlink\" title=\"7.愿望清单\"></a>7.愿望清单</h4><ul>\n<li>【快应用】简黑时钟    (这么简单的功能实在没必要做app)</li>\n<li>【小程序】日子    (类似于生日管家，但是app太臃肿商业化)</li>\n<li>【Chrome 插件】书签导出助手   (导出定时任务 / 监控书签更改自动导出)<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//有想合作的请联系我邮箱  scarsu001@gmail.com</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"1-实时弹幕墙\"><a href=\"#1-实时弹幕墙\" class=\"headerlink\" title=\"1. 实时弹幕墙\"></a><a href=\"http://htmlpreview.github.io/?https://github.com/scarsu/code_lib/blob/master/project%26module/fcc03-%E5%BC%B9%E5%B9%95%E5%A2%99/index.html\" target=\"_blank\" rel=\"noopener\">1. 实时弹幕墙</a></h4><h4 id=\"2-RandomQuote\"><a href=\"#2-RandomQuote\" class=\"headerlink\" title=\"2.RandomQuote\"></a><a href=\"https://codepen.io/zsy/full/PmpWzz\" target=\"_blank\" rel=\"noopener\">2.RandomQuote</a></h4><h4 id=\"3-Calculate\"><a href=\"#3-Calculate\" class=\"headerlink\" title=\"3.Calculate\"></a><a href=\"https://codepen.io/zsy/full/EmvpVm\" target=\"_blank\" rel=\"noopener\">3.Calculate</a></h4><h4 id=\"4-番茄钟\"><a href=\"#4-番茄钟\" class=\"headerlink\" title=\"4.番茄钟\"></a><a href=\"https://codepen.io/zsy/full/zwEpzL/\" target=\"_blank\" rel=\"noopener\">4.番茄钟</a></h4><h4 id=\"5-GruntLearn\"><a href=\"#5-GruntLearn\" class=\"headerlink\" title=\"5.GruntLearn\"></a><a href=\"https://github.com/scarsu/gruntlearn\" target=\"_blank\" rel=\"noopener\">5.GruntLearn</a></h4><!-- #### [6.ife 课程](https://github.com/scarsu/code_lib/tree/master/exercise/ife_baidu/01html.css) -->\n<h4 id=\"6-Node-js即时通讯-毕设-等买的起服务器再放\"><a href=\"#6-Node-js即时通讯-毕设-等买的起服务器再放\" class=\"headerlink\" title=\"6.Node.js即时通讯(毕设  等买的起服务器再放)\"></a>6.Node.js即时通讯(毕设  等买的起服务器再放)</h4><h4 id=\"7-愿望清单\"><a href=\"#7-愿望清单\" class=\"headerlink\" title=\"7.愿望清单\"></a>7.愿望清单</h4><ul>\n<li>【快应用】简黑时钟    (这么简单的功能实在没必要做app)</li>\n<li>【小程序】日子    (类似于生日管家，但是app太臃肿商业化)</li>\n<li>【Chrome 插件】书签导出助手   (导出定时任务 / 监控书签更改自动导出)<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//有想合作的请联系我邮箱  scarsu001@gmail.com</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n"},{"title":"前端导航","_content":"\n\n#### 友链\n- <a href=\"http://www.taoweng.site\">前端桃园</a>\n- <a href=\"https://leihuang.dev/\">Lei Huang</a>\n- <a href=\"http://blog.eccto.cn/index\">EricChen</a>\n- <a href=\"https://www.liaoyunduo.top/\">小心</a>\n\n#### 优秀的前端团队\n- <a href=\"https://75team.com/\">齐舞团</a>\n- <a href=\"http://fex.baidu.com/\">百度FEX</a>\n\n#### 前端必读书籍\n- Javascript高级程序设计\n- Javascript权威指南\n- 你不知道的Javascript\n\n#### 稳定的前端阅读源\n- <a href=\"https://75team.com/\">齐舞周刊</a>\n- <a href=\"https://javascriptweekly.com/issues\">javascriptweekly</a>\n\n#### 优质的开发者社区/阅读源\n- <a href=\"http://www.jstips.co/\">jstips</a>\n\n#### 前端大佬\n- <a href=\"https://me.getify.com/\">getify - Kyle Simpson </a> - you dont know js作者\n- <a href=\"https://www.h5jun.com/\">十年踪迹 / 月影</a> - 齐舞团团长，360前端\n- <a href=\"http://dr-axel.de/\">Dr. Axel Rauschmayer</a> - 《Speaking JavaScript (ES1–ES5)》等js书籍作者\n- <a href=\"https://www.zhangxinxu.com/\">张鑫旭</a> - 知名CSS专家、《CSS世界作者》\n- <a href=\"https://overreacted.io/\">Dan Abramov</a> - React 核心开发成员，Redux 作者\n- <a href=\"http://evanyou.me\">Evan You 尤雨溪</a> - Vue.js作者\n- <a href=\"https://github.com/wintercn\">Shaofei Cheng / winter</a> - 阿里巴巴高级技术专家，知乎大V\n- <a href=\"https://github.com/lifesinger\">lifesinger 玉伯</a> - seajs、kiss作者，支付宝前端\n\n#### 高质量的前端公号\n- 前端桃园\n\n#### 前端工具资源\n- <a href=\"https://devhints.io/\">fed cheatsheet</a> - all in one，前端snippets速查\n- <a href=\"https://github.com/30-seconds/30-seconds-of-code\">精选的JavaScript代码段集合</a> - 开发者可以在30秒或更短的时间内理解这些代码段\n\n#### rss\n\n<!-- #### FE Conf -->\n\n```js\n    //不定期更新\n    //排名不分先后\n    //推荐请联系邮箱 scarsu001@gmail.com\n```","source":"fe_nav/index.md","raw":"---\ntitle: 前端导航\n---\n\n\n#### 友链\n- <a href=\"http://www.taoweng.site\">前端桃园</a>\n- <a href=\"https://leihuang.dev/\">Lei Huang</a>\n- <a href=\"http://blog.eccto.cn/index\">EricChen</a>\n- <a href=\"https://www.liaoyunduo.top/\">小心</a>\n\n#### 优秀的前端团队\n- <a href=\"https://75team.com/\">齐舞团</a>\n- <a href=\"http://fex.baidu.com/\">百度FEX</a>\n\n#### 前端必读书籍\n- Javascript高级程序设计\n- Javascript权威指南\n- 你不知道的Javascript\n\n#### 稳定的前端阅读源\n- <a href=\"https://75team.com/\">齐舞周刊</a>\n- <a href=\"https://javascriptweekly.com/issues\">javascriptweekly</a>\n\n#### 优质的开发者社区/阅读源\n- <a href=\"http://www.jstips.co/\">jstips</a>\n\n#### 前端大佬\n- <a href=\"https://me.getify.com/\">getify - Kyle Simpson </a> - you dont know js作者\n- <a href=\"https://www.h5jun.com/\">十年踪迹 / 月影</a> - 齐舞团团长，360前端\n- <a href=\"http://dr-axel.de/\">Dr. Axel Rauschmayer</a> - 《Speaking JavaScript (ES1–ES5)》等js书籍作者\n- <a href=\"https://www.zhangxinxu.com/\">张鑫旭</a> - 知名CSS专家、《CSS世界作者》\n- <a href=\"https://overreacted.io/\">Dan Abramov</a> - React 核心开发成员，Redux 作者\n- <a href=\"http://evanyou.me\">Evan You 尤雨溪</a> - Vue.js作者\n- <a href=\"https://github.com/wintercn\">Shaofei Cheng / winter</a> - 阿里巴巴高级技术专家，知乎大V\n- <a href=\"https://github.com/lifesinger\">lifesinger 玉伯</a> - seajs、kiss作者，支付宝前端\n\n#### 高质量的前端公号\n- 前端桃园\n\n#### 前端工具资源\n- <a href=\"https://devhints.io/\">fed cheatsheet</a> - all in one，前端snippets速查\n- <a href=\"https://github.com/30-seconds/30-seconds-of-code\">精选的JavaScript代码段集合</a> - 开发者可以在30秒或更短的时间内理解这些代码段\n\n#### rss\n\n<!-- #### FE Conf -->\n\n```js\n    //不定期更新\n    //排名不分先后\n    //推荐请联系邮箱 scarsu001@gmail.com\n```","date":"2019-07-10T17:19:28.000Z","updated":"2019-07-10T17:19:28.000Z","path":"fe_nav/index.html","_id":"cjxtyumqa0009hbghqr7pgmit","comments":1,"layout":"page","content":"<h4 id=\"友链\"><a href=\"#友链\" class=\"headerlink\" title=\"友链\"></a>友链</h4><ul>\n<li><a href=\"http://www.taoweng.site\" target=\"_blank\" rel=\"noopener\">前端桃园</a></li>\n<li><a href=\"https://leihuang.dev/\" target=\"_blank\" rel=\"noopener\">Lei Huang</a></li>\n<li><a href=\"http://blog.eccto.cn/index\" target=\"_blank\" rel=\"noopener\">EricChen</a></li>\n<li><a href=\"https://www.liaoyunduo.top/\" target=\"_blank\" rel=\"noopener\">小心</a></li>\n</ul>\n<h4 id=\"优秀的前端团队\"><a href=\"#优秀的前端团队\" class=\"headerlink\" title=\"优秀的前端团队\"></a>优秀的前端团队</h4><ul>\n<li><a href=\"https://75team.com/\" target=\"_blank\" rel=\"noopener\">齐舞团</a></li>\n<li><a href=\"http://fex.baidu.com/\" target=\"_blank\" rel=\"noopener\">百度FEX</a></li>\n</ul>\n<h4 id=\"前端必读书籍\"><a href=\"#前端必读书籍\" class=\"headerlink\" title=\"前端必读书籍\"></a>前端必读书籍</h4><ul>\n<li>Javascript高级程序设计</li>\n<li>Javascript权威指南</li>\n<li>你不知道的Javascript</li>\n</ul>\n<h4 id=\"稳定的前端阅读源\"><a href=\"#稳定的前端阅读源\" class=\"headerlink\" title=\"稳定的前端阅读源\"></a>稳定的前端阅读源</h4><ul>\n<li><a href=\"https://75team.com/\" target=\"_blank\" rel=\"noopener\">齐舞周刊</a></li>\n<li><a href=\"https://javascriptweekly.com/issues\" target=\"_blank\" rel=\"noopener\">javascriptweekly</a></li>\n</ul>\n<h4 id=\"优质的开发者社区-阅读源\"><a href=\"#优质的开发者社区-阅读源\" class=\"headerlink\" title=\"优质的开发者社区/阅读源\"></a>优质的开发者社区/阅读源</h4><ul>\n<li><a href=\"http://www.jstips.co/\" target=\"_blank\" rel=\"noopener\">jstips</a></li>\n</ul>\n<h4 id=\"前端大佬\"><a href=\"#前端大佬\" class=\"headerlink\" title=\"前端大佬\"></a>前端大佬</h4><ul>\n<li><a href=\"https://me.getify.com/\" target=\"_blank\" rel=\"noopener\">getify - Kyle Simpson </a> - you dont know js作者</li>\n<li><a href=\"https://www.h5jun.com/\" target=\"_blank\" rel=\"noopener\">十年踪迹 / 月影</a> - 齐舞团团长，360前端</li>\n<li><a href=\"http://dr-axel.de/\" target=\"_blank\" rel=\"noopener\">Dr. Axel Rauschmayer</a> - 《Speaking JavaScript (ES1–ES5)》等js书籍作者</li>\n<li><a href=\"https://www.zhangxinxu.com/\" target=\"_blank\" rel=\"noopener\">张鑫旭</a> - 知名CSS专家、《CSS世界作者》</li>\n<li><a href=\"https://overreacted.io/\" target=\"_blank\" rel=\"noopener\">Dan Abramov</a> - React 核心开发成员，Redux 作者</li>\n<li><a href=\"http://evanyou.me\" target=\"_blank\" rel=\"noopener\">Evan You 尤雨溪</a> - Vue.js作者</li>\n<li><a href=\"https://github.com/wintercn\" target=\"_blank\" rel=\"noopener\">Shaofei Cheng / winter</a> - 阿里巴巴高级技术专家，知乎大V</li>\n<li><a href=\"https://github.com/lifesinger\" target=\"_blank\" rel=\"noopener\">lifesinger 玉伯</a> - seajs、kiss作者，支付宝前端</li>\n</ul>\n<h4 id=\"高质量的前端公号\"><a href=\"#高质量的前端公号\" class=\"headerlink\" title=\"高质量的前端公号\"></a>高质量的前端公号</h4><ul>\n<li>前端桃园</li>\n</ul>\n<h4 id=\"前端工具资源\"><a href=\"#前端工具资源\" class=\"headerlink\" title=\"前端工具资源\"></a>前端工具资源</h4><ul>\n<li><a href=\"https://devhints.io/\" target=\"_blank\" rel=\"noopener\">fed cheatsheet</a> - all in one，前端snippets速查</li>\n<li><a href=\"https://github.com/30-seconds/30-seconds-of-code\" target=\"_blank\" rel=\"noopener\">精选的JavaScript代码段集合</a> - 开发者可以在30秒或更短的时间内理解这些代码段</li>\n</ul>\n<h4 id=\"rss\"><a href=\"#rss\" class=\"headerlink\" title=\"rss\"></a>rss</h4><!-- #### FE Conf -->\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//不定期更新</span></span><br><span class=\"line\"><span class=\"comment\">//排名不分先后</span></span><br><span class=\"line\"><span class=\"comment\">//推荐请联系邮箱 scarsu001@gmail.com</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"友链\"><a href=\"#友链\" class=\"headerlink\" title=\"友链\"></a>友链</h4><ul>\n<li><a href=\"http://www.taoweng.site\" target=\"_blank\" rel=\"noopener\">前端桃园</a></li>\n<li><a href=\"https://leihuang.dev/\" target=\"_blank\" rel=\"noopener\">Lei Huang</a></li>\n<li><a href=\"http://blog.eccto.cn/index\" target=\"_blank\" rel=\"noopener\">EricChen</a></li>\n<li><a href=\"https://www.liaoyunduo.top/\" target=\"_blank\" rel=\"noopener\">小心</a></li>\n</ul>\n<h4 id=\"优秀的前端团队\"><a href=\"#优秀的前端团队\" class=\"headerlink\" title=\"优秀的前端团队\"></a>优秀的前端团队</h4><ul>\n<li><a href=\"https://75team.com/\" target=\"_blank\" rel=\"noopener\">齐舞团</a></li>\n<li><a href=\"http://fex.baidu.com/\" target=\"_blank\" rel=\"noopener\">百度FEX</a></li>\n</ul>\n<h4 id=\"前端必读书籍\"><a href=\"#前端必读书籍\" class=\"headerlink\" title=\"前端必读书籍\"></a>前端必读书籍</h4><ul>\n<li>Javascript高级程序设计</li>\n<li>Javascript权威指南</li>\n<li>你不知道的Javascript</li>\n</ul>\n<h4 id=\"稳定的前端阅读源\"><a href=\"#稳定的前端阅读源\" class=\"headerlink\" title=\"稳定的前端阅读源\"></a>稳定的前端阅读源</h4><ul>\n<li><a href=\"https://75team.com/\" target=\"_blank\" rel=\"noopener\">齐舞周刊</a></li>\n<li><a href=\"https://javascriptweekly.com/issues\" target=\"_blank\" rel=\"noopener\">javascriptweekly</a></li>\n</ul>\n<h4 id=\"优质的开发者社区-阅读源\"><a href=\"#优质的开发者社区-阅读源\" class=\"headerlink\" title=\"优质的开发者社区/阅读源\"></a>优质的开发者社区/阅读源</h4><ul>\n<li><a href=\"http://www.jstips.co/\" target=\"_blank\" rel=\"noopener\">jstips</a></li>\n</ul>\n<h4 id=\"前端大佬\"><a href=\"#前端大佬\" class=\"headerlink\" title=\"前端大佬\"></a>前端大佬</h4><ul>\n<li><a href=\"https://me.getify.com/\" target=\"_blank\" rel=\"noopener\">getify - Kyle Simpson </a> - you dont know js作者</li>\n<li><a href=\"https://www.h5jun.com/\" target=\"_blank\" rel=\"noopener\">十年踪迹 / 月影</a> - 齐舞团团长，360前端</li>\n<li><a href=\"http://dr-axel.de/\" target=\"_blank\" rel=\"noopener\">Dr. Axel Rauschmayer</a> - 《Speaking JavaScript (ES1–ES5)》等js书籍作者</li>\n<li><a href=\"https://www.zhangxinxu.com/\" target=\"_blank\" rel=\"noopener\">张鑫旭</a> - 知名CSS专家、《CSS世界作者》</li>\n<li><a href=\"https://overreacted.io/\" target=\"_blank\" rel=\"noopener\">Dan Abramov</a> - React 核心开发成员，Redux 作者</li>\n<li><a href=\"http://evanyou.me\" target=\"_blank\" rel=\"noopener\">Evan You 尤雨溪</a> - Vue.js作者</li>\n<li><a href=\"https://github.com/wintercn\" target=\"_blank\" rel=\"noopener\">Shaofei Cheng / winter</a> - 阿里巴巴高级技术专家，知乎大V</li>\n<li><a href=\"https://github.com/lifesinger\" target=\"_blank\" rel=\"noopener\">lifesinger 玉伯</a> - seajs、kiss作者，支付宝前端</li>\n</ul>\n<h4 id=\"高质量的前端公号\"><a href=\"#高质量的前端公号\" class=\"headerlink\" title=\"高质量的前端公号\"></a>高质量的前端公号</h4><ul>\n<li>前端桃园</li>\n</ul>\n<h4 id=\"前端工具资源\"><a href=\"#前端工具资源\" class=\"headerlink\" title=\"前端工具资源\"></a>前端工具资源</h4><ul>\n<li><a href=\"https://devhints.io/\" target=\"_blank\" rel=\"noopener\">fed cheatsheet</a> - all in one，前端snippets速查</li>\n<li><a href=\"https://github.com/30-seconds/30-seconds-of-code\" target=\"_blank\" rel=\"noopener\">精选的JavaScript代码段集合</a> - 开发者可以在30秒或更短的时间内理解这些代码段</li>\n</ul>\n<h4 id=\"rss\"><a href=\"#rss\" class=\"headerlink\" title=\"rss\"></a>rss</h4><!-- #### FE Conf -->\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//不定期更新</span></span><br><span class=\"line\"><span class=\"comment\">//排名不分先后</span></span><br><span class=\"line\"><span class=\"comment\">//推荐请联系邮箱 scarsu001@gmail.com</span></span><br></pre></td></tr></table></figure>"},{"title":"读书笔记","_content":"#### 读书笔记temp","source":"gitbook/index.md","raw":"---\ntitle: 读书笔记\n---\n#### 读书笔记temp","date":"2019-07-05T05:00:34.000Z","updated":"2019-07-05T05:00:34.000Z","path":"gitbook/index.html","_id":"cjxtyumqc000dhbghuikazbue","comments":1,"layout":"page","content":"<h4 id=\"读书笔记temp\"><a href=\"#读书笔记temp\" class=\"headerlink\" title=\"读书笔记temp\"></a>读书笔记temp</h4>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"读书笔记temp\"><a href=\"#读书笔记temp\" class=\"headerlink\" title=\"读书笔记temp\"></a>读书笔记temp</h4>"},{"title":"自律打卡","_content":"#### 为什么要这样自律？\n<a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283439&idx=1&sn=a6478c7f40c8335a208025f02b382a0f&chksm=88bc7865bfcbf173217e7a1d0f9099c50208b992289fa8b355d91d3e0cdbf7d8184b8d011821&token=842281904&lang=zh_CN#rd\">【肥宅的自我救赎之路】</a> \n\n#### 怎样自律的？\n<a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283439&idx=2&sn=2c708569a52da883c86294496ba456da&chksm=88bc7865bfcbf1738ee9bdeb0fe820b28781c29c576b8dc395874b9f56e659bdf09e192ce384&token=842281904&lang=zh_CN#rd\">【自律计划】</a>\n\n#### 作息表？\n<img src=\"/images/schedule v3.0.png\" style=\"max-width:80%;box-shadow: 2px 2px 15px 1px #ada4a4\"/>\n\n#### 在哪监控我每天自律了没有？\n<a href=\"https://note.youdao.com/share/?id=85f08a4786675afec45399748599c7a9&type=note\">【打卡记录】（日更）</a>\n\n\n\n#### 打卡记录 / 每日心得\n<a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283439&idx=4&sn=6ff2baeb5d257721013c28ba3d65b4cb&chksm=88bc7865bfcbf173055919b9b75eb32fbf8fcfd13690204d3a6a894e2034d13994aaf1209ac2&token=842281904&lang=zh_CN#rd\">【自律打卡】Day1</a>\n\n<a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283452&idx=2&sn=92317b888261e19ad13975df565f9f9d&chksm=88bc7876bfcbf16045c6f5662be997cb4ae2cb0f516f98f0dcd71c91531850df0517d2f16ef6&token=842281904&lang=zh_CN#rd\">【自律打卡】Day2</a>\n\n<a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283452&idx=3&sn=32299d12d1796112ec872c70bcde8eb7&chksm=88bc7876bfcbf1601f5797c2d4c1fe4e5e012fe95fb7c81e3ea46d96324f136bd08d75ed8e41&token=842281904&lang=zh_CN#rd\">【自律打卡】Day3</a>\n\n<a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283452&idx=4&sn=159967195260f95d62ad4f34045aec33&chksm=88bc7876bfcbf160c1c947ea3cd540cac694526578de827c4d21e94a9bd84b0c7667b7b9bff4&token=842281904&lang=zh_CN#rd\">【自律打卡】Day14</a>\n\n<a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283452&idx=5&sn=e33736043334c2846b4bdea2ac06f03a&chksm=88bc7876bfcbf160a3b85f4908b88f25c4c52f5ab97b43e4898849f43365b97f7611ab7e7d54&token=842281904&lang=zh_CN#rd\">【自律打卡】Day15</a>\n\n<a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283469&idx=4&sn=19408792790dd0a8ee3640e9ad4c9bb7&chksm=88bc7807bfcbf111f3ed8ead852dda5cf3d54bb79980686b8418cf0dd01a0a524b9b7ec8e940&token=842281904&lang=zh_CN#rd\">【自律打卡】Day16</a>\n\n<a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283469&idx=3&sn=c79219eee494e265ec6d5b9d767716cd&chksm=88bc7807bfcbf1112bc209fe195242a193438eac034c4e349feaea2d8bc335c8ed9f9d647905&token=842281904&lang=zh_CN#rd\">【自律打卡】Day17</a>\n\n<a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283469&idx=2&sn=055ebf9c483569f7cdba0d1484f84e98&chksm=88bc7807bfcbf1116ed86773f3c16cb00ba10a6cb554066b1e792aa856a2fa4251923459adc4&token=842281904&lang=zh_CN#rd\">【自律打卡】Day18</a>\n\n<a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283452&idx=1&sn=4203792d580236028b105e9052dcce90&chksm=88bc7876bfcbf1600dc947abc683099b226e77e39b2d00dac86e422d282b6071b79638673c31&token=842281904&lang=zh_CN#rd\">【自律打卡】Day19</a>\n\n<a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283469&idx=1&sn=d4fc566d7b5dcbbd5e92100895913c06&chksm=88bc7807bfcbf111feea0fdfc188f7fb0e397d050266f1bf698369de571c6eb11e092bbf0d31&token=842281904&lang=zh_CN#rd\">【自律打卡】Day20</a>\n\n<a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283489&idx=1&sn=8521881d61997bc922233d189b465c3f&chksm=88bc782bbfcbf13d2d409ea3b6f1eb9354530ae1e2594784ca0ba4cb5f2c41d3ff6056ae55b8&token=842281904&lang=zh_CN#rd\">【自律打卡】Day21</a>\n\n<a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283503&idx=1&sn=db2e1846a903ba77cc6d229fec3abfd8&chksm=88bc7825bfcbf133ea86c0af29c9eeddf0a50dc338179dfb1b6dafc51298183fa212dbff5cc0&token=842281904&lang=zh_CN#rd\">【自律打卡】Day22</a>\n\n\n<small>计划：写一个脚本自动把文章链接加上来，自己转真累</small>","source":"self_regulation/index.md","raw":"---\ntitle: 自律打卡\n---\n#### 为什么要这样自律？\n<a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283439&idx=1&sn=a6478c7f40c8335a208025f02b382a0f&chksm=88bc7865bfcbf173217e7a1d0f9099c50208b992289fa8b355d91d3e0cdbf7d8184b8d011821&token=842281904&lang=zh_CN#rd\">【肥宅的自我救赎之路】</a> \n\n#### 怎样自律的？\n<a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283439&idx=2&sn=2c708569a52da883c86294496ba456da&chksm=88bc7865bfcbf1738ee9bdeb0fe820b28781c29c576b8dc395874b9f56e659bdf09e192ce384&token=842281904&lang=zh_CN#rd\">【自律计划】</a>\n\n#### 作息表？\n<img src=\"/images/schedule v3.0.png\" style=\"max-width:80%;box-shadow: 2px 2px 15px 1px #ada4a4\"/>\n\n#### 在哪监控我每天自律了没有？\n<a href=\"https://note.youdao.com/share/?id=85f08a4786675afec45399748599c7a9&type=note\">【打卡记录】（日更）</a>\n\n\n\n#### 打卡记录 / 每日心得\n<a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283439&idx=4&sn=6ff2baeb5d257721013c28ba3d65b4cb&chksm=88bc7865bfcbf173055919b9b75eb32fbf8fcfd13690204d3a6a894e2034d13994aaf1209ac2&token=842281904&lang=zh_CN#rd\">【自律打卡】Day1</a>\n\n<a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283452&idx=2&sn=92317b888261e19ad13975df565f9f9d&chksm=88bc7876bfcbf16045c6f5662be997cb4ae2cb0f516f98f0dcd71c91531850df0517d2f16ef6&token=842281904&lang=zh_CN#rd\">【自律打卡】Day2</a>\n\n<a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283452&idx=3&sn=32299d12d1796112ec872c70bcde8eb7&chksm=88bc7876bfcbf1601f5797c2d4c1fe4e5e012fe95fb7c81e3ea46d96324f136bd08d75ed8e41&token=842281904&lang=zh_CN#rd\">【自律打卡】Day3</a>\n\n<a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283452&idx=4&sn=159967195260f95d62ad4f34045aec33&chksm=88bc7876bfcbf160c1c947ea3cd540cac694526578de827c4d21e94a9bd84b0c7667b7b9bff4&token=842281904&lang=zh_CN#rd\">【自律打卡】Day14</a>\n\n<a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283452&idx=5&sn=e33736043334c2846b4bdea2ac06f03a&chksm=88bc7876bfcbf160a3b85f4908b88f25c4c52f5ab97b43e4898849f43365b97f7611ab7e7d54&token=842281904&lang=zh_CN#rd\">【自律打卡】Day15</a>\n\n<a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283469&idx=4&sn=19408792790dd0a8ee3640e9ad4c9bb7&chksm=88bc7807bfcbf111f3ed8ead852dda5cf3d54bb79980686b8418cf0dd01a0a524b9b7ec8e940&token=842281904&lang=zh_CN#rd\">【自律打卡】Day16</a>\n\n<a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283469&idx=3&sn=c79219eee494e265ec6d5b9d767716cd&chksm=88bc7807bfcbf1112bc209fe195242a193438eac034c4e349feaea2d8bc335c8ed9f9d647905&token=842281904&lang=zh_CN#rd\">【自律打卡】Day17</a>\n\n<a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283469&idx=2&sn=055ebf9c483569f7cdba0d1484f84e98&chksm=88bc7807bfcbf1116ed86773f3c16cb00ba10a6cb554066b1e792aa856a2fa4251923459adc4&token=842281904&lang=zh_CN#rd\">【自律打卡】Day18</a>\n\n<a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283452&idx=1&sn=4203792d580236028b105e9052dcce90&chksm=88bc7876bfcbf1600dc947abc683099b226e77e39b2d00dac86e422d282b6071b79638673c31&token=842281904&lang=zh_CN#rd\">【自律打卡】Day19</a>\n\n<a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283469&idx=1&sn=d4fc566d7b5dcbbd5e92100895913c06&chksm=88bc7807bfcbf111feea0fdfc188f7fb0e397d050266f1bf698369de571c6eb11e092bbf0d31&token=842281904&lang=zh_CN#rd\">【自律打卡】Day20</a>\n\n<a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283489&idx=1&sn=8521881d61997bc922233d189b465c3f&chksm=88bc782bbfcbf13d2d409ea3b6f1eb9354530ae1e2594784ca0ba4cb5f2c41d3ff6056ae55b8&token=842281904&lang=zh_CN#rd\">【自律打卡】Day21</a>\n\n<a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283503&idx=1&sn=db2e1846a903ba77cc6d229fec3abfd8&chksm=88bc7825bfcbf133ea86c0af29c9eeddf0a50dc338179dfb1b6dafc51298183fa212dbff5cc0&token=842281904&lang=zh_CN#rd\">【自律打卡】Day22</a>\n\n\n<small>计划：写一个脚本自动把文章链接加上来，自己转真累</small>","date":"2019-07-05T05:00:34.000Z","updated":"2019-07-05T05:00:34.000Z","path":"self_regulation/index.html","_id":"cjxtyun9a002bhbghmtdgwomr","comments":1,"layout":"page","content":"<h4 id=\"为什么要这样自律？\"><a href=\"#为什么要这样自律？\" class=\"headerlink\" title=\"为什么要这样自律？\"></a>为什么要这样自律？</h4><p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283439&idx=1&sn=a6478c7f40c8335a208025f02b382a0f&chksm=88bc7865bfcbf173217e7a1d0f9099c50208b992289fa8b355d91d3e0cdbf7d8184b8d011821&token=842281904&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">【肥宅的自我救赎之路】</a> </p>\n<h4 id=\"怎样自律的？\"><a href=\"#怎样自律的？\" class=\"headerlink\" title=\"怎样自律的？\"></a>怎样自律的？</h4><p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283439&idx=2&sn=2c708569a52da883c86294496ba456da&chksm=88bc7865bfcbf1738ee9bdeb0fe820b28781c29c576b8dc395874b9f56e659bdf09e192ce384&token=842281904&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">【自律计划】</a></p>\n<h4 id=\"作息表？\"><a href=\"#作息表？\" class=\"headerlink\" title=\"作息表？\"></a>作息表？</h4><p><img src=\"/images/schedule v3.0.png\" style=\"max-width:80%;box-shadow: 2px 2px 15px 1px #ada4a4\"></p>\n<h4 id=\"在哪监控我每天自律了没有？\"><a href=\"#在哪监控我每天自律了没有？\" class=\"headerlink\" title=\"在哪监控我每天自律了没有？\"></a>在哪监控我每天自律了没有？</h4><p><a href=\"https://note.youdao.com/share/?id=85f08a4786675afec45399748599c7a9&type=note\" target=\"_blank\" rel=\"noopener\">【打卡记录】（日更）</a></p>\n<h4 id=\"打卡记录-每日心得\"><a href=\"#打卡记录-每日心得\" class=\"headerlink\" title=\"打卡记录 / 每日心得\"></a>打卡记录 / 每日心得</h4><p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283439&idx=4&sn=6ff2baeb5d257721013c28ba3d65b4cb&chksm=88bc7865bfcbf173055919b9b75eb32fbf8fcfd13690204d3a6a894e2034d13994aaf1209ac2&token=842281904&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">【自律打卡】Day1</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283452&idx=2&sn=92317b888261e19ad13975df565f9f9d&chksm=88bc7876bfcbf16045c6f5662be997cb4ae2cb0f516f98f0dcd71c91531850df0517d2f16ef6&token=842281904&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">【自律打卡】Day2</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283452&idx=3&sn=32299d12d1796112ec872c70bcde8eb7&chksm=88bc7876bfcbf1601f5797c2d4c1fe4e5e012fe95fb7c81e3ea46d96324f136bd08d75ed8e41&token=842281904&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">【自律打卡】Day3</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283452&idx=4&sn=159967195260f95d62ad4f34045aec33&chksm=88bc7876bfcbf160c1c947ea3cd540cac694526578de827c4d21e94a9bd84b0c7667b7b9bff4&token=842281904&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">【自律打卡】Day14</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283452&idx=5&sn=e33736043334c2846b4bdea2ac06f03a&chksm=88bc7876bfcbf160a3b85f4908b88f25c4c52f5ab97b43e4898849f43365b97f7611ab7e7d54&token=842281904&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">【自律打卡】Day15</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283469&idx=4&sn=19408792790dd0a8ee3640e9ad4c9bb7&chksm=88bc7807bfcbf111f3ed8ead852dda5cf3d54bb79980686b8418cf0dd01a0a524b9b7ec8e940&token=842281904&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">【自律打卡】Day16</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283469&idx=3&sn=c79219eee494e265ec6d5b9d767716cd&chksm=88bc7807bfcbf1112bc209fe195242a193438eac034c4e349feaea2d8bc335c8ed9f9d647905&token=842281904&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">【自律打卡】Day17</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283469&idx=2&sn=055ebf9c483569f7cdba0d1484f84e98&chksm=88bc7807bfcbf1116ed86773f3c16cb00ba10a6cb554066b1e792aa856a2fa4251923459adc4&token=842281904&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">【自律打卡】Day18</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283452&idx=1&sn=4203792d580236028b105e9052dcce90&chksm=88bc7876bfcbf1600dc947abc683099b226e77e39b2d00dac86e422d282b6071b79638673c31&token=842281904&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">【自律打卡】Day19</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283469&idx=1&sn=d4fc566d7b5dcbbd5e92100895913c06&chksm=88bc7807bfcbf111feea0fdfc188f7fb0e397d050266f1bf698369de571c6eb11e092bbf0d31&token=842281904&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">【自律打卡】Day20</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283489&idx=1&sn=8521881d61997bc922233d189b465c3f&chksm=88bc782bbfcbf13d2d409ea3b6f1eb9354530ae1e2594784ca0ba4cb5f2c41d3ff6056ae55b8&token=842281904&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">【自律打卡】Day21</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283503&idx=1&sn=db2e1846a903ba77cc6d229fec3abfd8&chksm=88bc7825bfcbf133ea86c0af29c9eeddf0a50dc338179dfb1b6dafc51298183fa212dbff5cc0&token=842281904&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">【自律打卡】Day22</a></p>\n<p><small>计划：写一个脚本自动把文章链接加上来，自己转真累</small></p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"为什么要这样自律？\"><a href=\"#为什么要这样自律？\" class=\"headerlink\" title=\"为什么要这样自律？\"></a>为什么要这样自律？</h4><p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283439&idx=1&sn=a6478c7f40c8335a208025f02b382a0f&chksm=88bc7865bfcbf173217e7a1d0f9099c50208b992289fa8b355d91d3e0cdbf7d8184b8d011821&token=842281904&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">【肥宅的自我救赎之路】</a> </p>\n<h4 id=\"怎样自律的？\"><a href=\"#怎样自律的？\" class=\"headerlink\" title=\"怎样自律的？\"></a>怎样自律的？</h4><p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283439&idx=2&sn=2c708569a52da883c86294496ba456da&chksm=88bc7865bfcbf1738ee9bdeb0fe820b28781c29c576b8dc395874b9f56e659bdf09e192ce384&token=842281904&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">【自律计划】</a></p>\n<h4 id=\"作息表？\"><a href=\"#作息表？\" class=\"headerlink\" title=\"作息表？\"></a>作息表？</h4><p><img src=\"/images/schedule v3.0.png\" style=\"max-width:80%;box-shadow: 2px 2px 15px 1px #ada4a4\"></p>\n<h4 id=\"在哪监控我每天自律了没有？\"><a href=\"#在哪监控我每天自律了没有？\" class=\"headerlink\" title=\"在哪监控我每天自律了没有？\"></a>在哪监控我每天自律了没有？</h4><p><a href=\"https://note.youdao.com/share/?id=85f08a4786675afec45399748599c7a9&type=note\" target=\"_blank\" rel=\"noopener\">【打卡记录】（日更）</a></p>\n<h4 id=\"打卡记录-每日心得\"><a href=\"#打卡记录-每日心得\" class=\"headerlink\" title=\"打卡记录 / 每日心得\"></a>打卡记录 / 每日心得</h4><p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283439&idx=4&sn=6ff2baeb5d257721013c28ba3d65b4cb&chksm=88bc7865bfcbf173055919b9b75eb32fbf8fcfd13690204d3a6a894e2034d13994aaf1209ac2&token=842281904&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">【自律打卡】Day1</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283452&idx=2&sn=92317b888261e19ad13975df565f9f9d&chksm=88bc7876bfcbf16045c6f5662be997cb4ae2cb0f516f98f0dcd71c91531850df0517d2f16ef6&token=842281904&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">【自律打卡】Day2</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283452&idx=3&sn=32299d12d1796112ec872c70bcde8eb7&chksm=88bc7876bfcbf1601f5797c2d4c1fe4e5e012fe95fb7c81e3ea46d96324f136bd08d75ed8e41&token=842281904&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">【自律打卡】Day3</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283452&idx=4&sn=159967195260f95d62ad4f34045aec33&chksm=88bc7876bfcbf160c1c947ea3cd540cac694526578de827c4d21e94a9bd84b0c7667b7b9bff4&token=842281904&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">【自律打卡】Day14</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283452&idx=5&sn=e33736043334c2846b4bdea2ac06f03a&chksm=88bc7876bfcbf160a3b85f4908b88f25c4c52f5ab97b43e4898849f43365b97f7611ab7e7d54&token=842281904&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">【自律打卡】Day15</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283469&idx=4&sn=19408792790dd0a8ee3640e9ad4c9bb7&chksm=88bc7807bfcbf111f3ed8ead852dda5cf3d54bb79980686b8418cf0dd01a0a524b9b7ec8e940&token=842281904&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">【自律打卡】Day16</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283469&idx=3&sn=c79219eee494e265ec6d5b9d767716cd&chksm=88bc7807bfcbf1112bc209fe195242a193438eac034c4e349feaea2d8bc335c8ed9f9d647905&token=842281904&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">【自律打卡】Day17</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283469&idx=2&sn=055ebf9c483569f7cdba0d1484f84e98&chksm=88bc7807bfcbf1116ed86773f3c16cb00ba10a6cb554066b1e792aa856a2fa4251923459adc4&token=842281904&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">【自律打卡】Day18</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283452&idx=1&sn=4203792d580236028b105e9052dcce90&chksm=88bc7876bfcbf1600dc947abc683099b226e77e39b2d00dac86e422d282b6071b79638673c31&token=842281904&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">【自律打卡】Day19</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283469&idx=1&sn=d4fc566d7b5dcbbd5e92100895913c06&chksm=88bc7807bfcbf111feea0fdfc188f7fb0e397d050266f1bf698369de571c6eb11e092bbf0d31&token=842281904&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">【自律打卡】Day20</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283489&idx=1&sn=8521881d61997bc922233d189b465c3f&chksm=88bc782bbfcbf13d2d409ea3b6f1eb9354530ae1e2594784ca0ba4cb5f2c41d3ff6056ae55b8&token=842281904&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">【自律打卡】Day21</a></p>\n<p><a href=\"https://mp.weixin.qq.com/s?__biz=MzA5NjM5MjM1Nw==&mid=2650283503&idx=1&sn=db2e1846a903ba77cc6d229fec3abfd8&chksm=88bc7825bfcbf133ea86c0af29c9eeddf0a50dc338179dfb1b6dafc51298183fa212dbff5cc0&token=842281904&lang=zh_CN#rd\" target=\"_blank\" rel=\"noopener\">【自律打卡】Day22</a></p>\n<p><small>计划：写一个脚本自动把文章链接加上来，自己转真累</small></p>\n"}],"Post":[{"title":"2018年度javascript行业报告","date":"2018-12-30T16:00:00.000Z","description":"JavaScript生态圈总是在变化。新的库，新的框架，新的语言..这有时是有乐趣的，但有时也会让人感到压力。","toc":1,"top":0,"_content":"\n![](/images/stateofjs/000.png)\n\n# 数据来源\n\n来自 153 个不同的国家\n\n共 20,268 名 JavaScript 开发者参与调查\n\n中国占总数的 0.37%，共 75 个开发者\n\n(因此本调查报告整体上能反映全球范围的 Javascript 发展趋势，但对国内情况不具有代表性)\n\n**调查参与者 国家分布图：**\n\n![](/images/stateofjs/1.png)\n\n**调查参与者 薪资分布图：**\n\n![](/images/stateofjs/2.png)\n\n**调查参与者 开发经验分布图：**\n\n![](/images/stateofjs/3.png)\n\n**调查参与者 所属公司体量分布图：**\n\n![](/images/stateofjs/4.png)\n\n**调查参与者 性别分布图：**\n\n![](/images/stateofjs/5.png)\n\n# 调查结果\n\n## 1.JavaScript Flavors\n\n可以编译成 javasript 代码 的 各种语言/语法规范/javascript 超集\n\n![](/images/stateofjs/6.png)\n\n## 2.前端框架 Front-end Frameworks\n\n![](/images/stateofjs/7.png)\n\n## 3.数据层 Data Layer\n\n![](/images/stateofjs/8.png)\n\n## 4.后端框架 Back-end Frameworks\n\n![](/images/stateofjs/9.png)\n\n## 5.测试 Testing\n\n![](/images/stateofjs/10.png)\n\n## 6.移动端/客户端 Mobile & Desktop\n\n![](/images/stateofjs/11.png)\n\n## 7.js 开发者使用的其他语言 Other Languages\n\n![](/images/stateofjs/12.png)\n\n## 8.浏览器 API Browser APIs\n\n![](/images/stateofjs/13.png)\n\n## 9.构建工具 Build Tools\n\n![](/images/stateofjs/14.png)\n\n## 10.函数库 Utility Libraries\n\n![](/images/stateofjs/15.png)\n\n## 11.编辑器 Text Editors\n\n![](/images/stateofjs/16.png)\n\n## 12.js 开发者的使用感受+期望\n\n**“Javascript 正在往正确的方向发展”**\n\n![](/images/stateofjs/17.png)\n\n**“当下构建 Javascript app 过于复杂惹”**\n\n![](/images/stateofjs/18.png)\n\n**“Javascript 被过度使用”**\n\n![](/images/stateofjs/19.png)\n\n**“我喜欢构建 JavaScript 应用程序”**\n\n![](/images/stateofjs/20.png)\n\n**“我希望 JavaScript 成为我的主要编程语言”**\n\n![](/images/stateofjs/21.png)\n\n**“JavaScript 生态系统变化太快”**\n\n![](/images/stateofjs/22.png)\n\n**“这项调查太长惹！”**\n\n![](/images/stateofjs/23.png)\n\n# 年度之最\n\n-   **最满意: Jest**\n\n> 96.5%的使用者表示会再次使用\n\n-   **最感兴趣: GraphQL**\n\n> 听说过 GraphQL 的开发者中有 87.7%表示想要学习\n\n-   **最多提及: Vuex**\n\n> 在“other libraries”提问中最多被提及的库\n\n-   **最多使用: React**\n\n> 年度被使用最多的库，参与调查者中有 14417 位使用 React\n\n-   **最黑马: Reason**\n\n> Facebook 带来的 崭露头角的 新技术，也许会像 React 和 GraphQL 一样受欢迎?\n\n-   **最特别: VSCode**\n\n> 我们今年刚刚爱上并无法自拔的工具\n\n# 参赛选手信息\n\n### Javascript Flavors\n\n-   ES6\n\n> ECMA-262 标准的 Edition6(目前已经发布到 ECMA-262 2018/Edition 9)，是 javascript 的规范\n>\n> https://github.com/tc39/ecma262#ecmascript\n\n-   Typescript\n\n> 由微软开发的 添加了可选的静态类型和基于类的面向对象编程 的 JS 超集\n>\n> https://github.com/Microsoft/TypeScript\n\n-   Flow\n\n> JavaScript 添加静态类型检查器\n>\n> https://github.com/facebook/flow\n\n-   Reason\n\n> 简单,快速,类型安全,利用 JavaScript 和 OCaml 生态系统的库\n>\n> http://reasonml.github.io/\n\n-   Elm\n\n> 生成具有出色性能且没有运行时异常的 JavaScript 的语言。\n>\n> https://elm-lang.org/\n\n-   ClojureScript\n\n> ClojureScript 是将 Clojure 成 JavaScript 的编译器。\n>\n> https://clojurescript.org/\n\n### 前端框架\n\n-   React\n\n> React 是一个用于设计用户界面的开源 JavaScript 库。\n>\n> https://github.com/facebook/react\n\n-   Vue.js\n\n> 一套用于构建用户界面的渐进式框架\n>\n> https://cn.vuejs.org/\n\n-   Angular\n\n> 基于 TypeScript 的开源前端 Web 应用程序平台。\n>\n> https://angular.io/\n\n-   Preact\n\n> 3kB 大小的 使用相同的现代 API 的 React 快速替代方案，拥有组件和虚拟 DOM。\n>\n> https://github.com/developit/preact\n\n-   Ember\n\n> 用于创建大型的 Web 应用程序的 JavaScript 框架\n>\n> https://github.com/emberjs/ember.js\n\n-   Polymer\n\n> Web 组件库\n>\n> https://github.com/Polymer/polymer\n\n### 数据层\n\n-   Redux\n\n> JavaScript 应用程序的可预测状态容器\n>\n> https://github.com/reduxjs/redux\n\n-   GraphQL\n\n> 一种与后端服务相关联的查询语言和执行引擎\n>\n> https://github.com/facebook/graphql\n\n-   Apollo\n\n> 适用于每个 UI 框架和 GraphQL 服务器的功能齐全的 可用于生产的 缓存 GraphQL 客户端\n>\n> https://github.com/apollographql/apollo-client\n\n-   MobX\n\n> 简单，可扩展的状态管理\n>\n> https://github.com/mobxjs/mobx\n\n-   Relay/Relay Modern\n\n> Relay 是一个用于构建数据驱动的 React 应用程序的 JavaScript 框架\n>\n> https://github.com/facebook/relay\n\n### 后端框架\n\n-   Express\n\n> 快速简单的 Node 框架\n>\n> https://github.com/expressjs/express\n\n-   Next.js\n\n> 一个多功能 React 服务端框架\n>\n> https://nextjs.org\n\n-   Koa\n\n> 使用 ES2017 异步函数的 node.js 的中间件\n>\n> https://github.com/koajs/koa\n\n-   Meteor\n\n> JavaScript 应用程序平台\n>\n> https://github.com/meteor/meteor\n\n-   Sails\n\n> Node.js 的实时 MVC 框架\n>\n> https://github.com/balderdashy/sails\n\n-   FeathersJS\n\n> 适用于现代应用程序的 REST 和实时 API 层\n> https://github.com/feathersjs/feathers\n\n### Javascript 测试工具\n\n-   Jest\n\n> 令人愉快的 JavaScript 测试工具\n>\n> https://jestjs.io/\n\n-   Mocha\n\n> node.js 和浏览器的简单，灵活，有趣的 javascript 测试框架\n>\n> https://github.com/mochajs/mocha\n\n-   Jasmine\n\n> 适用于浏览器和 node.js 的简单 JavaScript 测试框架\n>\n> https://github.com/jasmine/jasmine\n\n-   Enzyme\n\n> 用于 React 的 JavaScript 测试实用程序\n>\n> https://github.com/airbnb/enzyme\n\n-   Karma\n\n> 健壮的 Javascript 测试工具\n>\n> https://github.com/karma-runner/karma\n\n-   Storybook\n\n> 用于交互式 UI 组件：React，React Native，Vue，Angular，Ember 的开发和测试工具\n>\n> https://github.com/storybooks/storybook\n\n-   Ava\n\n> 未来的 JavaScript 测试工具\n>\n> https://github.com/avajs/ava\n\n### 移动端/客户端\n\n-   Electron\n\n> 使用 JavaScript，HTML 和 CSS 构建跨平台桌面应用程序\n>\n> https://github.com/electron/electron\n\n-   React Native\n\n> 使用 React 构建应用程序的框架\n>\n> https://github.com/facebook/react-native\n\n-   Native Apps\n\n> 原生客户端 App 语言：Java, Kotlin, Objective-C, or Swift 等\n\n-   Cordova\n\n> 移动应用程序开发框架\n>\n> https://cordova.apache.org/\n\n-   Ionic\n\n> 使用开放式 Web 技术构建的原生和渐进式 Web 应用\n>\n> https://github.com/ionic-team/ionic\n\n-   NativeScript\n\n> 用于使用 JavaScript 构建移动端应用程序的开源框架。使用 Web 技能，如 Angular 和 Vue.js，FlexBox 和 CSS，并在 iOS 和 Android 上获得原生 UI 和性能\n>\n> https://github.com/NativeScript/NativeScript\n","source":"_posts/2018_javascript_report.md","raw":"---\ntitle: 2018年度javascript行业报告\ncategories:\n    - FED # 一级分类\ntags:\n    - stateogjs\ndate: 2018-12-31\ndescription: JavaScript生态圈总是在变化。新的库，新的框架，新的语言..这有时是有乐趣的，但有时也会让人感到压力。\ntoc: 1\ntop: 0\n---\n\n![](/images/stateofjs/000.png)\n\n# 数据来源\n\n来自 153 个不同的国家\n\n共 20,268 名 JavaScript 开发者参与调查\n\n中国占总数的 0.37%，共 75 个开发者\n\n(因此本调查报告整体上能反映全球范围的 Javascript 发展趋势，但对国内情况不具有代表性)\n\n**调查参与者 国家分布图：**\n\n![](/images/stateofjs/1.png)\n\n**调查参与者 薪资分布图：**\n\n![](/images/stateofjs/2.png)\n\n**调查参与者 开发经验分布图：**\n\n![](/images/stateofjs/3.png)\n\n**调查参与者 所属公司体量分布图：**\n\n![](/images/stateofjs/4.png)\n\n**调查参与者 性别分布图：**\n\n![](/images/stateofjs/5.png)\n\n# 调查结果\n\n## 1.JavaScript Flavors\n\n可以编译成 javasript 代码 的 各种语言/语法规范/javascript 超集\n\n![](/images/stateofjs/6.png)\n\n## 2.前端框架 Front-end Frameworks\n\n![](/images/stateofjs/7.png)\n\n## 3.数据层 Data Layer\n\n![](/images/stateofjs/8.png)\n\n## 4.后端框架 Back-end Frameworks\n\n![](/images/stateofjs/9.png)\n\n## 5.测试 Testing\n\n![](/images/stateofjs/10.png)\n\n## 6.移动端/客户端 Mobile & Desktop\n\n![](/images/stateofjs/11.png)\n\n## 7.js 开发者使用的其他语言 Other Languages\n\n![](/images/stateofjs/12.png)\n\n## 8.浏览器 API Browser APIs\n\n![](/images/stateofjs/13.png)\n\n## 9.构建工具 Build Tools\n\n![](/images/stateofjs/14.png)\n\n## 10.函数库 Utility Libraries\n\n![](/images/stateofjs/15.png)\n\n## 11.编辑器 Text Editors\n\n![](/images/stateofjs/16.png)\n\n## 12.js 开发者的使用感受+期望\n\n**“Javascript 正在往正确的方向发展”**\n\n![](/images/stateofjs/17.png)\n\n**“当下构建 Javascript app 过于复杂惹”**\n\n![](/images/stateofjs/18.png)\n\n**“Javascript 被过度使用”**\n\n![](/images/stateofjs/19.png)\n\n**“我喜欢构建 JavaScript 应用程序”**\n\n![](/images/stateofjs/20.png)\n\n**“我希望 JavaScript 成为我的主要编程语言”**\n\n![](/images/stateofjs/21.png)\n\n**“JavaScript 生态系统变化太快”**\n\n![](/images/stateofjs/22.png)\n\n**“这项调查太长惹！”**\n\n![](/images/stateofjs/23.png)\n\n# 年度之最\n\n-   **最满意: Jest**\n\n> 96.5%的使用者表示会再次使用\n\n-   **最感兴趣: GraphQL**\n\n> 听说过 GraphQL 的开发者中有 87.7%表示想要学习\n\n-   **最多提及: Vuex**\n\n> 在“other libraries”提问中最多被提及的库\n\n-   **最多使用: React**\n\n> 年度被使用最多的库，参与调查者中有 14417 位使用 React\n\n-   **最黑马: Reason**\n\n> Facebook 带来的 崭露头角的 新技术，也许会像 React 和 GraphQL 一样受欢迎?\n\n-   **最特别: VSCode**\n\n> 我们今年刚刚爱上并无法自拔的工具\n\n# 参赛选手信息\n\n### Javascript Flavors\n\n-   ES6\n\n> ECMA-262 标准的 Edition6(目前已经发布到 ECMA-262 2018/Edition 9)，是 javascript 的规范\n>\n> https://github.com/tc39/ecma262#ecmascript\n\n-   Typescript\n\n> 由微软开发的 添加了可选的静态类型和基于类的面向对象编程 的 JS 超集\n>\n> https://github.com/Microsoft/TypeScript\n\n-   Flow\n\n> JavaScript 添加静态类型检查器\n>\n> https://github.com/facebook/flow\n\n-   Reason\n\n> 简单,快速,类型安全,利用 JavaScript 和 OCaml 生态系统的库\n>\n> http://reasonml.github.io/\n\n-   Elm\n\n> 生成具有出色性能且没有运行时异常的 JavaScript 的语言。\n>\n> https://elm-lang.org/\n\n-   ClojureScript\n\n> ClojureScript 是将 Clojure 成 JavaScript 的编译器。\n>\n> https://clojurescript.org/\n\n### 前端框架\n\n-   React\n\n> React 是一个用于设计用户界面的开源 JavaScript 库。\n>\n> https://github.com/facebook/react\n\n-   Vue.js\n\n> 一套用于构建用户界面的渐进式框架\n>\n> https://cn.vuejs.org/\n\n-   Angular\n\n> 基于 TypeScript 的开源前端 Web 应用程序平台。\n>\n> https://angular.io/\n\n-   Preact\n\n> 3kB 大小的 使用相同的现代 API 的 React 快速替代方案，拥有组件和虚拟 DOM。\n>\n> https://github.com/developit/preact\n\n-   Ember\n\n> 用于创建大型的 Web 应用程序的 JavaScript 框架\n>\n> https://github.com/emberjs/ember.js\n\n-   Polymer\n\n> Web 组件库\n>\n> https://github.com/Polymer/polymer\n\n### 数据层\n\n-   Redux\n\n> JavaScript 应用程序的可预测状态容器\n>\n> https://github.com/reduxjs/redux\n\n-   GraphQL\n\n> 一种与后端服务相关联的查询语言和执行引擎\n>\n> https://github.com/facebook/graphql\n\n-   Apollo\n\n> 适用于每个 UI 框架和 GraphQL 服务器的功能齐全的 可用于生产的 缓存 GraphQL 客户端\n>\n> https://github.com/apollographql/apollo-client\n\n-   MobX\n\n> 简单，可扩展的状态管理\n>\n> https://github.com/mobxjs/mobx\n\n-   Relay/Relay Modern\n\n> Relay 是一个用于构建数据驱动的 React 应用程序的 JavaScript 框架\n>\n> https://github.com/facebook/relay\n\n### 后端框架\n\n-   Express\n\n> 快速简单的 Node 框架\n>\n> https://github.com/expressjs/express\n\n-   Next.js\n\n> 一个多功能 React 服务端框架\n>\n> https://nextjs.org\n\n-   Koa\n\n> 使用 ES2017 异步函数的 node.js 的中间件\n>\n> https://github.com/koajs/koa\n\n-   Meteor\n\n> JavaScript 应用程序平台\n>\n> https://github.com/meteor/meteor\n\n-   Sails\n\n> Node.js 的实时 MVC 框架\n>\n> https://github.com/balderdashy/sails\n\n-   FeathersJS\n\n> 适用于现代应用程序的 REST 和实时 API 层\n> https://github.com/feathersjs/feathers\n\n### Javascript 测试工具\n\n-   Jest\n\n> 令人愉快的 JavaScript 测试工具\n>\n> https://jestjs.io/\n\n-   Mocha\n\n> node.js 和浏览器的简单，灵活，有趣的 javascript 测试框架\n>\n> https://github.com/mochajs/mocha\n\n-   Jasmine\n\n> 适用于浏览器和 node.js 的简单 JavaScript 测试框架\n>\n> https://github.com/jasmine/jasmine\n\n-   Enzyme\n\n> 用于 React 的 JavaScript 测试实用程序\n>\n> https://github.com/airbnb/enzyme\n\n-   Karma\n\n> 健壮的 Javascript 测试工具\n>\n> https://github.com/karma-runner/karma\n\n-   Storybook\n\n> 用于交互式 UI 组件：React，React Native，Vue，Angular，Ember 的开发和测试工具\n>\n> https://github.com/storybooks/storybook\n\n-   Ava\n\n> 未来的 JavaScript 测试工具\n>\n> https://github.com/avajs/ava\n\n### 移动端/客户端\n\n-   Electron\n\n> 使用 JavaScript，HTML 和 CSS 构建跨平台桌面应用程序\n>\n> https://github.com/electron/electron\n\n-   React Native\n\n> 使用 React 构建应用程序的框架\n>\n> https://github.com/facebook/react-native\n\n-   Native Apps\n\n> 原生客户端 App 语言：Java, Kotlin, Objective-C, or Swift 等\n\n-   Cordova\n\n> 移动应用程序开发框架\n>\n> https://cordova.apache.org/\n\n-   Ionic\n\n> 使用开放式 Web 技术构建的原生和渐进式 Web 应用\n>\n> https://github.com/ionic-team/ionic\n\n-   NativeScript\n\n> 用于使用 JavaScript 构建移动端应用程序的开源框架。使用 Web 技能，如 Angular 和 Vue.js，FlexBox 和 CSS，并在 iOS 和 Android 上获得原生 UI 和性能\n>\n> https://github.com/NativeScript/NativeScript\n","slug":"2018_javascript_report","published":1,"updated":"2019-07-05T05:00:34.000Z","_id":"cjxtyumpy0000hbghfad4j8en","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"/images/stateofjs/000.png\" alt></p>\n<h1 id=\"数据来源\"><a href=\"#数据来源\" class=\"headerlink\" title=\"数据来源\"></a>数据来源</h1><p>来自 153 个不同的国家</p>\n<p>共 20,268 名 JavaScript 开发者参与调查</p>\n<p>中国占总数的 0.37%，共 75 个开发者</p>\n<p>(因此本调查报告整体上能反映全球范围的 Javascript 发展趋势，但对国内情况不具有代表性)</p>\n<p><strong>调查参与者 国家分布图：</strong></p>\n<p><img src=\"/images/stateofjs/1.png\" alt></p>\n<p><strong>调查参与者 薪资分布图：</strong></p>\n<p><img src=\"/images/stateofjs/2.png\" alt></p>\n<p><strong>调查参与者 开发经验分布图：</strong></p>\n<p><img src=\"/images/stateofjs/3.png\" alt></p>\n<p><strong>调查参与者 所属公司体量分布图：</strong></p>\n<p><img src=\"/images/stateofjs/4.png\" alt></p>\n<p><strong>调查参与者 性别分布图：</strong></p>\n<p><img src=\"/images/stateofjs/5.png\" alt></p>\n<h1 id=\"调查结果\"><a href=\"#调查结果\" class=\"headerlink\" title=\"调查结果\"></a>调查结果</h1><h2 id=\"1-JavaScript-Flavors\"><a href=\"#1-JavaScript-Flavors\" class=\"headerlink\" title=\"1.JavaScript Flavors\"></a>1.JavaScript Flavors</h2><p>可以编译成 javasript 代码 的 各种语言/语法规范/javascript 超集</p>\n<p><img src=\"/images/stateofjs/6.png\" alt></p>\n<h2 id=\"2-前端框架-Front-end-Frameworks\"><a href=\"#2-前端框架-Front-end-Frameworks\" class=\"headerlink\" title=\"2.前端框架 Front-end Frameworks\"></a>2.前端框架 Front-end Frameworks</h2><p><img src=\"/images/stateofjs/7.png\" alt></p>\n<h2 id=\"3-数据层-Data-Layer\"><a href=\"#3-数据层-Data-Layer\" class=\"headerlink\" title=\"3.数据层 Data Layer\"></a>3.数据层 Data Layer</h2><p><img src=\"/images/stateofjs/8.png\" alt></p>\n<h2 id=\"4-后端框架-Back-end-Frameworks\"><a href=\"#4-后端框架-Back-end-Frameworks\" class=\"headerlink\" title=\"4.后端框架 Back-end Frameworks\"></a>4.后端框架 Back-end Frameworks</h2><p><img src=\"/images/stateofjs/9.png\" alt></p>\n<h2 id=\"5-测试-Testing\"><a href=\"#5-测试-Testing\" class=\"headerlink\" title=\"5.测试 Testing\"></a>5.测试 Testing</h2><p><img src=\"/images/stateofjs/10.png\" alt></p>\n<h2 id=\"6-移动端-客户端-Mobile-amp-Desktop\"><a href=\"#6-移动端-客户端-Mobile-amp-Desktop\" class=\"headerlink\" title=\"6.移动端/客户端 Mobile &amp; Desktop\"></a>6.移动端/客户端 Mobile &amp; Desktop</h2><p><img src=\"/images/stateofjs/11.png\" alt></p>\n<h2 id=\"7-js-开发者使用的其他语言-Other-Languages\"><a href=\"#7-js-开发者使用的其他语言-Other-Languages\" class=\"headerlink\" title=\"7.js 开发者使用的其他语言 Other Languages\"></a>7.js 开发者使用的其他语言 Other Languages</h2><p><img src=\"/images/stateofjs/12.png\" alt></p>\n<h2 id=\"8-浏览器-API-Browser-APIs\"><a href=\"#8-浏览器-API-Browser-APIs\" class=\"headerlink\" title=\"8.浏览器 API Browser APIs\"></a>8.浏览器 API Browser APIs</h2><p><img src=\"/images/stateofjs/13.png\" alt></p>\n<h2 id=\"9-构建工具-Build-Tools\"><a href=\"#9-构建工具-Build-Tools\" class=\"headerlink\" title=\"9.构建工具 Build Tools\"></a>9.构建工具 Build Tools</h2><p><img src=\"/images/stateofjs/14.png\" alt></p>\n<h2 id=\"10-函数库-Utility-Libraries\"><a href=\"#10-函数库-Utility-Libraries\" class=\"headerlink\" title=\"10.函数库 Utility Libraries\"></a>10.函数库 Utility Libraries</h2><p><img src=\"/images/stateofjs/15.png\" alt></p>\n<h2 id=\"11-编辑器-Text-Editors\"><a href=\"#11-编辑器-Text-Editors\" class=\"headerlink\" title=\"11.编辑器 Text Editors\"></a>11.编辑器 Text Editors</h2><p><img src=\"/images/stateofjs/16.png\" alt></p>\n<h2 id=\"12-js-开发者的使用感受-期望\"><a href=\"#12-js-开发者的使用感受-期望\" class=\"headerlink\" title=\"12.js 开发者的使用感受+期望\"></a>12.js 开发者的使用感受+期望</h2><p><strong>“Javascript 正在往正确的方向发展”</strong></p>\n<p><img src=\"/images/stateofjs/17.png\" alt></p>\n<p><strong>“当下构建 Javascript app 过于复杂惹”</strong></p>\n<p><img src=\"/images/stateofjs/18.png\" alt></p>\n<p><strong>“Javascript 被过度使用”</strong></p>\n<p><img src=\"/images/stateofjs/19.png\" alt></p>\n<p><strong>“我喜欢构建 JavaScript 应用程序”</strong></p>\n<p><img src=\"/images/stateofjs/20.png\" alt></p>\n<p><strong>“我希望 JavaScript 成为我的主要编程语言”</strong></p>\n<p><img src=\"/images/stateofjs/21.png\" alt></p>\n<p><strong>“JavaScript 生态系统变化太快”</strong></p>\n<p><img src=\"/images/stateofjs/22.png\" alt></p>\n<p><strong>“这项调查太长惹！”</strong></p>\n<p><img src=\"/images/stateofjs/23.png\" alt></p>\n<h1 id=\"年度之最\"><a href=\"#年度之最\" class=\"headerlink\" title=\"年度之最\"></a>年度之最</h1><ul>\n<li><strong>最满意: Jest</strong></li>\n</ul>\n<blockquote>\n<p>96.5%的使用者表示会再次使用</p>\n</blockquote>\n<ul>\n<li><strong>最感兴趣: GraphQL</strong></li>\n</ul>\n<blockquote>\n<p>听说过 GraphQL 的开发者中有 87.7%表示想要学习</p>\n</blockquote>\n<ul>\n<li><strong>最多提及: Vuex</strong></li>\n</ul>\n<blockquote>\n<p>在“other libraries”提问中最多被提及的库</p>\n</blockquote>\n<ul>\n<li><strong>最多使用: React</strong></li>\n</ul>\n<blockquote>\n<p>年度被使用最多的库，参与调查者中有 14417 位使用 React</p>\n</blockquote>\n<ul>\n<li><strong>最黑马: Reason</strong></li>\n</ul>\n<blockquote>\n<p>Facebook 带来的 崭露头角的 新技术，也许会像 React 和 GraphQL 一样受欢迎?</p>\n</blockquote>\n<ul>\n<li><strong>最特别: VSCode</strong></li>\n</ul>\n<blockquote>\n<p>我们今年刚刚爱上并无法自拔的工具</p>\n</blockquote>\n<h1 id=\"参赛选手信息\"><a href=\"#参赛选手信息\" class=\"headerlink\" title=\"参赛选手信息\"></a>参赛选手信息</h1><h3 id=\"Javascript-Flavors\"><a href=\"#Javascript-Flavors\" class=\"headerlink\" title=\"Javascript Flavors\"></a>Javascript Flavors</h3><ul>\n<li>ES6</li>\n</ul>\n<blockquote>\n<p>ECMA-262 标准的 Edition6(目前已经发布到 ECMA-262 2018/Edition 9)，是 javascript 的规范</p>\n<p><a href=\"https://github.com/tc39/ecma262#ecmascript\" target=\"_blank\" rel=\"noopener\">https://github.com/tc39/ecma262#ecmascript</a></p>\n</blockquote>\n<ul>\n<li>Typescript</li>\n</ul>\n<blockquote>\n<p>由微软开发的 添加了可选的静态类型和基于类的面向对象编程 的 JS 超集</p>\n<p><a href=\"https://github.com/Microsoft/TypeScript\" target=\"_blank\" rel=\"noopener\">https://github.com/Microsoft/TypeScript</a></p>\n</blockquote>\n<ul>\n<li>Flow</li>\n</ul>\n<blockquote>\n<p>JavaScript 添加静态类型检查器</p>\n<p><a href=\"https://github.com/facebook/flow\" target=\"_blank\" rel=\"noopener\">https://github.com/facebook/flow</a></p>\n</blockquote>\n<ul>\n<li>Reason</li>\n</ul>\n<blockquote>\n<p>简单,快速,类型安全,利用 JavaScript 和 OCaml 生态系统的库</p>\n<p><a href=\"http://reasonml.github.io/\" target=\"_blank\" rel=\"noopener\">http://reasonml.github.io/</a></p>\n</blockquote>\n<ul>\n<li>Elm</li>\n</ul>\n<blockquote>\n<p>生成具有出色性能且没有运行时异常的 JavaScript 的语言。</p>\n<p><a href=\"https://elm-lang.org/\" target=\"_blank\" rel=\"noopener\">https://elm-lang.org/</a></p>\n</blockquote>\n<ul>\n<li>ClojureScript</li>\n</ul>\n<blockquote>\n<p>ClojureScript 是将 Clojure 成 JavaScript 的编译器。</p>\n<p><a href=\"https://clojurescript.org/\" target=\"_blank\" rel=\"noopener\">https://clojurescript.org/</a></p>\n</blockquote>\n<h3 id=\"前端框架\"><a href=\"#前端框架\" class=\"headerlink\" title=\"前端框架\"></a>前端框架</h3><ul>\n<li>React</li>\n</ul>\n<blockquote>\n<p>React 是一个用于设计用户界面的开源 JavaScript 库。</p>\n<p><a href=\"https://github.com/facebook/react\" target=\"_blank\" rel=\"noopener\">https://github.com/facebook/react</a></p>\n</blockquote>\n<ul>\n<li>Vue.js</li>\n</ul>\n<blockquote>\n<p>一套用于构建用户界面的渐进式框架</p>\n<p><a href=\"https://cn.vuejs.org/\" target=\"_blank\" rel=\"noopener\">https://cn.vuejs.org/</a></p>\n</blockquote>\n<ul>\n<li>Angular</li>\n</ul>\n<blockquote>\n<p>基于 TypeScript 的开源前端 Web 应用程序平台。</p>\n<p><a href=\"https://angular.io/\" target=\"_blank\" rel=\"noopener\">https://angular.io/</a></p>\n</blockquote>\n<ul>\n<li>Preact</li>\n</ul>\n<blockquote>\n<p>3kB 大小的 使用相同的现代 API 的 React 快速替代方案，拥有组件和虚拟 DOM。</p>\n<p><a href=\"https://github.com/developit/preact\" target=\"_blank\" rel=\"noopener\">https://github.com/developit/preact</a></p>\n</blockquote>\n<ul>\n<li>Ember</li>\n</ul>\n<blockquote>\n<p>用于创建大型的 Web 应用程序的 JavaScript 框架</p>\n<p><a href=\"https://github.com/emberjs/ember.js\" target=\"_blank\" rel=\"noopener\">https://github.com/emberjs/ember.js</a></p>\n</blockquote>\n<ul>\n<li>Polymer</li>\n</ul>\n<blockquote>\n<p>Web 组件库</p>\n<p><a href=\"https://github.com/Polymer/polymer\" target=\"_blank\" rel=\"noopener\">https://github.com/Polymer/polymer</a></p>\n</blockquote>\n<h3 id=\"数据层\"><a href=\"#数据层\" class=\"headerlink\" title=\"数据层\"></a>数据层</h3><ul>\n<li>Redux</li>\n</ul>\n<blockquote>\n<p>JavaScript 应用程序的可预测状态容器</p>\n<p><a href=\"https://github.com/reduxjs/redux\" target=\"_blank\" rel=\"noopener\">https://github.com/reduxjs/redux</a></p>\n</blockquote>\n<ul>\n<li>GraphQL</li>\n</ul>\n<blockquote>\n<p>一种与后端服务相关联的查询语言和执行引擎</p>\n<p><a href=\"https://github.com/facebook/graphql\" target=\"_blank\" rel=\"noopener\">https://github.com/facebook/graphql</a></p>\n</blockquote>\n<ul>\n<li>Apollo</li>\n</ul>\n<blockquote>\n<p>适用于每个 UI 框架和 GraphQL 服务器的功能齐全的 可用于生产的 缓存 GraphQL 客户端</p>\n<p><a href=\"https://github.com/apollographql/apollo-client\" target=\"_blank\" rel=\"noopener\">https://github.com/apollographql/apollo-client</a></p>\n</blockquote>\n<ul>\n<li>MobX</li>\n</ul>\n<blockquote>\n<p>简单，可扩展的状态管理</p>\n<p><a href=\"https://github.com/mobxjs/mobx\" target=\"_blank\" rel=\"noopener\">https://github.com/mobxjs/mobx</a></p>\n</blockquote>\n<ul>\n<li>Relay/Relay Modern</li>\n</ul>\n<blockquote>\n<p>Relay 是一个用于构建数据驱动的 React 应用程序的 JavaScript 框架</p>\n<p><a href=\"https://github.com/facebook/relay\" target=\"_blank\" rel=\"noopener\">https://github.com/facebook/relay</a></p>\n</blockquote>\n<h3 id=\"后端框架\"><a href=\"#后端框架\" class=\"headerlink\" title=\"后端框架\"></a>后端框架</h3><ul>\n<li>Express</li>\n</ul>\n<blockquote>\n<p>快速简单的 Node 框架</p>\n<p><a href=\"https://github.com/expressjs/express\" target=\"_blank\" rel=\"noopener\">https://github.com/expressjs/express</a></p>\n</blockquote>\n<ul>\n<li>Next.js</li>\n</ul>\n<blockquote>\n<p>一个多功能 React 服务端框架</p>\n<p><a href=\"https://nextjs.org\" target=\"_blank\" rel=\"noopener\">https://nextjs.org</a></p>\n</blockquote>\n<ul>\n<li>Koa</li>\n</ul>\n<blockquote>\n<p>使用 ES2017 异步函数的 node.js 的中间件</p>\n<p><a href=\"https://github.com/koajs/koa\" target=\"_blank\" rel=\"noopener\">https://github.com/koajs/koa</a></p>\n</blockquote>\n<ul>\n<li>Meteor</li>\n</ul>\n<blockquote>\n<p>JavaScript 应用程序平台</p>\n<p><a href=\"https://github.com/meteor/meteor\" target=\"_blank\" rel=\"noopener\">https://github.com/meteor/meteor</a></p>\n</blockquote>\n<ul>\n<li>Sails</li>\n</ul>\n<blockquote>\n<p>Node.js 的实时 MVC 框架</p>\n<p><a href=\"https://github.com/balderdashy/sails\" target=\"_blank\" rel=\"noopener\">https://github.com/balderdashy/sails</a></p>\n</blockquote>\n<ul>\n<li>FeathersJS</li>\n</ul>\n<blockquote>\n<p>适用于现代应用程序的 REST 和实时 API 层<br><a href=\"https://github.com/feathersjs/feathers\" target=\"_blank\" rel=\"noopener\">https://github.com/feathersjs/feathers</a></p>\n</blockquote>\n<h3 id=\"Javascript-测试工具\"><a href=\"#Javascript-测试工具\" class=\"headerlink\" title=\"Javascript 测试工具\"></a>Javascript 测试工具</h3><ul>\n<li>Jest</li>\n</ul>\n<blockquote>\n<p>令人愉快的 JavaScript 测试工具</p>\n<p><a href=\"https://jestjs.io/\" target=\"_blank\" rel=\"noopener\">https://jestjs.io/</a></p>\n</blockquote>\n<ul>\n<li>Mocha</li>\n</ul>\n<blockquote>\n<p>node.js 和浏览器的简单，灵活，有趣的 javascript 测试框架</p>\n<p><a href=\"https://github.com/mochajs/mocha\" target=\"_blank\" rel=\"noopener\">https://github.com/mochajs/mocha</a></p>\n</blockquote>\n<ul>\n<li>Jasmine</li>\n</ul>\n<blockquote>\n<p>适用于浏览器和 node.js 的简单 JavaScript 测试框架</p>\n<p><a href=\"https://github.com/jasmine/jasmine\" target=\"_blank\" rel=\"noopener\">https://github.com/jasmine/jasmine</a></p>\n</blockquote>\n<ul>\n<li>Enzyme</li>\n</ul>\n<blockquote>\n<p>用于 React 的 JavaScript 测试实用程序</p>\n<p><a href=\"https://github.com/airbnb/enzyme\" target=\"_blank\" rel=\"noopener\">https://github.com/airbnb/enzyme</a></p>\n</blockquote>\n<ul>\n<li>Karma</li>\n</ul>\n<blockquote>\n<p>健壮的 Javascript 测试工具</p>\n<p><a href=\"https://github.com/karma-runner/karma\" target=\"_blank\" rel=\"noopener\">https://github.com/karma-runner/karma</a></p>\n</blockquote>\n<ul>\n<li>Storybook</li>\n</ul>\n<blockquote>\n<p>用于交互式 UI 组件：React，React Native，Vue，Angular，Ember 的开发和测试工具</p>\n<p><a href=\"https://github.com/storybooks/storybook\" target=\"_blank\" rel=\"noopener\">https://github.com/storybooks/storybook</a></p>\n</blockquote>\n<ul>\n<li>Ava</li>\n</ul>\n<blockquote>\n<p>未来的 JavaScript 测试工具</p>\n<p><a href=\"https://github.com/avajs/ava\" target=\"_blank\" rel=\"noopener\">https://github.com/avajs/ava</a></p>\n</blockquote>\n<h3 id=\"移动端-客户端\"><a href=\"#移动端-客户端\" class=\"headerlink\" title=\"移动端/客户端\"></a>移动端/客户端</h3><ul>\n<li>Electron</li>\n</ul>\n<blockquote>\n<p>使用 JavaScript，HTML 和 CSS 构建跨平台桌面应用程序</p>\n<p><a href=\"https://github.com/electron/electron\" target=\"_blank\" rel=\"noopener\">https://github.com/electron/electron</a></p>\n</blockquote>\n<ul>\n<li>React Native</li>\n</ul>\n<blockquote>\n<p>使用 React 构建应用程序的框架</p>\n<p><a href=\"https://github.com/facebook/react-native\" target=\"_blank\" rel=\"noopener\">https://github.com/facebook/react-native</a></p>\n</blockquote>\n<ul>\n<li>Native Apps</li>\n</ul>\n<blockquote>\n<p>原生客户端 App 语言：Java, Kotlin, Objective-C, or Swift 等</p>\n</blockquote>\n<ul>\n<li>Cordova</li>\n</ul>\n<blockquote>\n<p>移动应用程序开发框架</p>\n<p><a href=\"https://cordova.apache.org/\" target=\"_blank\" rel=\"noopener\">https://cordova.apache.org/</a></p>\n</blockquote>\n<ul>\n<li>Ionic</li>\n</ul>\n<blockquote>\n<p>使用开放式 Web 技术构建的原生和渐进式 Web 应用</p>\n<p><a href=\"https://github.com/ionic-team/ionic\" target=\"_blank\" rel=\"noopener\">https://github.com/ionic-team/ionic</a></p>\n</blockquote>\n<ul>\n<li>NativeScript</li>\n</ul>\n<blockquote>\n<p>用于使用 JavaScript 构建移动端应用程序的开源框架。使用 Web 技能，如 Angular 和 Vue.js，FlexBox 和 CSS，并在 iOS 和 Android 上获得原生 UI 和性能</p>\n<p><a href=\"https://github.com/NativeScript/NativeScript\" target=\"_blank\" rel=\"noopener\">https://github.com/NativeScript/NativeScript</a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/images/stateofjs/000.png\" alt></p>\n<h1 id=\"数据来源\"><a href=\"#数据来源\" class=\"headerlink\" title=\"数据来源\"></a>数据来源</h1><p>来自 153 个不同的国家</p>\n<p>共 20,268 名 JavaScript 开发者参与调查</p>\n<p>中国占总数的 0.37%，共 75 个开发者</p>\n<p>(因此本调查报告整体上能反映全球范围的 Javascript 发展趋势，但对国内情况不具有代表性)</p>\n<p><strong>调查参与者 国家分布图：</strong></p>\n<p><img src=\"/images/stateofjs/1.png\" alt></p>\n<p><strong>调查参与者 薪资分布图：</strong></p>\n<p><img src=\"/images/stateofjs/2.png\" alt></p>\n<p><strong>调查参与者 开发经验分布图：</strong></p>\n<p><img src=\"/images/stateofjs/3.png\" alt></p>\n<p><strong>调查参与者 所属公司体量分布图：</strong></p>\n<p><img src=\"/images/stateofjs/4.png\" alt></p>\n<p><strong>调查参与者 性别分布图：</strong></p>\n<p><img src=\"/images/stateofjs/5.png\" alt></p>\n<h1 id=\"调查结果\"><a href=\"#调查结果\" class=\"headerlink\" title=\"调查结果\"></a>调查结果</h1><h2 id=\"1-JavaScript-Flavors\"><a href=\"#1-JavaScript-Flavors\" class=\"headerlink\" title=\"1.JavaScript Flavors\"></a>1.JavaScript Flavors</h2><p>可以编译成 javasript 代码 的 各种语言/语法规范/javascript 超集</p>\n<p><img src=\"/images/stateofjs/6.png\" alt></p>\n<h2 id=\"2-前端框架-Front-end-Frameworks\"><a href=\"#2-前端框架-Front-end-Frameworks\" class=\"headerlink\" title=\"2.前端框架 Front-end Frameworks\"></a>2.前端框架 Front-end Frameworks</h2><p><img src=\"/images/stateofjs/7.png\" alt></p>\n<h2 id=\"3-数据层-Data-Layer\"><a href=\"#3-数据层-Data-Layer\" class=\"headerlink\" title=\"3.数据层 Data Layer\"></a>3.数据层 Data Layer</h2><p><img src=\"/images/stateofjs/8.png\" alt></p>\n<h2 id=\"4-后端框架-Back-end-Frameworks\"><a href=\"#4-后端框架-Back-end-Frameworks\" class=\"headerlink\" title=\"4.后端框架 Back-end Frameworks\"></a>4.后端框架 Back-end Frameworks</h2><p><img src=\"/images/stateofjs/9.png\" alt></p>\n<h2 id=\"5-测试-Testing\"><a href=\"#5-测试-Testing\" class=\"headerlink\" title=\"5.测试 Testing\"></a>5.测试 Testing</h2><p><img src=\"/images/stateofjs/10.png\" alt></p>\n<h2 id=\"6-移动端-客户端-Mobile-amp-Desktop\"><a href=\"#6-移动端-客户端-Mobile-amp-Desktop\" class=\"headerlink\" title=\"6.移动端/客户端 Mobile &amp; Desktop\"></a>6.移动端/客户端 Mobile &amp; Desktop</h2><p><img src=\"/images/stateofjs/11.png\" alt></p>\n<h2 id=\"7-js-开发者使用的其他语言-Other-Languages\"><a href=\"#7-js-开发者使用的其他语言-Other-Languages\" class=\"headerlink\" title=\"7.js 开发者使用的其他语言 Other Languages\"></a>7.js 开发者使用的其他语言 Other Languages</h2><p><img src=\"/images/stateofjs/12.png\" alt></p>\n<h2 id=\"8-浏览器-API-Browser-APIs\"><a href=\"#8-浏览器-API-Browser-APIs\" class=\"headerlink\" title=\"8.浏览器 API Browser APIs\"></a>8.浏览器 API Browser APIs</h2><p><img src=\"/images/stateofjs/13.png\" alt></p>\n<h2 id=\"9-构建工具-Build-Tools\"><a href=\"#9-构建工具-Build-Tools\" class=\"headerlink\" title=\"9.构建工具 Build Tools\"></a>9.构建工具 Build Tools</h2><p><img src=\"/images/stateofjs/14.png\" alt></p>\n<h2 id=\"10-函数库-Utility-Libraries\"><a href=\"#10-函数库-Utility-Libraries\" class=\"headerlink\" title=\"10.函数库 Utility Libraries\"></a>10.函数库 Utility Libraries</h2><p><img src=\"/images/stateofjs/15.png\" alt></p>\n<h2 id=\"11-编辑器-Text-Editors\"><a href=\"#11-编辑器-Text-Editors\" class=\"headerlink\" title=\"11.编辑器 Text Editors\"></a>11.编辑器 Text Editors</h2><p><img src=\"/images/stateofjs/16.png\" alt></p>\n<h2 id=\"12-js-开发者的使用感受-期望\"><a href=\"#12-js-开发者的使用感受-期望\" class=\"headerlink\" title=\"12.js 开发者的使用感受+期望\"></a>12.js 开发者的使用感受+期望</h2><p><strong>“Javascript 正在往正确的方向发展”</strong></p>\n<p><img src=\"/images/stateofjs/17.png\" alt></p>\n<p><strong>“当下构建 Javascript app 过于复杂惹”</strong></p>\n<p><img src=\"/images/stateofjs/18.png\" alt></p>\n<p><strong>“Javascript 被过度使用”</strong></p>\n<p><img src=\"/images/stateofjs/19.png\" alt></p>\n<p><strong>“我喜欢构建 JavaScript 应用程序”</strong></p>\n<p><img src=\"/images/stateofjs/20.png\" alt></p>\n<p><strong>“我希望 JavaScript 成为我的主要编程语言”</strong></p>\n<p><img src=\"/images/stateofjs/21.png\" alt></p>\n<p><strong>“JavaScript 生态系统变化太快”</strong></p>\n<p><img src=\"/images/stateofjs/22.png\" alt></p>\n<p><strong>“这项调查太长惹！”</strong></p>\n<p><img src=\"/images/stateofjs/23.png\" alt></p>\n<h1 id=\"年度之最\"><a href=\"#年度之最\" class=\"headerlink\" title=\"年度之最\"></a>年度之最</h1><ul>\n<li><strong>最满意: Jest</strong></li>\n</ul>\n<blockquote>\n<p>96.5%的使用者表示会再次使用</p>\n</blockquote>\n<ul>\n<li><strong>最感兴趣: GraphQL</strong></li>\n</ul>\n<blockquote>\n<p>听说过 GraphQL 的开发者中有 87.7%表示想要学习</p>\n</blockquote>\n<ul>\n<li><strong>最多提及: Vuex</strong></li>\n</ul>\n<blockquote>\n<p>在“other libraries”提问中最多被提及的库</p>\n</blockquote>\n<ul>\n<li><strong>最多使用: React</strong></li>\n</ul>\n<blockquote>\n<p>年度被使用最多的库，参与调查者中有 14417 位使用 React</p>\n</blockquote>\n<ul>\n<li><strong>最黑马: Reason</strong></li>\n</ul>\n<blockquote>\n<p>Facebook 带来的 崭露头角的 新技术，也许会像 React 和 GraphQL 一样受欢迎?</p>\n</blockquote>\n<ul>\n<li><strong>最特别: VSCode</strong></li>\n</ul>\n<blockquote>\n<p>我们今年刚刚爱上并无法自拔的工具</p>\n</blockquote>\n<h1 id=\"参赛选手信息\"><a href=\"#参赛选手信息\" class=\"headerlink\" title=\"参赛选手信息\"></a>参赛选手信息</h1><h3 id=\"Javascript-Flavors\"><a href=\"#Javascript-Flavors\" class=\"headerlink\" title=\"Javascript Flavors\"></a>Javascript Flavors</h3><ul>\n<li>ES6</li>\n</ul>\n<blockquote>\n<p>ECMA-262 标准的 Edition6(目前已经发布到 ECMA-262 2018/Edition 9)，是 javascript 的规范</p>\n<p><a href=\"https://github.com/tc39/ecma262#ecmascript\" target=\"_blank\" rel=\"noopener\">https://github.com/tc39/ecma262#ecmascript</a></p>\n</blockquote>\n<ul>\n<li>Typescript</li>\n</ul>\n<blockquote>\n<p>由微软开发的 添加了可选的静态类型和基于类的面向对象编程 的 JS 超集</p>\n<p><a href=\"https://github.com/Microsoft/TypeScript\" target=\"_blank\" rel=\"noopener\">https://github.com/Microsoft/TypeScript</a></p>\n</blockquote>\n<ul>\n<li>Flow</li>\n</ul>\n<blockquote>\n<p>JavaScript 添加静态类型检查器</p>\n<p><a href=\"https://github.com/facebook/flow\" target=\"_blank\" rel=\"noopener\">https://github.com/facebook/flow</a></p>\n</blockquote>\n<ul>\n<li>Reason</li>\n</ul>\n<blockquote>\n<p>简单,快速,类型安全,利用 JavaScript 和 OCaml 生态系统的库</p>\n<p><a href=\"http://reasonml.github.io/\" target=\"_blank\" rel=\"noopener\">http://reasonml.github.io/</a></p>\n</blockquote>\n<ul>\n<li>Elm</li>\n</ul>\n<blockquote>\n<p>生成具有出色性能且没有运行时异常的 JavaScript 的语言。</p>\n<p><a href=\"https://elm-lang.org/\" target=\"_blank\" rel=\"noopener\">https://elm-lang.org/</a></p>\n</blockquote>\n<ul>\n<li>ClojureScript</li>\n</ul>\n<blockquote>\n<p>ClojureScript 是将 Clojure 成 JavaScript 的编译器。</p>\n<p><a href=\"https://clojurescript.org/\" target=\"_blank\" rel=\"noopener\">https://clojurescript.org/</a></p>\n</blockquote>\n<h3 id=\"前端框架\"><a href=\"#前端框架\" class=\"headerlink\" title=\"前端框架\"></a>前端框架</h3><ul>\n<li>React</li>\n</ul>\n<blockquote>\n<p>React 是一个用于设计用户界面的开源 JavaScript 库。</p>\n<p><a href=\"https://github.com/facebook/react\" target=\"_blank\" rel=\"noopener\">https://github.com/facebook/react</a></p>\n</blockquote>\n<ul>\n<li>Vue.js</li>\n</ul>\n<blockquote>\n<p>一套用于构建用户界面的渐进式框架</p>\n<p><a href=\"https://cn.vuejs.org/\" target=\"_blank\" rel=\"noopener\">https://cn.vuejs.org/</a></p>\n</blockquote>\n<ul>\n<li>Angular</li>\n</ul>\n<blockquote>\n<p>基于 TypeScript 的开源前端 Web 应用程序平台。</p>\n<p><a href=\"https://angular.io/\" target=\"_blank\" rel=\"noopener\">https://angular.io/</a></p>\n</blockquote>\n<ul>\n<li>Preact</li>\n</ul>\n<blockquote>\n<p>3kB 大小的 使用相同的现代 API 的 React 快速替代方案，拥有组件和虚拟 DOM。</p>\n<p><a href=\"https://github.com/developit/preact\" target=\"_blank\" rel=\"noopener\">https://github.com/developit/preact</a></p>\n</blockquote>\n<ul>\n<li>Ember</li>\n</ul>\n<blockquote>\n<p>用于创建大型的 Web 应用程序的 JavaScript 框架</p>\n<p><a href=\"https://github.com/emberjs/ember.js\" target=\"_blank\" rel=\"noopener\">https://github.com/emberjs/ember.js</a></p>\n</blockquote>\n<ul>\n<li>Polymer</li>\n</ul>\n<blockquote>\n<p>Web 组件库</p>\n<p><a href=\"https://github.com/Polymer/polymer\" target=\"_blank\" rel=\"noopener\">https://github.com/Polymer/polymer</a></p>\n</blockquote>\n<h3 id=\"数据层\"><a href=\"#数据层\" class=\"headerlink\" title=\"数据层\"></a>数据层</h3><ul>\n<li>Redux</li>\n</ul>\n<blockquote>\n<p>JavaScript 应用程序的可预测状态容器</p>\n<p><a href=\"https://github.com/reduxjs/redux\" target=\"_blank\" rel=\"noopener\">https://github.com/reduxjs/redux</a></p>\n</blockquote>\n<ul>\n<li>GraphQL</li>\n</ul>\n<blockquote>\n<p>一种与后端服务相关联的查询语言和执行引擎</p>\n<p><a href=\"https://github.com/facebook/graphql\" target=\"_blank\" rel=\"noopener\">https://github.com/facebook/graphql</a></p>\n</blockquote>\n<ul>\n<li>Apollo</li>\n</ul>\n<blockquote>\n<p>适用于每个 UI 框架和 GraphQL 服务器的功能齐全的 可用于生产的 缓存 GraphQL 客户端</p>\n<p><a href=\"https://github.com/apollographql/apollo-client\" target=\"_blank\" rel=\"noopener\">https://github.com/apollographql/apollo-client</a></p>\n</blockquote>\n<ul>\n<li>MobX</li>\n</ul>\n<blockquote>\n<p>简单，可扩展的状态管理</p>\n<p><a href=\"https://github.com/mobxjs/mobx\" target=\"_blank\" rel=\"noopener\">https://github.com/mobxjs/mobx</a></p>\n</blockquote>\n<ul>\n<li>Relay/Relay Modern</li>\n</ul>\n<blockquote>\n<p>Relay 是一个用于构建数据驱动的 React 应用程序的 JavaScript 框架</p>\n<p><a href=\"https://github.com/facebook/relay\" target=\"_blank\" rel=\"noopener\">https://github.com/facebook/relay</a></p>\n</blockquote>\n<h3 id=\"后端框架\"><a href=\"#后端框架\" class=\"headerlink\" title=\"后端框架\"></a>后端框架</h3><ul>\n<li>Express</li>\n</ul>\n<blockquote>\n<p>快速简单的 Node 框架</p>\n<p><a href=\"https://github.com/expressjs/express\" target=\"_blank\" rel=\"noopener\">https://github.com/expressjs/express</a></p>\n</blockquote>\n<ul>\n<li>Next.js</li>\n</ul>\n<blockquote>\n<p>一个多功能 React 服务端框架</p>\n<p><a href=\"https://nextjs.org\" target=\"_blank\" rel=\"noopener\">https://nextjs.org</a></p>\n</blockquote>\n<ul>\n<li>Koa</li>\n</ul>\n<blockquote>\n<p>使用 ES2017 异步函数的 node.js 的中间件</p>\n<p><a href=\"https://github.com/koajs/koa\" target=\"_blank\" rel=\"noopener\">https://github.com/koajs/koa</a></p>\n</blockquote>\n<ul>\n<li>Meteor</li>\n</ul>\n<blockquote>\n<p>JavaScript 应用程序平台</p>\n<p><a href=\"https://github.com/meteor/meteor\" target=\"_blank\" rel=\"noopener\">https://github.com/meteor/meteor</a></p>\n</blockquote>\n<ul>\n<li>Sails</li>\n</ul>\n<blockquote>\n<p>Node.js 的实时 MVC 框架</p>\n<p><a href=\"https://github.com/balderdashy/sails\" target=\"_blank\" rel=\"noopener\">https://github.com/balderdashy/sails</a></p>\n</blockquote>\n<ul>\n<li>FeathersJS</li>\n</ul>\n<blockquote>\n<p>适用于现代应用程序的 REST 和实时 API 层<br><a href=\"https://github.com/feathersjs/feathers\" target=\"_blank\" rel=\"noopener\">https://github.com/feathersjs/feathers</a></p>\n</blockquote>\n<h3 id=\"Javascript-测试工具\"><a href=\"#Javascript-测试工具\" class=\"headerlink\" title=\"Javascript 测试工具\"></a>Javascript 测试工具</h3><ul>\n<li>Jest</li>\n</ul>\n<blockquote>\n<p>令人愉快的 JavaScript 测试工具</p>\n<p><a href=\"https://jestjs.io/\" target=\"_blank\" rel=\"noopener\">https://jestjs.io/</a></p>\n</blockquote>\n<ul>\n<li>Mocha</li>\n</ul>\n<blockquote>\n<p>node.js 和浏览器的简单，灵活，有趣的 javascript 测试框架</p>\n<p><a href=\"https://github.com/mochajs/mocha\" target=\"_blank\" rel=\"noopener\">https://github.com/mochajs/mocha</a></p>\n</blockquote>\n<ul>\n<li>Jasmine</li>\n</ul>\n<blockquote>\n<p>适用于浏览器和 node.js 的简单 JavaScript 测试框架</p>\n<p><a href=\"https://github.com/jasmine/jasmine\" target=\"_blank\" rel=\"noopener\">https://github.com/jasmine/jasmine</a></p>\n</blockquote>\n<ul>\n<li>Enzyme</li>\n</ul>\n<blockquote>\n<p>用于 React 的 JavaScript 测试实用程序</p>\n<p><a href=\"https://github.com/airbnb/enzyme\" target=\"_blank\" rel=\"noopener\">https://github.com/airbnb/enzyme</a></p>\n</blockquote>\n<ul>\n<li>Karma</li>\n</ul>\n<blockquote>\n<p>健壮的 Javascript 测试工具</p>\n<p><a href=\"https://github.com/karma-runner/karma\" target=\"_blank\" rel=\"noopener\">https://github.com/karma-runner/karma</a></p>\n</blockquote>\n<ul>\n<li>Storybook</li>\n</ul>\n<blockquote>\n<p>用于交互式 UI 组件：React，React Native，Vue，Angular，Ember 的开发和测试工具</p>\n<p><a href=\"https://github.com/storybooks/storybook\" target=\"_blank\" rel=\"noopener\">https://github.com/storybooks/storybook</a></p>\n</blockquote>\n<ul>\n<li>Ava</li>\n</ul>\n<blockquote>\n<p>未来的 JavaScript 测试工具</p>\n<p><a href=\"https://github.com/avajs/ava\" target=\"_blank\" rel=\"noopener\">https://github.com/avajs/ava</a></p>\n</blockquote>\n<h3 id=\"移动端-客户端\"><a href=\"#移动端-客户端\" class=\"headerlink\" title=\"移动端/客户端\"></a>移动端/客户端</h3><ul>\n<li>Electron</li>\n</ul>\n<blockquote>\n<p>使用 JavaScript，HTML 和 CSS 构建跨平台桌面应用程序</p>\n<p><a href=\"https://github.com/electron/electron\" target=\"_blank\" rel=\"noopener\">https://github.com/electron/electron</a></p>\n</blockquote>\n<ul>\n<li>React Native</li>\n</ul>\n<blockquote>\n<p>使用 React 构建应用程序的框架</p>\n<p><a href=\"https://github.com/facebook/react-native\" target=\"_blank\" rel=\"noopener\">https://github.com/facebook/react-native</a></p>\n</blockquote>\n<ul>\n<li>Native Apps</li>\n</ul>\n<blockquote>\n<p>原生客户端 App 语言：Java, Kotlin, Objective-C, or Swift 等</p>\n</blockquote>\n<ul>\n<li>Cordova</li>\n</ul>\n<blockquote>\n<p>移动应用程序开发框架</p>\n<p><a href=\"https://cordova.apache.org/\" target=\"_blank\" rel=\"noopener\">https://cordova.apache.org/</a></p>\n</blockquote>\n<ul>\n<li>Ionic</li>\n</ul>\n<blockquote>\n<p>使用开放式 Web 技术构建的原生和渐进式 Web 应用</p>\n<p><a href=\"https://github.com/ionic-team/ionic\" target=\"_blank\" rel=\"noopener\">https://github.com/ionic-team/ionic</a></p>\n</blockquote>\n<ul>\n<li>NativeScript</li>\n</ul>\n<blockquote>\n<p>用于使用 JavaScript 构建移动端应用程序的开源框架。使用 Web 技能，如 Angular 和 Vue.js，FlexBox 和 CSS，并在 iOS 和 Android 上获得原生 UI 和性能</p>\n<p><a href=\"https://github.com/NativeScript/NativeScript\" target=\"_blank\" rel=\"noopener\">https://github.com/NativeScript/NativeScript</a></p>\n</blockquote>\n"},{"title":"2018总结+2019计划","date":"2018-12-31T16:00:00.000Z","description":"如果提前了解，你要面对的人生，不知你是否，还会有勇气前来？","toc":1,"top":0,"_content":"\n![](/images/post/000.png)\n\n# 1. 2018 大事记\n\n<br><br>\n\n<p align=\"center\">2018是个不平凡的一年</p>\n\n<br><br>\n\n-   这一年，“洞察者”号登陆火星，嫦娥四号发射成功，SpaceX 把一辆“特斯拉”送入太空，去探索人类的未知\n-   世界首例非人灵长类动物的体细胞克隆：克隆猴“中中”、“华华”在中国科学院诞生，创造了又一个世界奇迹\n-   “跳一跳”、“旅行青蛙”席卷朋友圈，“真实”、“真香”等成了年度词语\n\n<br><br>\n\n-   这一年，“灾”字当选日本 2018 年度汉字\n-   法国爆发了“黄背心”抗议活动，美墨边境爆发移民冲突\n-   美国加州大火肆虐 18 天，巴西国家博物馆发生火灾\n-   台湾花莲县附近海域发生了 6.5 级地震，超强台风“山竹”席卷 11 个市\n-   重庆万州公交车坠江，十几人遇难；普吉岛游船倾覆事件 40 多人遇难\n-   著名主持人李咏(1967-2018)，著名武侠小说作家金庸(1924-2018)，著名物理学家霍金(1942-2018)逝世\n-   这一年是汶川地震十周年\n\n<br><br>\n\n-   这一年，朝韩领导人举行历史性的会晤\n-   武大靖在平昌冬奥会夺冠；亚运会中国男女篮双获冠军，中国女排重夺冠军，苏炳添百米夺冠，孙杨成就大满贯；中国战队 IG 夺冠\n-   今年是改革开放的第 40 年，珠港澳大桥正式通车\n\n<br><br>\n\n<p align=\"center\">同样</p>\n<p align=\"center\">2018年对我来说</p>\n<p align=\"center\">也是个充满了崎岖但最终顺利的一年</p>\n<p align=\"center\">这一年，我也经历了人生中的很多大事</p>\n\n<br><br>\n\n-   年初国考面试失利\n-   几乎同时 外婆查出重病\n-   上半年毕设+转专业要修两门课+同时找工作\n-   6 月赶在 2018 届春招的尾巴找到了目前的工作\n-   8 月正式开始工作直至现在 开始经济独立\n-   期间通过编译原理补考并顺利拿到毕业证\n-   开始自律计划并起步公众号\n-   带着老弟来上海报名培训 开始他人生的新方向\n-   11 月失去了外婆\n\n<br><br>\n\n<p align=\"center\">写出来是短短的几句话</p>\n<p align=\"center\">但都是我本人/我爱的人的人生转折</p>\n<p align=\"center\">是我的辛酸历程</p>\n<p align=\"center\">每句写下，都令我五味杂陈</p>\n\n<br><br>\n\n<p align=\"center\">但还好</p>\n<p align=\"center\">我仍然坚信</p>\n<p align=\"center\">只要我再坚持一下</p>\n<p align=\"center\">再多努力一些</p>\n<p align=\"center\">我会是更好的自己</p>\n<p align=\"center\">我爱的人会变得更幸福一点</p>\n\n<br><br>\n\n# 2. 2018 年度总结\n\n<br><br>\n\n<p align=\"center\">2018年是肥宅我开始醒悟的一年</p>\n<p align=\"center\">这一年</p>\n<p align=\"center\">我开始尝试并坚持一些</p>\n<p align=\"center\">会让自己变得更好的事情</p>\n\n<br><br>\n\n-   我背了 467 个单词 坚持打卡了 25 天\n-   我运动了 2425 分钟 坚持跑步 153 公里\n-   公众号/博客输出了 32 篇文章，读者 从 0 到 90\n-   体重减了 11 斤（从 2018.3 的 91.4 到 2019.1 的 85.6）\n-   学了约 10％ 奇舞团前端课\n-   学了 90％ wesbos React 课\n-   学了 50％ learning how to learn 课程\n-   交了一些前端和自媒体的新朋友\n\n![](/images/post/001.png)\n\n<p align=\"center\">2018自律数据表</p>\n\n<br><br>\n\n![](/images/post/002.png)\n\n<p align=\"center\">2018自律日历</p>\n\n<br><br>\n\n![](/images/post/003.png)\n\n<p align=\"center\">2018单词日历</p>\n\n<br><br>\n\n![](/images/post/004.png)\n\n<p align=\"center\">2018运动数据</p>\n\n<br><br>\n\n<p align=\"center\">虽然醒悟的比较晚</p>\n<p align=\"center\">数据并不出彩   甚至不堪</p>\n<p align=\"center\">但这只是开始</p>\n<p align=\"center\">我希望2019能坚持下去</p>\n\n<br>\n\n<p align=\"center\">成为真正不一样的自己</p>\n\n<br><br>\n\n# 3. 2019 年度计划\n\n2019 年，我希望技术有所提升：\n\n-   学习目标：学完 react 初级课；学 devtools 课；学完奇舞团课程；学 React 进阶课\n-   完成单词计划《托福核心》2504 词\n-   读完两本课外书并输出笔记\n\n<br>\n\n2019 年，我希望能坚持自律、更加健康：\n\n-   运动目标：每周 3 天，每次半小时；keep 升两级\n-   体重目标：75kg\n-   输出目标：博客+公号 50 篇以上\n-   自律打卡：坚持自律，平均分 8 以上\n\n<br>\n\n2019 年，我希望能为身边的人多付出一些：\n\n-   维系十个交心的朋友，亲手寄出/当面送出十份礼物/书信\n-   新年给每一位值得感恩的人/前辈/老师亲手发祝福\n-   每周在小红书/微博/知乎/twitter 活跃/输出一次\n-   更果断的拒绝所有不想参加的聚餐\n-   家庭目标：帮助弟弟找到工作并开始稳定的独立生活；跟家人一起旅行一次；开始拍每年的全家福\n\n<br>\n\n2019 年，我希望能更多的见识这个世界\n\n-   旅行计划：去重庆旅行\n-   交几个不同圈子的新朋友\n\n<br><br>\n\n# 4. 2019 自律计划\n\n![](/images/post/005.png)\n\n<p align=\"center\">2019作息</p>\n\n<br><br>\n\n![](/images/post/006.png)\n\n<p align=\"center\">等待我填充的2019自律日历</p>\n\n<br><br>\n\n# 5. 2019 新定位\n\n> 我是 ScarSu\n>\n> 这里是我写给自己的\n> 自律打卡+技术/认知输出\n>\n> 这里不追时事，不抢热点，没有个人崇拜，不追求阅读量\n>\n> 我只是个平凡普通的程序媛\n> 我只想安静的学技术，高调的自律打卡(只为了自我监督)\n>\n> 如果我们志同道合，欢迎你和我一起\n>\n> 坚持自律，相互监督\n>\n> 成为大脑与身体的真正支配者\n>\n> 【Code and Peace】\n\n<small>本文大事记部分素材来源**人民日报微信公众号**<small>\n\n<p align=\"center\">-end-</p>\n\n---\n","source":"_posts/2018_summary_and_2019_plan.md","raw":"---\ntitle: 2018总结+2019计划\ncategories:\n    - ScarSu # 一级分类\ntags:\n    - ScarSu\ndate: 2019-01-01\ndescription: 如果提前了解，你要面对的人生，不知你是否，还会有勇气前来？\ntoc: 1\ntop: 0\n---\n\n![](/images/post/000.png)\n\n# 1. 2018 大事记\n\n<br><br>\n\n<p align=\"center\">2018是个不平凡的一年</p>\n\n<br><br>\n\n-   这一年，“洞察者”号登陆火星，嫦娥四号发射成功，SpaceX 把一辆“特斯拉”送入太空，去探索人类的未知\n-   世界首例非人灵长类动物的体细胞克隆：克隆猴“中中”、“华华”在中国科学院诞生，创造了又一个世界奇迹\n-   “跳一跳”、“旅行青蛙”席卷朋友圈，“真实”、“真香”等成了年度词语\n\n<br><br>\n\n-   这一年，“灾”字当选日本 2018 年度汉字\n-   法国爆发了“黄背心”抗议活动，美墨边境爆发移民冲突\n-   美国加州大火肆虐 18 天，巴西国家博物馆发生火灾\n-   台湾花莲县附近海域发生了 6.5 级地震，超强台风“山竹”席卷 11 个市\n-   重庆万州公交车坠江，十几人遇难；普吉岛游船倾覆事件 40 多人遇难\n-   著名主持人李咏(1967-2018)，著名武侠小说作家金庸(1924-2018)，著名物理学家霍金(1942-2018)逝世\n-   这一年是汶川地震十周年\n\n<br><br>\n\n-   这一年，朝韩领导人举行历史性的会晤\n-   武大靖在平昌冬奥会夺冠；亚运会中国男女篮双获冠军，中国女排重夺冠军，苏炳添百米夺冠，孙杨成就大满贯；中国战队 IG 夺冠\n-   今年是改革开放的第 40 年，珠港澳大桥正式通车\n\n<br><br>\n\n<p align=\"center\">同样</p>\n<p align=\"center\">2018年对我来说</p>\n<p align=\"center\">也是个充满了崎岖但最终顺利的一年</p>\n<p align=\"center\">这一年，我也经历了人生中的很多大事</p>\n\n<br><br>\n\n-   年初国考面试失利\n-   几乎同时 外婆查出重病\n-   上半年毕设+转专业要修两门课+同时找工作\n-   6 月赶在 2018 届春招的尾巴找到了目前的工作\n-   8 月正式开始工作直至现在 开始经济独立\n-   期间通过编译原理补考并顺利拿到毕业证\n-   开始自律计划并起步公众号\n-   带着老弟来上海报名培训 开始他人生的新方向\n-   11 月失去了外婆\n\n<br><br>\n\n<p align=\"center\">写出来是短短的几句话</p>\n<p align=\"center\">但都是我本人/我爱的人的人生转折</p>\n<p align=\"center\">是我的辛酸历程</p>\n<p align=\"center\">每句写下，都令我五味杂陈</p>\n\n<br><br>\n\n<p align=\"center\">但还好</p>\n<p align=\"center\">我仍然坚信</p>\n<p align=\"center\">只要我再坚持一下</p>\n<p align=\"center\">再多努力一些</p>\n<p align=\"center\">我会是更好的自己</p>\n<p align=\"center\">我爱的人会变得更幸福一点</p>\n\n<br><br>\n\n# 2. 2018 年度总结\n\n<br><br>\n\n<p align=\"center\">2018年是肥宅我开始醒悟的一年</p>\n<p align=\"center\">这一年</p>\n<p align=\"center\">我开始尝试并坚持一些</p>\n<p align=\"center\">会让自己变得更好的事情</p>\n\n<br><br>\n\n-   我背了 467 个单词 坚持打卡了 25 天\n-   我运动了 2425 分钟 坚持跑步 153 公里\n-   公众号/博客输出了 32 篇文章，读者 从 0 到 90\n-   体重减了 11 斤（从 2018.3 的 91.4 到 2019.1 的 85.6）\n-   学了约 10％ 奇舞团前端课\n-   学了 90％ wesbos React 课\n-   学了 50％ learning how to learn 课程\n-   交了一些前端和自媒体的新朋友\n\n![](/images/post/001.png)\n\n<p align=\"center\">2018自律数据表</p>\n\n<br><br>\n\n![](/images/post/002.png)\n\n<p align=\"center\">2018自律日历</p>\n\n<br><br>\n\n![](/images/post/003.png)\n\n<p align=\"center\">2018单词日历</p>\n\n<br><br>\n\n![](/images/post/004.png)\n\n<p align=\"center\">2018运动数据</p>\n\n<br><br>\n\n<p align=\"center\">虽然醒悟的比较晚</p>\n<p align=\"center\">数据并不出彩   甚至不堪</p>\n<p align=\"center\">但这只是开始</p>\n<p align=\"center\">我希望2019能坚持下去</p>\n\n<br>\n\n<p align=\"center\">成为真正不一样的自己</p>\n\n<br><br>\n\n# 3. 2019 年度计划\n\n2019 年，我希望技术有所提升：\n\n-   学习目标：学完 react 初级课；学 devtools 课；学完奇舞团课程；学 React 进阶课\n-   完成单词计划《托福核心》2504 词\n-   读完两本课外书并输出笔记\n\n<br>\n\n2019 年，我希望能坚持自律、更加健康：\n\n-   运动目标：每周 3 天，每次半小时；keep 升两级\n-   体重目标：75kg\n-   输出目标：博客+公号 50 篇以上\n-   自律打卡：坚持自律，平均分 8 以上\n\n<br>\n\n2019 年，我希望能为身边的人多付出一些：\n\n-   维系十个交心的朋友，亲手寄出/当面送出十份礼物/书信\n-   新年给每一位值得感恩的人/前辈/老师亲手发祝福\n-   每周在小红书/微博/知乎/twitter 活跃/输出一次\n-   更果断的拒绝所有不想参加的聚餐\n-   家庭目标：帮助弟弟找到工作并开始稳定的独立生活；跟家人一起旅行一次；开始拍每年的全家福\n\n<br>\n\n2019 年，我希望能更多的见识这个世界\n\n-   旅行计划：去重庆旅行\n-   交几个不同圈子的新朋友\n\n<br><br>\n\n# 4. 2019 自律计划\n\n![](/images/post/005.png)\n\n<p align=\"center\">2019作息</p>\n\n<br><br>\n\n![](/images/post/006.png)\n\n<p align=\"center\">等待我填充的2019自律日历</p>\n\n<br><br>\n\n# 5. 2019 新定位\n\n> 我是 ScarSu\n>\n> 这里是我写给自己的\n> 自律打卡+技术/认知输出\n>\n> 这里不追时事，不抢热点，没有个人崇拜，不追求阅读量\n>\n> 我只是个平凡普通的程序媛\n> 我只想安静的学技术，高调的自律打卡(只为了自我监督)\n>\n> 如果我们志同道合，欢迎你和我一起\n>\n> 坚持自律，相互监督\n>\n> 成为大脑与身体的真正支配者\n>\n> 【Code and Peace】\n\n<small>本文大事记部分素材来源**人民日报微信公众号**<small>\n\n<p align=\"center\">-end-</p>\n\n---\n","slug":"2018_summary_and_2019_plan","published":1,"updated":"2019-07-05T05:00:34.000Z","_id":"cjxtyumq30002hbgh0zj7dchg","comments":1,"layout":"post","photos":[],"link":"","content":"<p><img src=\"/images/post/000.png\" alt></p>\n<h1 id=\"1-2018-大事记\"><a href=\"#1-2018-大事记\" class=\"headerlink\" title=\"1. 2018 大事记\"></a>1. 2018 大事记</h1><p><br><br></p>\n<p align=\"center\">2018是个不平凡的一年</p>\n\n<p><br><br></p>\n<ul>\n<li>这一年，“洞察者”号登陆火星，嫦娥四号发射成功，SpaceX 把一辆“特斯拉”送入太空，去探索人类的未知</li>\n<li>世界首例非人灵长类动物的体细胞克隆：克隆猴“中中”、“华华”在中国科学院诞生，创造了又一个世界奇迹</li>\n<li>“跳一跳”、“旅行青蛙”席卷朋友圈，“真实”、“真香”等成了年度词语</li>\n</ul>\n<p><br><br></p>\n<ul>\n<li>这一年，“灾”字当选日本 2018 年度汉字</li>\n<li>法国爆发了“黄背心”抗议活动，美墨边境爆发移民冲突</li>\n<li>美国加州大火肆虐 18 天，巴西国家博物馆发生火灾</li>\n<li>台湾花莲县附近海域发生了 6.5 级地震，超强台风“山竹”席卷 11 个市</li>\n<li>重庆万州公交车坠江，十几人遇难；普吉岛游船倾覆事件 40 多人遇难</li>\n<li>著名主持人李咏(1967-2018)，著名武侠小说作家金庸(1924-2018)，著名物理学家霍金(1942-2018)逝世</li>\n<li>这一年是汶川地震十周年</li>\n</ul>\n<p><br><br></p>\n<ul>\n<li>这一年，朝韩领导人举行历史性的会晤</li>\n<li>武大靖在平昌冬奥会夺冠；亚运会中国男女篮双获冠军，中国女排重夺冠军，苏炳添百米夺冠，孙杨成就大满贯；中国战队 IG 夺冠</li>\n<li>今年是改革开放的第 40 年，珠港澳大桥正式通车</li>\n</ul>\n<p><br><br></p>\n<p align=\"center\">同样</p><br><p align=\"center\">2018年对我来说</p><br><p align=\"center\">也是个充满了崎岖但最终顺利的一年</p><br><p align=\"center\">这一年，我也经历了人生中的很多大事</p>\n\n<p><br><br></p>\n<ul>\n<li>年初国考面试失利</li>\n<li>几乎同时 外婆查出重病</li>\n<li>上半年毕设+转专业要修两门课+同时找工作</li>\n<li>6 月赶在 2018 届春招的尾巴找到了目前的工作</li>\n<li>8 月正式开始工作直至现在 开始经济独立</li>\n<li>期间通过编译原理补考并顺利拿到毕业证</li>\n<li>开始自律计划并起步公众号</li>\n<li>带着老弟来上海报名培训 开始他人生的新方向</li>\n<li>11 月失去了外婆</li>\n</ul>\n<p><br><br></p>\n<p align=\"center\">写出来是短短的几句话</p><br><p align=\"center\">但都是我本人/我爱的人的人生转折</p><br><p align=\"center\">是我的辛酸历程</p><br><p align=\"center\">每句写下，都令我五味杂陈</p>\n\n<p><br><br></p>\n<p align=\"center\">但还好</p><br><p align=\"center\">我仍然坚信</p><br><p align=\"center\">只要我再坚持一下</p><br><p align=\"center\">再多努力一些</p><br><p align=\"center\">我会是更好的自己</p><br><p align=\"center\">我爱的人会变得更幸福一点</p>\n\n<p><br><br></p>\n<h1 id=\"2-2018-年度总结\"><a href=\"#2-2018-年度总结\" class=\"headerlink\" title=\"2. 2018 年度总结\"></a>2. 2018 年度总结</h1><p><br><br></p>\n<p align=\"center\">2018年是肥宅我开始醒悟的一年</p><br><p align=\"center\">这一年</p><br><p align=\"center\">我开始尝试并坚持一些</p><br><p align=\"center\">会让自己变得更好的事情</p>\n\n<p><br><br></p>\n<ul>\n<li>我背了 467 个单词 坚持打卡了 25 天</li>\n<li>我运动了 2425 分钟 坚持跑步 153 公里</li>\n<li>公众号/博客输出了 32 篇文章，读者 从 0 到 90</li>\n<li>体重减了 11 斤（从 2018.3 的 91.4 到 2019.1 的 85.6）</li>\n<li>学了约 10％ 奇舞团前端课</li>\n<li>学了 90％ wesbos React 课</li>\n<li>学了 50％ learning how to learn 课程</li>\n<li>交了一些前端和自媒体的新朋友</li>\n</ul>\n<p><img src=\"/images/post/001.png\" alt></p>\n<p align=\"center\">2018自律数据表</p>\n\n<p><br><br></p>\n<p><img src=\"/images/post/002.png\" alt></p>\n<p align=\"center\">2018自律日历</p>\n\n<p><br><br></p>\n<p><img src=\"/images/post/003.png\" alt></p>\n<p align=\"center\">2018单词日历</p>\n\n<p><br><br></p>\n<p><img src=\"/images/post/004.png\" alt></p>\n<p align=\"center\">2018运动数据</p>\n\n<p><br><br></p>\n<p align=\"center\">虽然醒悟的比较晚</p><br><p align=\"center\">数据并不出彩   甚至不堪</p><br><p align=\"center\">但这只是开始</p><br><p align=\"center\">我希望2019能坚持下去</p>\n\n<p><br></p>\n<p align=\"center\">成为真正不一样的自己</p>\n\n<p><br><br></p>\n<h1 id=\"3-2019-年度计划\"><a href=\"#3-2019-年度计划\" class=\"headerlink\" title=\"3. 2019 年度计划\"></a>3. 2019 年度计划</h1><p>2019 年，我希望技术有所提升：</p>\n<ul>\n<li>学习目标：学完 react 初级课；学 devtools 课；学完奇舞团课程；学 React 进阶课</li>\n<li>完成单词计划《托福核心》2504 词</li>\n<li>读完两本课外书并输出笔记</li>\n</ul>\n<p><br></p>\n<p>2019 年，我希望能坚持自律、更加健康：</p>\n<ul>\n<li>运动目标：每周 3 天，每次半小时；keep 升两级</li>\n<li>体重目标：75kg</li>\n<li>输出目标：博客+公号 50 篇以上</li>\n<li>自律打卡：坚持自律，平均分 8 以上</li>\n</ul>\n<p><br></p>\n<p>2019 年，我希望能为身边的人多付出一些：</p>\n<ul>\n<li>维系十个交心的朋友，亲手寄出/当面送出十份礼物/书信</li>\n<li>新年给每一位值得感恩的人/前辈/老师亲手发祝福</li>\n<li>每周在小红书/微博/知乎/twitter 活跃/输出一次</li>\n<li>更果断的拒绝所有不想参加的聚餐</li>\n<li>家庭目标：帮助弟弟找到工作并开始稳定的独立生活；跟家人一起旅行一次；开始拍每年的全家福</li>\n</ul>\n<p><br></p>\n<p>2019 年，我希望能更多的见识这个世界</p>\n<ul>\n<li>旅行计划：去重庆旅行</li>\n<li>交几个不同圈子的新朋友</li>\n</ul>\n<p><br><br></p>\n<h1 id=\"4-2019-自律计划\"><a href=\"#4-2019-自律计划\" class=\"headerlink\" title=\"4. 2019 自律计划\"></a>4. 2019 自律计划</h1><p><img src=\"/images/post/005.png\" alt></p>\n<p align=\"center\">2019作息</p>\n\n<p><br><br></p>\n<p><img src=\"/images/post/006.png\" alt></p>\n<p align=\"center\">等待我填充的2019自律日历</p>\n\n<p><br><br></p>\n<h1 id=\"5-2019-新定位\"><a href=\"#5-2019-新定位\" class=\"headerlink\" title=\"5. 2019 新定位\"></a>5. 2019 新定位</h1><blockquote>\n<p>我是 ScarSu</p>\n<p>这里是我写给自己的<br>自律打卡+技术/认知输出</p>\n<p>这里不追时事，不抢热点，没有个人崇拜，不追求阅读量</p>\n<p>我只是个平凡普通的程序媛<br>我只想安静的学技术，高调的自律打卡(只为了自我监督)</p>\n<p>如果我们志同道合，欢迎你和我一起</p>\n<p>坚持自律，相互监督</p>\n<p>成为大脑与身体的真正支配者</p>\n<p>【Code and Peace】</p>\n</blockquote>\n<p><small>本文大事记部分素材来源<strong>人民日报微信公众号</strong><small></small></small></p>\n<p align=\"center\">-end-</p>\n\n<hr>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/images/post/000.png\" alt></p>\n<h1 id=\"1-2018-大事记\"><a href=\"#1-2018-大事记\" class=\"headerlink\" title=\"1. 2018 大事记\"></a>1. 2018 大事记</h1><p><br><br></p>\n<p align=\"center\">2018是个不平凡的一年</p>\n\n<p><br><br></p>\n<ul>\n<li>这一年，“洞察者”号登陆火星，嫦娥四号发射成功，SpaceX 把一辆“特斯拉”送入太空，去探索人类的未知</li>\n<li>世界首例非人灵长类动物的体细胞克隆：克隆猴“中中”、“华华”在中国科学院诞生，创造了又一个世界奇迹</li>\n<li>“跳一跳”、“旅行青蛙”席卷朋友圈，“真实”、“真香”等成了年度词语</li>\n</ul>\n<p><br><br></p>\n<ul>\n<li>这一年，“灾”字当选日本 2018 年度汉字</li>\n<li>法国爆发了“黄背心”抗议活动，美墨边境爆发移民冲突</li>\n<li>美国加州大火肆虐 18 天，巴西国家博物馆发生火灾</li>\n<li>台湾花莲县附近海域发生了 6.5 级地震，超强台风“山竹”席卷 11 个市</li>\n<li>重庆万州公交车坠江，十几人遇难；普吉岛游船倾覆事件 40 多人遇难</li>\n<li>著名主持人李咏(1967-2018)，著名武侠小说作家金庸(1924-2018)，著名物理学家霍金(1942-2018)逝世</li>\n<li>这一年是汶川地震十周年</li>\n</ul>\n<p><br><br></p>\n<ul>\n<li>这一年，朝韩领导人举行历史性的会晤</li>\n<li>武大靖在平昌冬奥会夺冠；亚运会中国男女篮双获冠军，中国女排重夺冠军，苏炳添百米夺冠，孙杨成就大满贯；中国战队 IG 夺冠</li>\n<li>今年是改革开放的第 40 年，珠港澳大桥正式通车</li>\n</ul>\n<p><br><br></p>\n<p align=\"center\">同样</p><br><p align=\"center\">2018年对我来说</p><br><p align=\"center\">也是个充满了崎岖但最终顺利的一年</p><br><p align=\"center\">这一年，我也经历了人生中的很多大事</p>\n\n<p><br><br></p>\n<ul>\n<li>年初国考面试失利</li>\n<li>几乎同时 外婆查出重病</li>\n<li>上半年毕设+转专业要修两门课+同时找工作</li>\n<li>6 月赶在 2018 届春招的尾巴找到了目前的工作</li>\n<li>8 月正式开始工作直至现在 开始经济独立</li>\n<li>期间通过编译原理补考并顺利拿到毕业证</li>\n<li>开始自律计划并起步公众号</li>\n<li>带着老弟来上海报名培训 开始他人生的新方向</li>\n<li>11 月失去了外婆</li>\n</ul>\n<p><br><br></p>\n<p align=\"center\">写出来是短短的几句话</p><br><p align=\"center\">但都是我本人/我爱的人的人生转折</p><br><p align=\"center\">是我的辛酸历程</p><br><p align=\"center\">每句写下，都令我五味杂陈</p>\n\n<p><br><br></p>\n<p align=\"center\">但还好</p><br><p align=\"center\">我仍然坚信</p><br><p align=\"center\">只要我再坚持一下</p><br><p align=\"center\">再多努力一些</p><br><p align=\"center\">我会是更好的自己</p><br><p align=\"center\">我爱的人会变得更幸福一点</p>\n\n<p><br><br></p>\n<h1 id=\"2-2018-年度总结\"><a href=\"#2-2018-年度总结\" class=\"headerlink\" title=\"2. 2018 年度总结\"></a>2. 2018 年度总结</h1><p><br><br></p>\n<p align=\"center\">2018年是肥宅我开始醒悟的一年</p><br><p align=\"center\">这一年</p><br><p align=\"center\">我开始尝试并坚持一些</p><br><p align=\"center\">会让自己变得更好的事情</p>\n\n<p><br><br></p>\n<ul>\n<li>我背了 467 个单词 坚持打卡了 25 天</li>\n<li>我运动了 2425 分钟 坚持跑步 153 公里</li>\n<li>公众号/博客输出了 32 篇文章，读者 从 0 到 90</li>\n<li>体重减了 11 斤（从 2018.3 的 91.4 到 2019.1 的 85.6）</li>\n<li>学了约 10％ 奇舞团前端课</li>\n<li>学了 90％ wesbos React 课</li>\n<li>学了 50％ learning how to learn 课程</li>\n<li>交了一些前端和自媒体的新朋友</li>\n</ul>\n<p><img src=\"/images/post/001.png\" alt></p>\n<p align=\"center\">2018自律数据表</p>\n\n<p><br><br></p>\n<p><img src=\"/images/post/002.png\" alt></p>\n<p align=\"center\">2018自律日历</p>\n\n<p><br><br></p>\n<p><img src=\"/images/post/003.png\" alt></p>\n<p align=\"center\">2018单词日历</p>\n\n<p><br><br></p>\n<p><img src=\"/images/post/004.png\" alt></p>\n<p align=\"center\">2018运动数据</p>\n\n<p><br><br></p>\n<p align=\"center\">虽然醒悟的比较晚</p><br><p align=\"center\">数据并不出彩   甚至不堪</p><br><p align=\"center\">但这只是开始</p><br><p align=\"center\">我希望2019能坚持下去</p>\n\n<p><br></p>\n<p align=\"center\">成为真正不一样的自己</p>\n\n<p><br><br></p>\n<h1 id=\"3-2019-年度计划\"><a href=\"#3-2019-年度计划\" class=\"headerlink\" title=\"3. 2019 年度计划\"></a>3. 2019 年度计划</h1><p>2019 年，我希望技术有所提升：</p>\n<ul>\n<li>学习目标：学完 react 初级课；学 devtools 课；学完奇舞团课程；学 React 进阶课</li>\n<li>完成单词计划《托福核心》2504 词</li>\n<li>读完两本课外书并输出笔记</li>\n</ul>\n<p><br></p>\n<p>2019 年，我希望能坚持自律、更加健康：</p>\n<ul>\n<li>运动目标：每周 3 天，每次半小时；keep 升两级</li>\n<li>体重目标：75kg</li>\n<li>输出目标：博客+公号 50 篇以上</li>\n<li>自律打卡：坚持自律，平均分 8 以上</li>\n</ul>\n<p><br></p>\n<p>2019 年，我希望能为身边的人多付出一些：</p>\n<ul>\n<li>维系十个交心的朋友，亲手寄出/当面送出十份礼物/书信</li>\n<li>新年给每一位值得感恩的人/前辈/老师亲手发祝福</li>\n<li>每周在小红书/微博/知乎/twitter 活跃/输出一次</li>\n<li>更果断的拒绝所有不想参加的聚餐</li>\n<li>家庭目标：帮助弟弟找到工作并开始稳定的独立生活；跟家人一起旅行一次；开始拍每年的全家福</li>\n</ul>\n<p><br></p>\n<p>2019 年，我希望能更多的见识这个世界</p>\n<ul>\n<li>旅行计划：去重庆旅行</li>\n<li>交几个不同圈子的新朋友</li>\n</ul>\n<p><br><br></p>\n<h1 id=\"4-2019-自律计划\"><a href=\"#4-2019-自律计划\" class=\"headerlink\" title=\"4. 2019 自律计划\"></a>4. 2019 自律计划</h1><p><img src=\"/images/post/005.png\" alt></p>\n<p align=\"center\">2019作息</p>\n\n<p><br><br></p>\n<p><img src=\"/images/post/006.png\" alt></p>\n<p align=\"center\">等待我填充的2019自律日历</p>\n\n<p><br><br></p>\n<h1 id=\"5-2019-新定位\"><a href=\"#5-2019-新定位\" class=\"headerlink\" title=\"5. 2019 新定位\"></a>5. 2019 新定位</h1><blockquote>\n<p>我是 ScarSu</p>\n<p>这里是我写给自己的<br>自律打卡+技术/认知输出</p>\n<p>这里不追时事，不抢热点，没有个人崇拜，不追求阅读量</p>\n<p>我只是个平凡普通的程序媛<br>我只想安静的学技术，高调的自律打卡(只为了自我监督)</p>\n<p>如果我们志同道合，欢迎你和我一起</p>\n<p>坚持自律，相互监督</p>\n<p>成为大脑与身体的真正支配者</p>\n<p>【Code and Peace】</p>\n</blockquote>\n<p><small>本文大事记部分素材来源<strong>人民日报微信公众号</strong><small></small></small></p>\n<p align=\"center\">-end-</p>\n\n<hr>\n"},{"title":"360FED课程——HTML","date":"2018-09-01T16:00:00.000Z","description":"这么穷为什么还花钱买HTML学？","toc":1,"top":0,"_content":"\n# 1. 前端做什么\n\n用 web 标准技术 html css js svg http 等\n\n做界面与交互\n\n功能+美观+无障碍+安全+兼容+性能+体验\n\n# 2. 知识图谱/技术栈\n\n## 2.1. 语言\n\n-   js\n-   html\n-   css\n-   php\n\n## 2.2. 行业标准\n\n-   DOM\n-   ES2018\n-   HTTP\n-   JSON\n-   XML\n\n## 2.3. 框架\n\n-   React.js\n-   Angular.js\n-   jQuery\n-   Vue.js\n-   lodash\n\n## 2.4. 兼容性\n\n-   IE 等浏览器\n-   CSS3 新特性\n-   HTML5 新特性\n-   ES2018\n-   移动端\n\n## 2.5. 编程思想\n\n-   函数式编程\n-   面向对象\n-   设计模式\n\n## 2.6. 调试\n\n-   浏览器\n-   Fiddler http\n\n## 2.7. 工程化\n\n-   npm\n-   webpack\n-   postcss\n\n## 2.8. 安全性\n\n-   XSS\n-   CSRF\n-   加密解密\n-   编解码\n\n## 2.9. 性能\n\n-   优化规则\n-   开发者工具\n-   浏览器原理\n\n## 2.10. 团队协作\n\n-   git/svn\n-   编码规范/eslint\n-   文档管理\n\n## 2.11. 交互设计\n\n# 3. 前端边界\n\nnode、electron、react native、webRTC、WebGL、WEBAssembly\n\n# 4. HTML\n\n## 4.1. doctype\n\n-   指定文档使用的标准和版本；\n-   浏览器根据 doctype 决定使用哪种渲染模式；\n-   没写会以怪异模式渲染（盒模型不同等待）\n-   渲染模式\n\n## 4.2. 语义化\n\n-   元素、属性、属性值都有特定含义，应该遵循语义来写 HTML\n-   可读性、可维护性、搜索引擎优化、无障碍性\n\n## 4.3. 标签\n\n### 4.3.1. flow 流式元素：\n\n-   heading 标题\n-   sectioning 章节\n-   phrasing 段落内容 p h\n-   Embedded 嵌入式内容 audio canvas\n-   interactive 可交互性内容 button a\n-   metadata 元数据元素 base link meta noscript script style title\n\n### 4.3.2. 看规范\n\n## 4.4. HTML 扩展\n\n### 4.4.1. meta 标签（增加元数据\n\n```HTML\n<!-- 编码 -->\n<meta charset=\"utf-8\">\n\n<!-- 指定http header -->\n<meta http-equiv=\"Content-Security-Policy\" content=\"script-src 'self'\">\n\n<!-- seo优化 -->\n<meta name=\"keywords\" content=\"关键词\">\n<meta name=\"description\" content=\"页面介绍\">\n\n<!-- 移动设备的viewport 初始缩放比例，视口宽度 -->\n<meta name=\"viewport\" content=\"initial-scale=1\">\n\n<!-- 关闭IOS电话号码识别 -->\n<meta name=\"format-detection\" content=\"telphone=no\">\n\n<!-- 360等双核浏览器 指定渲染内核 -->\n<meta name=\"renderer\" content=\"webkit\">\n\n<!-- 指定IE渲染模式 -->\n<meta name=\"X-UA-Compatibla\" content=\"IE=Edge\">\n```\n\n### 4.4.2. data-\\*属性（规范内-自定义的属性）\n\n```HTML\n  datasetAPI\n    <el data-id=\"\"/>\n    el.dataset.id\n```\n\n### 4.4.3. link\n\n-   rel 属性（relation 关系，外部资源与当前页面的关系）\n\n```html\n<!-- 引入css -->\n<link rel=\"stylesheet\" href=\"\" />\n\n<!--\n    浏览器性能优化：dns预解析rel=dns-prefetch、资源预加载rel=prefetch、预渲染 rel=prerender\n-->\n<link rel=\"dns-prefetch\" href=\"\" /> <link rel=\"prefetch\" href=\"\" />\n<link rel=\"prerender\" href=\"\" />\n\n<!-- favicon：rel=icon -->\n<link rel=\"icon\" type=\"image/png\" href=\"\" />\n\n<!-- RSS：rel=alternate -->\n<link rel=\"alternate\" type=\"application/rss+xml\" href=\"\" />\n```\n\n### 4.4.4. JSON-LD\n\nLD：linkdata 链接的数据 (直接在页面嵌 json 数据)\n\n```js\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"http://schema.org\",\n  \"@type\": \"Person\",\n  \"name\": \"John Doe\",\n  \"jobTitle\": \"Graduate research assistant\",\n  \"affiliation\": \"University of Dreams\",\n  \"additionalName\": \"Johnny\",\n  \"url\": \"http://www.example.com\",\n  \"address\": {\n    \"@type\": \"PostalAddress\",\n    \"streetAddress\": \"1234 Peach Drive\",\n    \"addressLocality\": \"Wonderland\",\n    \"addressRegion\": \"Georgia\"\n  }\n}\n//  应用例如分享页面时的数据\n//  搜索引擎能识别等等\n//  分享链接带有一些标题图片等信息\n</script>\n```\n\n## 4.5. Web 无障碍/Accessibility\n\n-   一些 Web 开发者规范：\n    -   WCAG2.0\n    -   ARIA\n-   提升无障碍性\n    -   img alt\n    -   noscript\n    -   input 和 label 对应\n    -   图片验证码与语音验证码\n    -   文字背景对比度\n    -   键盘可操作（tab modal focus）\n\n## 4.6. 工具\n\n-   [W3C Validator（检查 html 合法性）](http://validator.w3.org/)\n-   emmet（插件）\n-   markdown（适合写文档）\n\n## 4.7. 参考链接\n\n-   [HTML: The Living Standard](https://html.spec.whatwg.org/dev/)\n-   [Activating Browser Modes with Doctype](https://hsivonen.fi/doctype/)\n-   [Accessibility](https://www.w3.org/standards/webdesign/accessibility)\n-   Web Content Accessibility Guidelines 2.0\n-   [HTML5 Doctor: Semantics](http://html5doctor.com/element-index/)\n\n## 全局属性\n\n### class id style\n\n### title\n\n（兼容性最好的 tooltip😂）\n\n### tabindex\n\ntab 键控制次序\n\n### lang\n\n语言代码（利于语义化机器理解）（语言代码参考手册http://www.runoob.com/tags/html-language-codes.html）\n\n### dir\n\n文本方向（rtl ltr auto）\n\n### accesskey\n\n元素的键盘访问快捷键（例值为'h'则不同浏览器不同 OS 有不同的操作方式，例 chrome 是 alt + 'h'）\n\n## （HTML5 全局属性）\n\n### data-\\*属性\n\n属性名不要包含大写字母，在 data- 后必须至少有一个字符。\n该属性可以是任何字符串\n\n```\nel.getAttribute(\"data-xx\")\n```\n\n### hidden\n\n不需要属性值，隐藏元素，原理是 display:none\n\n### contenteditable\n\n元素是否可编辑\n\n### contextmenu\n\n（说是目前只有 firefox 支持，亲测没效果\n\n```\n<p contextmenu=\"mymenu\"></p>\n<menu id=\"mymenu\">\n    <command label=\"xxx\" onclick=\"fn()\"/>\n    <command label=\"xxx\" onclick=\"fn()\"/>\n</menu>\n```\n\n### draggable：(与 HTML5drag 结合用)\n\n```javascript\n\n<div id=\"div1\" ondrop=\"drop(event)\" ondragover=\"allowDrop(event)\"></div>\n<p id=\"drag1\" draggable=\"true\" ondragstart=\"drag(event)\">这是一段可移动的段落。可把该段落拖入上下的矩形。</p>\n<div id=\"div2\" ondrop=\"drop(event)\" ondragover=\"allowDrop(event)\"></div>\n\nfunction allowDrop(ev){\n\tev.preventDefault();\n}\nfunction drag(ev){\n\tev.dataTransfer.setData(\"Text\",ev.target.id);\n}\nfunction drop(ev){\n\tvar data=ev.dataTransfer.getData(\"Text\");\n\tev.target.appendChild(document.getElementById(data));\n\tev.preventDefault();\n}\n\n```\n\n### dropzone 属性:\n\n规定当被拖动的数据在拖放到元素上时，是否被复制### 动或链接,无浏览器支持\n\n### sppelcheck：\n\n对元素的文本进行拼写检查\n\n### translate 属性：\n\n规定元素内容是否要翻译，=yes|no\n\n# 遗留\n\n表单元素 属性 datalist select 下拉多选 input 的 multiple 属性 button 的 type 属性默认值\nvideo 不能嵌套 img\np 不能嵌套 div\nfigure dfn cite 标签\n\n---\n\n    “因为你永远不知道你不知道的有多少”\n","source":"_posts/360fe_01_html.md","raw":"---\ntitle: 360FED课程——HTML\ncategories:\n    - html # 一级分类\ntags:\n    - 360fed\n    - html\ndate: 2018-09-02\ndescription: 这么穷为什么还花钱买HTML学？\ntoc: 1\ntop: 0\n---\n\n# 1. 前端做什么\n\n用 web 标准技术 html css js svg http 等\n\n做界面与交互\n\n功能+美观+无障碍+安全+兼容+性能+体验\n\n# 2. 知识图谱/技术栈\n\n## 2.1. 语言\n\n-   js\n-   html\n-   css\n-   php\n\n## 2.2. 行业标准\n\n-   DOM\n-   ES2018\n-   HTTP\n-   JSON\n-   XML\n\n## 2.3. 框架\n\n-   React.js\n-   Angular.js\n-   jQuery\n-   Vue.js\n-   lodash\n\n## 2.4. 兼容性\n\n-   IE 等浏览器\n-   CSS3 新特性\n-   HTML5 新特性\n-   ES2018\n-   移动端\n\n## 2.5. 编程思想\n\n-   函数式编程\n-   面向对象\n-   设计模式\n\n## 2.6. 调试\n\n-   浏览器\n-   Fiddler http\n\n## 2.7. 工程化\n\n-   npm\n-   webpack\n-   postcss\n\n## 2.8. 安全性\n\n-   XSS\n-   CSRF\n-   加密解密\n-   编解码\n\n## 2.9. 性能\n\n-   优化规则\n-   开发者工具\n-   浏览器原理\n\n## 2.10. 团队协作\n\n-   git/svn\n-   编码规范/eslint\n-   文档管理\n\n## 2.11. 交互设计\n\n# 3. 前端边界\n\nnode、electron、react native、webRTC、WebGL、WEBAssembly\n\n# 4. HTML\n\n## 4.1. doctype\n\n-   指定文档使用的标准和版本；\n-   浏览器根据 doctype 决定使用哪种渲染模式；\n-   没写会以怪异模式渲染（盒模型不同等待）\n-   渲染模式\n\n## 4.2. 语义化\n\n-   元素、属性、属性值都有特定含义，应该遵循语义来写 HTML\n-   可读性、可维护性、搜索引擎优化、无障碍性\n\n## 4.3. 标签\n\n### 4.3.1. flow 流式元素：\n\n-   heading 标题\n-   sectioning 章节\n-   phrasing 段落内容 p h\n-   Embedded 嵌入式内容 audio canvas\n-   interactive 可交互性内容 button a\n-   metadata 元数据元素 base link meta noscript script style title\n\n### 4.3.2. 看规范\n\n## 4.4. HTML 扩展\n\n### 4.4.1. meta 标签（增加元数据\n\n```HTML\n<!-- 编码 -->\n<meta charset=\"utf-8\">\n\n<!-- 指定http header -->\n<meta http-equiv=\"Content-Security-Policy\" content=\"script-src 'self'\">\n\n<!-- seo优化 -->\n<meta name=\"keywords\" content=\"关键词\">\n<meta name=\"description\" content=\"页面介绍\">\n\n<!-- 移动设备的viewport 初始缩放比例，视口宽度 -->\n<meta name=\"viewport\" content=\"initial-scale=1\">\n\n<!-- 关闭IOS电话号码识别 -->\n<meta name=\"format-detection\" content=\"telphone=no\">\n\n<!-- 360等双核浏览器 指定渲染内核 -->\n<meta name=\"renderer\" content=\"webkit\">\n\n<!-- 指定IE渲染模式 -->\n<meta name=\"X-UA-Compatibla\" content=\"IE=Edge\">\n```\n\n### 4.4.2. data-\\*属性（规范内-自定义的属性）\n\n```HTML\n  datasetAPI\n    <el data-id=\"\"/>\n    el.dataset.id\n```\n\n### 4.4.3. link\n\n-   rel 属性（relation 关系，外部资源与当前页面的关系）\n\n```html\n<!-- 引入css -->\n<link rel=\"stylesheet\" href=\"\" />\n\n<!--\n    浏览器性能优化：dns预解析rel=dns-prefetch、资源预加载rel=prefetch、预渲染 rel=prerender\n-->\n<link rel=\"dns-prefetch\" href=\"\" /> <link rel=\"prefetch\" href=\"\" />\n<link rel=\"prerender\" href=\"\" />\n\n<!-- favicon：rel=icon -->\n<link rel=\"icon\" type=\"image/png\" href=\"\" />\n\n<!-- RSS：rel=alternate -->\n<link rel=\"alternate\" type=\"application/rss+xml\" href=\"\" />\n```\n\n### 4.4.4. JSON-LD\n\nLD：linkdata 链接的数据 (直接在页面嵌 json 数据)\n\n```js\n<script type=\"application/ld+json\">\n{\n  \"@context\": \"http://schema.org\",\n  \"@type\": \"Person\",\n  \"name\": \"John Doe\",\n  \"jobTitle\": \"Graduate research assistant\",\n  \"affiliation\": \"University of Dreams\",\n  \"additionalName\": \"Johnny\",\n  \"url\": \"http://www.example.com\",\n  \"address\": {\n    \"@type\": \"PostalAddress\",\n    \"streetAddress\": \"1234 Peach Drive\",\n    \"addressLocality\": \"Wonderland\",\n    \"addressRegion\": \"Georgia\"\n  }\n}\n//  应用例如分享页面时的数据\n//  搜索引擎能识别等等\n//  分享链接带有一些标题图片等信息\n</script>\n```\n\n## 4.5. Web 无障碍/Accessibility\n\n-   一些 Web 开发者规范：\n    -   WCAG2.0\n    -   ARIA\n-   提升无障碍性\n    -   img alt\n    -   noscript\n    -   input 和 label 对应\n    -   图片验证码与语音验证码\n    -   文字背景对比度\n    -   键盘可操作（tab modal focus）\n\n## 4.6. 工具\n\n-   [W3C Validator（检查 html 合法性）](http://validator.w3.org/)\n-   emmet（插件）\n-   markdown（适合写文档）\n\n## 4.7. 参考链接\n\n-   [HTML: The Living Standard](https://html.spec.whatwg.org/dev/)\n-   [Activating Browser Modes with Doctype](https://hsivonen.fi/doctype/)\n-   [Accessibility](https://www.w3.org/standards/webdesign/accessibility)\n-   Web Content Accessibility Guidelines 2.0\n-   [HTML5 Doctor: Semantics](http://html5doctor.com/element-index/)\n\n## 全局属性\n\n### class id style\n\n### title\n\n（兼容性最好的 tooltip😂）\n\n### tabindex\n\ntab 键控制次序\n\n### lang\n\n语言代码（利于语义化机器理解）（语言代码参考手册http://www.runoob.com/tags/html-language-codes.html）\n\n### dir\n\n文本方向（rtl ltr auto）\n\n### accesskey\n\n元素的键盘访问快捷键（例值为'h'则不同浏览器不同 OS 有不同的操作方式，例 chrome 是 alt + 'h'）\n\n## （HTML5 全局属性）\n\n### data-\\*属性\n\n属性名不要包含大写字母，在 data- 后必须至少有一个字符。\n该属性可以是任何字符串\n\n```\nel.getAttribute(\"data-xx\")\n```\n\n### hidden\n\n不需要属性值，隐藏元素，原理是 display:none\n\n### contenteditable\n\n元素是否可编辑\n\n### contextmenu\n\n（说是目前只有 firefox 支持，亲测没效果\n\n```\n<p contextmenu=\"mymenu\"></p>\n<menu id=\"mymenu\">\n    <command label=\"xxx\" onclick=\"fn()\"/>\n    <command label=\"xxx\" onclick=\"fn()\"/>\n</menu>\n```\n\n### draggable：(与 HTML5drag 结合用)\n\n```javascript\n\n<div id=\"div1\" ondrop=\"drop(event)\" ondragover=\"allowDrop(event)\"></div>\n<p id=\"drag1\" draggable=\"true\" ondragstart=\"drag(event)\">这是一段可移动的段落。可把该段落拖入上下的矩形。</p>\n<div id=\"div2\" ondrop=\"drop(event)\" ondragover=\"allowDrop(event)\"></div>\n\nfunction allowDrop(ev){\n\tev.preventDefault();\n}\nfunction drag(ev){\n\tev.dataTransfer.setData(\"Text\",ev.target.id);\n}\nfunction drop(ev){\n\tvar data=ev.dataTransfer.getData(\"Text\");\n\tev.target.appendChild(document.getElementById(data));\n\tev.preventDefault();\n}\n\n```\n\n### dropzone 属性:\n\n规定当被拖动的数据在拖放到元素上时，是否被复制### 动或链接,无浏览器支持\n\n### sppelcheck：\n\n对元素的文本进行拼写检查\n\n### translate 属性：\n\n规定元素内容是否要翻译，=yes|no\n\n# 遗留\n\n表单元素 属性 datalist select 下拉多选 input 的 multiple 属性 button 的 type 属性默认值\nvideo 不能嵌套 img\np 不能嵌套 div\nfigure dfn cite 标签\n\n---\n\n    “因为你永远不知道你不知道的有多少”\n","slug":"360fe_01_html","published":1,"updated":"2019-07-05T05:00:34.000Z","_id":"cjxtyumq70006hbgh6ol2bpg6","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"1-前端做什么\"><a href=\"#1-前端做什么\" class=\"headerlink\" title=\"1. 前端做什么\"></a>1. 前端做什么</h1><p>用 web 标准技术 html css js svg http 等</p>\n<p>做界面与交互</p>\n<p>功能+美观+无障碍+安全+兼容+性能+体验</p>\n<h1 id=\"2-知识图谱-技术栈\"><a href=\"#2-知识图谱-技术栈\" class=\"headerlink\" title=\"2. 知识图谱/技术栈\"></a>2. 知识图谱/技术栈</h1><h2 id=\"2-1-语言\"><a href=\"#2-1-语言\" class=\"headerlink\" title=\"2.1. 语言\"></a>2.1. 语言</h2><ul>\n<li>js</li>\n<li>html</li>\n<li>css</li>\n<li>php</li>\n</ul>\n<h2 id=\"2-2-行业标准\"><a href=\"#2-2-行业标准\" class=\"headerlink\" title=\"2.2. 行业标准\"></a>2.2. 行业标准</h2><ul>\n<li>DOM</li>\n<li>ES2018</li>\n<li>HTTP</li>\n<li>JSON</li>\n<li>XML</li>\n</ul>\n<h2 id=\"2-3-框架\"><a href=\"#2-3-框架\" class=\"headerlink\" title=\"2.3. 框架\"></a>2.3. 框架</h2><ul>\n<li>React.js</li>\n<li>Angular.js</li>\n<li>jQuery</li>\n<li>Vue.js</li>\n<li>lodash</li>\n</ul>\n<h2 id=\"2-4-兼容性\"><a href=\"#2-4-兼容性\" class=\"headerlink\" title=\"2.4. 兼容性\"></a>2.4. 兼容性</h2><ul>\n<li>IE 等浏览器</li>\n<li>CSS3 新特性</li>\n<li>HTML5 新特性</li>\n<li>ES2018</li>\n<li>移动端</li>\n</ul>\n<h2 id=\"2-5-编程思想\"><a href=\"#2-5-编程思想\" class=\"headerlink\" title=\"2.5. 编程思想\"></a>2.5. 编程思想</h2><ul>\n<li>函数式编程</li>\n<li>面向对象</li>\n<li>设计模式</li>\n</ul>\n<h2 id=\"2-6-调试\"><a href=\"#2-6-调试\" class=\"headerlink\" title=\"2.6. 调试\"></a>2.6. 调试</h2><ul>\n<li>浏览器</li>\n<li>Fiddler http</li>\n</ul>\n<h2 id=\"2-7-工程化\"><a href=\"#2-7-工程化\" class=\"headerlink\" title=\"2.7. 工程化\"></a>2.7. 工程化</h2><ul>\n<li>npm</li>\n<li>webpack</li>\n<li>postcss</li>\n</ul>\n<h2 id=\"2-8-安全性\"><a href=\"#2-8-安全性\" class=\"headerlink\" title=\"2.8. 安全性\"></a>2.8. 安全性</h2><ul>\n<li>XSS</li>\n<li>CSRF</li>\n<li>加密解密</li>\n<li>编解码</li>\n</ul>\n<h2 id=\"2-9-性能\"><a href=\"#2-9-性能\" class=\"headerlink\" title=\"2.9. 性能\"></a>2.9. 性能</h2><ul>\n<li>优化规则</li>\n<li>开发者工具</li>\n<li>浏览器原理</li>\n</ul>\n<h2 id=\"2-10-团队协作\"><a href=\"#2-10-团队协作\" class=\"headerlink\" title=\"2.10. 团队协作\"></a>2.10. 团队协作</h2><ul>\n<li>git/svn</li>\n<li>编码规范/eslint</li>\n<li>文档管理</li>\n</ul>\n<h2 id=\"2-11-交互设计\"><a href=\"#2-11-交互设计\" class=\"headerlink\" title=\"2.11. 交互设计\"></a>2.11. 交互设计</h2><h1 id=\"3-前端边界\"><a href=\"#3-前端边界\" class=\"headerlink\" title=\"3. 前端边界\"></a>3. 前端边界</h1><p>node、electron、react native、webRTC、WebGL、WEBAssembly</p>\n<h1 id=\"4-HTML\"><a href=\"#4-HTML\" class=\"headerlink\" title=\"4. HTML\"></a>4. HTML</h1><h2 id=\"4-1-doctype\"><a href=\"#4-1-doctype\" class=\"headerlink\" title=\"4.1. doctype\"></a>4.1. doctype</h2><ul>\n<li>指定文档使用的标准和版本；</li>\n<li>浏览器根据 doctype 决定使用哪种渲染模式；</li>\n<li>没写会以怪异模式渲染（盒模型不同等待）</li>\n<li>渲染模式</li>\n</ul>\n<h2 id=\"4-2-语义化\"><a href=\"#4-2-语义化\" class=\"headerlink\" title=\"4.2. 语义化\"></a>4.2. 语义化</h2><ul>\n<li>元素、属性、属性值都有特定含义，应该遵循语义来写 HTML</li>\n<li>可读性、可维护性、搜索引擎优化、无障碍性</li>\n</ul>\n<h2 id=\"4-3-标签\"><a href=\"#4-3-标签\" class=\"headerlink\" title=\"4.3. 标签\"></a>4.3. 标签</h2><h3 id=\"4-3-1-flow-流式元素：\"><a href=\"#4-3-1-flow-流式元素：\" class=\"headerlink\" title=\"4.3.1. flow 流式元素：\"></a>4.3.1. flow 流式元素：</h3><ul>\n<li>heading 标题</li>\n<li>sectioning 章节</li>\n<li>phrasing 段落内容 p h</li>\n<li>Embedded 嵌入式内容 audio canvas</li>\n<li>interactive 可交互性内容 button a</li>\n<li>metadata 元数据元素 base link meta noscript script style title</li>\n</ul>\n<h3 id=\"4-3-2-看规范\"><a href=\"#4-3-2-看规范\" class=\"headerlink\" title=\"4.3.2. 看规范\"></a>4.3.2. 看规范</h3><h2 id=\"4-4-HTML-扩展\"><a href=\"#4-4-HTML-扩展\" class=\"headerlink\" title=\"4.4. HTML 扩展\"></a>4.4. HTML 扩展</h2><h3 id=\"4-4-1-meta-标签（增加元数据\"><a href=\"#4-4-1-meta-标签（增加元数据\" class=\"headerlink\" title=\"4.4.1. meta 标签（增加元数据\"></a>4.4.1. meta 标签（增加元数据</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 编码 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 指定http header --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Content-Security-Policy\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"script-src 'self'\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- seo优化 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"keywords\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"关键词\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"description\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"页面介绍\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 移动设备的viewport 初始缩放比例，视口宽度 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"initial-scale=1\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 关闭IOS电话号码识别 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"format-detection\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"telphone=no\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 360等双核浏览器 指定渲染内核 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"renderer\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"webkit\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 指定IE渲染模式 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"X-UA-Compatibla\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"IE=Edge\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"4-4-2-data-属性（规范内-自定义的属性）\"><a href=\"#4-4-2-data-属性（规范内-自定义的属性）\" class=\"headerlink\" title=\"4.4.2. data-*属性（规范内-自定义的属性）\"></a>4.4.2. data-*属性（规范内-自定义的属性）</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">datasetAPI</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el</span> <span class=\"attr\">data-id</span>=<span class=\"string\">\"\"</span>/&gt;</span></span><br><span class=\"line\">  el.dataset.id</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-4-3-link\"><a href=\"#4-4-3-link\" class=\"headerlink\" title=\"4.4.3. link\"></a>4.4.3. link</h3><ul>\n<li>rel 属性（relation 关系，外部资源与当前页面的关系）</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 引入css --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">    浏览器性能优化：dns预解析rel=dns-prefetch、资源预加载rel=prefetch、预渲染 rel=prerender</span></span><br><span class=\"line\"><span class=\"comment\">--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"dns-prefetch\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span> /&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"prefetch\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"prerender\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- favicon：rel=icon --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"icon\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"image/png\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- RSS：rel=alternate --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"alternate\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"application/rss+xml\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"4-4-4-JSON-LD\"><a href=\"#4-4-4-JSON-LD\" class=\"headerlink\" title=\"4.4.4. JSON-LD\"></a>4.4.4. JSON-LD</h3><p>LD：linkdata 链接的数据 (直接在页面嵌 json 数据)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"application/ld+json\"</span>&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"@context\"</span>: <span class=\"string\">\"http://schema.org\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"@type\"</span>: <span class=\"string\">\"Person\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"name\"</span>: <span class=\"string\">\"John Doe\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"jobTitle\"</span>: <span class=\"string\">\"Graduate research assistant\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"affiliation\"</span>: <span class=\"string\">\"University of Dreams\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"additionalName\"</span>: <span class=\"string\">\"Johnny\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"url\"</span>: <span class=\"string\">\"http://www.example.com\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"address\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"@type\"</span>: <span class=\"string\">\"PostalAddress\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"streetAddress\"</span>: <span class=\"string\">\"1234 Peach Drive\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"addressLocality\"</span>: <span class=\"string\">\"Wonderland\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"addressRegion\"</span>: <span class=\"string\">\"Georgia\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//  应用例如分享页面时的数据</span></span><br><span class=\"line\"><span class=\"comment\">//  搜索引擎能识别等等</span></span><br><span class=\"line\"><span class=\"comment\">//  分享链接带有一些标题图片等信息</span></span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"4-5-Web-无障碍-Accessibility\"><a href=\"#4-5-Web-无障碍-Accessibility\" class=\"headerlink\" title=\"4.5. Web 无障碍/Accessibility\"></a>4.5. Web 无障碍/Accessibility</h2><ul>\n<li>一些 Web 开发者规范：<ul>\n<li>WCAG2.0</li>\n<li>ARIA</li>\n</ul>\n</li>\n<li>提升无障碍性<ul>\n<li>img alt</li>\n<li>noscript</li>\n<li>input 和 label 对应</li>\n<li>图片验证码与语音验证码</li>\n<li>文字背景对比度</li>\n<li>键盘可操作（tab modal focus）</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"4-6-工具\"><a href=\"#4-6-工具\" class=\"headerlink\" title=\"4.6. 工具\"></a>4.6. 工具</h2><ul>\n<li><a href=\"http://validator.w3.org/\" target=\"_blank\" rel=\"noopener\">W3C Validator（检查 html 合法性）</a></li>\n<li>emmet（插件）</li>\n<li>markdown（适合写文档）</li>\n</ul>\n<h2 id=\"4-7-参考链接\"><a href=\"#4-7-参考链接\" class=\"headerlink\" title=\"4.7. 参考链接\"></a>4.7. 参考链接</h2><ul>\n<li><a href=\"https://html.spec.whatwg.org/dev/\" target=\"_blank\" rel=\"noopener\">HTML: The Living Standard</a></li>\n<li><a href=\"https://hsivonen.fi/doctype/\" target=\"_blank\" rel=\"noopener\">Activating Browser Modes with Doctype</a></li>\n<li><a href=\"https://www.w3.org/standards/webdesign/accessibility\" target=\"_blank\" rel=\"noopener\">Accessibility</a></li>\n<li>Web Content Accessibility Guidelines 2.0</li>\n<li><a href=\"http://html5doctor.com/element-index/\" target=\"_blank\" rel=\"noopener\">HTML5 Doctor: Semantics</a></li>\n</ul>\n<h2 id=\"全局属性\"><a href=\"#全局属性\" class=\"headerlink\" title=\"全局属性\"></a>全局属性</h2><h3 id=\"class-id-style\"><a href=\"#class-id-style\" class=\"headerlink\" title=\"class id style\"></a>class id style</h3><h3 id=\"title\"><a href=\"#title\" class=\"headerlink\" title=\"title\"></a>title</h3><p>（兼容性最好的 tooltip😂）</p>\n<h3 id=\"tabindex\"><a href=\"#tabindex\" class=\"headerlink\" title=\"tabindex\"></a>tabindex</h3><p>tab 键控制次序</p>\n<h3 id=\"lang\"><a href=\"#lang\" class=\"headerlink\" title=\"lang\"></a>lang</h3><p>语言代码（利于语义化机器理解）（语言代码参考手册<a href=\"http://www.runoob.com/tags/html-language-codes.html）\" target=\"_blank\" rel=\"noopener\">http://www.runoob.com/tags/html-language-codes.html）</a></p>\n<h3 id=\"dir\"><a href=\"#dir\" class=\"headerlink\" title=\"dir\"></a>dir</h3><p>文本方向（rtl ltr auto）</p>\n<h3 id=\"accesskey\"><a href=\"#accesskey\" class=\"headerlink\" title=\"accesskey\"></a>accesskey</h3><p>元素的键盘访问快捷键（例值为’h’则不同浏览器不同 OS 有不同的操作方式，例 chrome 是 alt + ‘h’）</p>\n<h2 id=\"（HTML5-全局属性）\"><a href=\"#（HTML5-全局属性）\" class=\"headerlink\" title=\"（HTML5 全局属性）\"></a>（HTML5 全局属性）</h2><h3 id=\"data-属性\"><a href=\"#data-属性\" class=\"headerlink\" title=\"data-*属性\"></a>data-*属性</h3><p>属性名不要包含大写字母，在 data- 后必须至少有一个字符。<br>该属性可以是任何字符串</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">el.getAttribute(&quot;data-xx&quot;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"hidden\"><a href=\"#hidden\" class=\"headerlink\" title=\"hidden\"></a>hidden</h3><p>不需要属性值，隐藏元素，原理是 display:none</p>\n<h3 id=\"contenteditable\"><a href=\"#contenteditable\" class=\"headerlink\" title=\"contenteditable\"></a>contenteditable</h3><p>元素是否可编辑</p>\n<h3 id=\"contextmenu\"><a href=\"#contextmenu\" class=\"headerlink\" title=\"contextmenu\"></a>contextmenu</h3><p>（说是目前只有 firefox 支持，亲测没效果</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p contextmenu=&quot;mymenu&quot;&gt;&lt;/p&gt;</span><br><span class=\"line\">&lt;menu id=&quot;mymenu&quot;&gt;</span><br><span class=\"line\">    &lt;command label=&quot;xxx&quot; onclick=&quot;fn()&quot;/&gt;</span><br><span class=\"line\">    &lt;command label=&quot;xxx&quot; onclick=&quot;fn()&quot;/&gt;</span><br><span class=\"line\">&lt;/menu&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"draggable：-与-HTML5drag-结合用\"><a href=\"#draggable：-与-HTML5drag-结合用\" class=\"headerlink\" title=\"draggable：(与 HTML5drag 结合用)\"></a>draggable：(与 HTML5drag 结合用)</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&lt;div id=<span class=\"string\">\"div1\"</span> ondrop=<span class=\"string\">\"drop(event)\"</span> ondragover=<span class=\"string\">\"allowDrop(event)\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;p id=<span class=\"string\">\"drag1\"</span> draggable=<span class=\"string\">\"true\"</span> ondragstart=<span class=\"string\">\"drag(event)\"</span>&gt;这是一段可移动的段落。可把该段落拖入上下的矩形。&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;div id=\"div2\" ondrop=\"drop(event)\" ondragover=\"allowDrop(event)\"&gt;&lt;/</span>div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">allowDrop</span>(<span class=\"params\">ev</span>)</span>&#123;</span><br><span class=\"line\">\tev.preventDefault();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drag</span>(<span class=\"params\">ev</span>)</span>&#123;</span><br><span class=\"line\">\tev.dataTransfer.setData(<span class=\"string\">\"Text\"</span>,ev.target.id);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drop</span>(<span class=\"params\">ev</span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> data=ev.dataTransfer.getData(<span class=\"string\">\"Text\"</span>);</span><br><span class=\"line\">\tev.target.appendChild(<span class=\"built_in\">document</span>.getElementById(data));</span><br><span class=\"line\">\tev.preventDefault();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"dropzone-属性\"><a href=\"#dropzone-属性\" class=\"headerlink\" title=\"dropzone 属性:\"></a>dropzone 属性:</h3><p>规定当被拖动的数据在拖放到元素上时，是否被复制### 动或链接,无浏览器支持</p>\n<h3 id=\"sppelcheck：\"><a href=\"#sppelcheck：\" class=\"headerlink\" title=\"sppelcheck：\"></a>sppelcheck：</h3><p>对元素的文本进行拼写检查</p>\n<h3 id=\"translate-属性：\"><a href=\"#translate-属性：\" class=\"headerlink\" title=\"translate 属性：\"></a>translate 属性：</h3><p>规定元素内容是否要翻译，=yes|no</p>\n<h1 id=\"遗留\"><a href=\"#遗留\" class=\"headerlink\" title=\"遗留\"></a>遗留</h1><p>表单元素 属性 datalist select 下拉多选 input 的 multiple 属性 button 的 type 属性默认值<br>video 不能嵌套 img<br>p 不能嵌套 div<br>figure dfn cite 标签</p>\n<hr>\n<pre><code>“因为你永远不知道你不知道的有多少”\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"1-前端做什么\"><a href=\"#1-前端做什么\" class=\"headerlink\" title=\"1. 前端做什么\"></a>1. 前端做什么</h1><p>用 web 标准技术 html css js svg http 等</p>\n<p>做界面与交互</p>\n<p>功能+美观+无障碍+安全+兼容+性能+体验</p>\n<h1 id=\"2-知识图谱-技术栈\"><a href=\"#2-知识图谱-技术栈\" class=\"headerlink\" title=\"2. 知识图谱/技术栈\"></a>2. 知识图谱/技术栈</h1><h2 id=\"2-1-语言\"><a href=\"#2-1-语言\" class=\"headerlink\" title=\"2.1. 语言\"></a>2.1. 语言</h2><ul>\n<li>js</li>\n<li>html</li>\n<li>css</li>\n<li>php</li>\n</ul>\n<h2 id=\"2-2-行业标准\"><a href=\"#2-2-行业标准\" class=\"headerlink\" title=\"2.2. 行业标准\"></a>2.2. 行业标准</h2><ul>\n<li>DOM</li>\n<li>ES2018</li>\n<li>HTTP</li>\n<li>JSON</li>\n<li>XML</li>\n</ul>\n<h2 id=\"2-3-框架\"><a href=\"#2-3-框架\" class=\"headerlink\" title=\"2.3. 框架\"></a>2.3. 框架</h2><ul>\n<li>React.js</li>\n<li>Angular.js</li>\n<li>jQuery</li>\n<li>Vue.js</li>\n<li>lodash</li>\n</ul>\n<h2 id=\"2-4-兼容性\"><a href=\"#2-4-兼容性\" class=\"headerlink\" title=\"2.4. 兼容性\"></a>2.4. 兼容性</h2><ul>\n<li>IE 等浏览器</li>\n<li>CSS3 新特性</li>\n<li>HTML5 新特性</li>\n<li>ES2018</li>\n<li>移动端</li>\n</ul>\n<h2 id=\"2-5-编程思想\"><a href=\"#2-5-编程思想\" class=\"headerlink\" title=\"2.5. 编程思想\"></a>2.5. 编程思想</h2><ul>\n<li>函数式编程</li>\n<li>面向对象</li>\n<li>设计模式</li>\n</ul>\n<h2 id=\"2-6-调试\"><a href=\"#2-6-调试\" class=\"headerlink\" title=\"2.6. 调试\"></a>2.6. 调试</h2><ul>\n<li>浏览器</li>\n<li>Fiddler http</li>\n</ul>\n<h2 id=\"2-7-工程化\"><a href=\"#2-7-工程化\" class=\"headerlink\" title=\"2.7. 工程化\"></a>2.7. 工程化</h2><ul>\n<li>npm</li>\n<li>webpack</li>\n<li>postcss</li>\n</ul>\n<h2 id=\"2-8-安全性\"><a href=\"#2-8-安全性\" class=\"headerlink\" title=\"2.8. 安全性\"></a>2.8. 安全性</h2><ul>\n<li>XSS</li>\n<li>CSRF</li>\n<li>加密解密</li>\n<li>编解码</li>\n</ul>\n<h2 id=\"2-9-性能\"><a href=\"#2-9-性能\" class=\"headerlink\" title=\"2.9. 性能\"></a>2.9. 性能</h2><ul>\n<li>优化规则</li>\n<li>开发者工具</li>\n<li>浏览器原理</li>\n</ul>\n<h2 id=\"2-10-团队协作\"><a href=\"#2-10-团队协作\" class=\"headerlink\" title=\"2.10. 团队协作\"></a>2.10. 团队协作</h2><ul>\n<li>git/svn</li>\n<li>编码规范/eslint</li>\n<li>文档管理</li>\n</ul>\n<h2 id=\"2-11-交互设计\"><a href=\"#2-11-交互设计\" class=\"headerlink\" title=\"2.11. 交互设计\"></a>2.11. 交互设计</h2><h1 id=\"3-前端边界\"><a href=\"#3-前端边界\" class=\"headerlink\" title=\"3. 前端边界\"></a>3. 前端边界</h1><p>node、electron、react native、webRTC、WebGL、WEBAssembly</p>\n<h1 id=\"4-HTML\"><a href=\"#4-HTML\" class=\"headerlink\" title=\"4. HTML\"></a>4. HTML</h1><h2 id=\"4-1-doctype\"><a href=\"#4-1-doctype\" class=\"headerlink\" title=\"4.1. doctype\"></a>4.1. doctype</h2><ul>\n<li>指定文档使用的标准和版本；</li>\n<li>浏览器根据 doctype 决定使用哪种渲染模式；</li>\n<li>没写会以怪异模式渲染（盒模型不同等待）</li>\n<li>渲染模式</li>\n</ul>\n<h2 id=\"4-2-语义化\"><a href=\"#4-2-语义化\" class=\"headerlink\" title=\"4.2. 语义化\"></a>4.2. 语义化</h2><ul>\n<li>元素、属性、属性值都有特定含义，应该遵循语义来写 HTML</li>\n<li>可读性、可维护性、搜索引擎优化、无障碍性</li>\n</ul>\n<h2 id=\"4-3-标签\"><a href=\"#4-3-标签\" class=\"headerlink\" title=\"4.3. 标签\"></a>4.3. 标签</h2><h3 id=\"4-3-1-flow-流式元素：\"><a href=\"#4-3-1-flow-流式元素：\" class=\"headerlink\" title=\"4.3.1. flow 流式元素：\"></a>4.3.1. flow 流式元素：</h3><ul>\n<li>heading 标题</li>\n<li>sectioning 章节</li>\n<li>phrasing 段落内容 p h</li>\n<li>Embedded 嵌入式内容 audio canvas</li>\n<li>interactive 可交互性内容 button a</li>\n<li>metadata 元数据元素 base link meta noscript script style title</li>\n</ul>\n<h3 id=\"4-3-2-看规范\"><a href=\"#4-3-2-看规范\" class=\"headerlink\" title=\"4.3.2. 看规范\"></a>4.3.2. 看规范</h3><h2 id=\"4-4-HTML-扩展\"><a href=\"#4-4-HTML-扩展\" class=\"headerlink\" title=\"4.4. HTML 扩展\"></a>4.4. HTML 扩展</h2><h3 id=\"4-4-1-meta-标签（增加元数据\"><a href=\"#4-4-1-meta-标签（增加元数据\" class=\"headerlink\" title=\"4.4.1. meta 标签（增加元数据\"></a>4.4.1. meta 标签（增加元数据</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 编码 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"utf-8\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 指定http header --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Content-Security-Policy\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"script-src 'self'\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- seo优化 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"keywords\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"关键词\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"description\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"页面介绍\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 移动设备的viewport 初始缩放比例，视口宽度 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"initial-scale=1\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 关闭IOS电话号码识别 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"format-detection\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"telphone=no\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 360等双核浏览器 指定渲染内核 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"renderer\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"webkit\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 指定IE渲染模式 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"X-UA-Compatibla\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"IE=Edge\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"4-4-2-data-属性（规范内-自定义的属性）\"><a href=\"#4-4-2-data-属性（规范内-自定义的属性）\" class=\"headerlink\" title=\"4.4.2. data-*属性（规范内-自定义的属性）\"></a>4.4.2. data-*属性（规范内-自定义的属性）</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">datasetAPI</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el</span> <span class=\"attr\">data-id</span>=<span class=\"string\">\"\"</span>/&gt;</span></span><br><span class=\"line\">  el.dataset.id</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-4-3-link\"><a href=\"#4-4-3-link\" class=\"headerlink\" title=\"4.4.3. link\"></a>4.4.3. link</h3><ul>\n<li>rel 属性（relation 关系，外部资源与当前页面的关系）</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 引入css --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">    浏览器性能优化：dns预解析rel=dns-prefetch、资源预加载rel=prefetch、预渲染 rel=prerender</span></span><br><span class=\"line\"><span class=\"comment\">--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"dns-prefetch\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span> /&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"prefetch\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"prerender\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- favicon：rel=icon --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"icon\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"image/png\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- RSS：rel=alternate --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"alternate\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"application/rss+xml\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"4-4-4-JSON-LD\"><a href=\"#4-4-4-JSON-LD\" class=\"headerlink\" title=\"4.4.4. JSON-LD\"></a>4.4.4. JSON-LD</h3><p>LD：linkdata 链接的数据 (直接在页面嵌 json 数据)</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">\"application/ld+json\"</span>&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"@context\"</span>: <span class=\"string\">\"http://schema.org\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"@type\"</span>: <span class=\"string\">\"Person\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"name\"</span>: <span class=\"string\">\"John Doe\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"jobTitle\"</span>: <span class=\"string\">\"Graduate research assistant\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"affiliation\"</span>: <span class=\"string\">\"University of Dreams\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"additionalName\"</span>: <span class=\"string\">\"Johnny\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"url\"</span>: <span class=\"string\">\"http://www.example.com\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"address\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"@type\"</span>: <span class=\"string\">\"PostalAddress\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"streetAddress\"</span>: <span class=\"string\">\"1234 Peach Drive\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"addressLocality\"</span>: <span class=\"string\">\"Wonderland\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"addressRegion\"</span>: <span class=\"string\">\"Georgia\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//  应用例如分享页面时的数据</span></span><br><span class=\"line\"><span class=\"comment\">//  搜索引擎能识别等等</span></span><br><span class=\"line\"><span class=\"comment\">//  分享链接带有一些标题图片等信息</span></span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"4-5-Web-无障碍-Accessibility\"><a href=\"#4-5-Web-无障碍-Accessibility\" class=\"headerlink\" title=\"4.5. Web 无障碍/Accessibility\"></a>4.5. Web 无障碍/Accessibility</h2><ul>\n<li>一些 Web 开发者规范：<ul>\n<li>WCAG2.0</li>\n<li>ARIA</li>\n</ul>\n</li>\n<li>提升无障碍性<ul>\n<li>img alt</li>\n<li>noscript</li>\n<li>input 和 label 对应</li>\n<li>图片验证码与语音验证码</li>\n<li>文字背景对比度</li>\n<li>键盘可操作（tab modal focus）</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"4-6-工具\"><a href=\"#4-6-工具\" class=\"headerlink\" title=\"4.6. 工具\"></a>4.6. 工具</h2><ul>\n<li><a href=\"http://validator.w3.org/\" target=\"_blank\" rel=\"noopener\">W3C Validator（检查 html 合法性）</a></li>\n<li>emmet（插件）</li>\n<li>markdown（适合写文档）</li>\n</ul>\n<h2 id=\"4-7-参考链接\"><a href=\"#4-7-参考链接\" class=\"headerlink\" title=\"4.7. 参考链接\"></a>4.7. 参考链接</h2><ul>\n<li><a href=\"https://html.spec.whatwg.org/dev/\" target=\"_blank\" rel=\"noopener\">HTML: The Living Standard</a></li>\n<li><a href=\"https://hsivonen.fi/doctype/\" target=\"_blank\" rel=\"noopener\">Activating Browser Modes with Doctype</a></li>\n<li><a href=\"https://www.w3.org/standards/webdesign/accessibility\" target=\"_blank\" rel=\"noopener\">Accessibility</a></li>\n<li>Web Content Accessibility Guidelines 2.0</li>\n<li><a href=\"http://html5doctor.com/element-index/\" target=\"_blank\" rel=\"noopener\">HTML5 Doctor: Semantics</a></li>\n</ul>\n<h2 id=\"全局属性\"><a href=\"#全局属性\" class=\"headerlink\" title=\"全局属性\"></a>全局属性</h2><h3 id=\"class-id-style\"><a href=\"#class-id-style\" class=\"headerlink\" title=\"class id style\"></a>class id style</h3><h3 id=\"title\"><a href=\"#title\" class=\"headerlink\" title=\"title\"></a>title</h3><p>（兼容性最好的 tooltip😂）</p>\n<h3 id=\"tabindex\"><a href=\"#tabindex\" class=\"headerlink\" title=\"tabindex\"></a>tabindex</h3><p>tab 键控制次序</p>\n<h3 id=\"lang\"><a href=\"#lang\" class=\"headerlink\" title=\"lang\"></a>lang</h3><p>语言代码（利于语义化机器理解）（语言代码参考手册<a href=\"http://www.runoob.com/tags/html-language-codes.html）\" target=\"_blank\" rel=\"noopener\">http://www.runoob.com/tags/html-language-codes.html）</a></p>\n<h3 id=\"dir\"><a href=\"#dir\" class=\"headerlink\" title=\"dir\"></a>dir</h3><p>文本方向（rtl ltr auto）</p>\n<h3 id=\"accesskey\"><a href=\"#accesskey\" class=\"headerlink\" title=\"accesskey\"></a>accesskey</h3><p>元素的键盘访问快捷键（例值为’h’则不同浏览器不同 OS 有不同的操作方式，例 chrome 是 alt + ‘h’）</p>\n<h2 id=\"（HTML5-全局属性）\"><a href=\"#（HTML5-全局属性）\" class=\"headerlink\" title=\"（HTML5 全局属性）\"></a>（HTML5 全局属性）</h2><h3 id=\"data-属性\"><a href=\"#data-属性\" class=\"headerlink\" title=\"data-*属性\"></a>data-*属性</h3><p>属性名不要包含大写字母，在 data- 后必须至少有一个字符。<br>该属性可以是任何字符串</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">el.getAttribute(&quot;data-xx&quot;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"hidden\"><a href=\"#hidden\" class=\"headerlink\" title=\"hidden\"></a>hidden</h3><p>不需要属性值，隐藏元素，原理是 display:none</p>\n<h3 id=\"contenteditable\"><a href=\"#contenteditable\" class=\"headerlink\" title=\"contenteditable\"></a>contenteditable</h3><p>元素是否可编辑</p>\n<h3 id=\"contextmenu\"><a href=\"#contextmenu\" class=\"headerlink\" title=\"contextmenu\"></a>contextmenu</h3><p>（说是目前只有 firefox 支持，亲测没效果</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p contextmenu=&quot;mymenu&quot;&gt;&lt;/p&gt;</span><br><span class=\"line\">&lt;menu id=&quot;mymenu&quot;&gt;</span><br><span class=\"line\">    &lt;command label=&quot;xxx&quot; onclick=&quot;fn()&quot;/&gt;</span><br><span class=\"line\">    &lt;command label=&quot;xxx&quot; onclick=&quot;fn()&quot;/&gt;</span><br><span class=\"line\">&lt;/menu&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"draggable：-与-HTML5drag-结合用\"><a href=\"#draggable：-与-HTML5drag-结合用\" class=\"headerlink\" title=\"draggable：(与 HTML5drag 结合用)\"></a>draggable：(与 HTML5drag 结合用)</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&lt;div id=<span class=\"string\">\"div1\"</span> ondrop=<span class=\"string\">\"drop(event)\"</span> ondragover=<span class=\"string\">\"allowDrop(event)\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">&lt;p id=<span class=\"string\">\"drag1\"</span> draggable=<span class=\"string\">\"true\"</span> ondragstart=<span class=\"string\">\"drag(event)\"</span>&gt;这是一段可移动的段落。可把该段落拖入上下的矩形。&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;div id=\"div2\" ondrop=\"drop(event)\" ondragover=\"allowDrop(event)\"&gt;&lt;/</span>div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">allowDrop</span>(<span class=\"params\">ev</span>)</span>&#123;</span><br><span class=\"line\">\tev.preventDefault();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drag</span>(<span class=\"params\">ev</span>)</span>&#123;</span><br><span class=\"line\">\tev.dataTransfer.setData(<span class=\"string\">\"Text\"</span>,ev.target.id);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drop</span>(<span class=\"params\">ev</span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> data=ev.dataTransfer.getData(<span class=\"string\">\"Text\"</span>);</span><br><span class=\"line\">\tev.target.appendChild(<span class=\"built_in\">document</span>.getElementById(data));</span><br><span class=\"line\">\tev.preventDefault();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"dropzone-属性\"><a href=\"#dropzone-属性\" class=\"headerlink\" title=\"dropzone 属性:\"></a>dropzone 属性:</h3><p>规定当被拖动的数据在拖放到元素上时，是否被复制### 动或链接,无浏览器支持</p>\n<h3 id=\"sppelcheck：\"><a href=\"#sppelcheck：\" class=\"headerlink\" title=\"sppelcheck：\"></a>sppelcheck：</h3><p>对元素的文本进行拼写检查</p>\n<h3 id=\"translate-属性：\"><a href=\"#translate-属性：\" class=\"headerlink\" title=\"translate 属性：\"></a>translate 属性：</h3><p>规定元素内容是否要翻译，=yes|no</p>\n<h1 id=\"遗留\"><a href=\"#遗留\" class=\"headerlink\" title=\"遗留\"></a>遗留</h1><p>表单元素 属性 datalist select 下拉多选 input 的 multiple 属性 button 的 type 属性默认值<br>video 不能嵌套 img<br>p 不能嵌套 div<br>figure dfn cite 标签</p>\n<hr>\n<pre><code>“因为你永远不知道你不知道的有多少”\n</code></pre>"},{"title":"360FED课程——CSS","date":"2018-09-06T16:00:00.000Z","description":"大佬为什么是大佬？","toc":1,"top":0,"_content":"\n# css\n\ncascading stylesheet\n级联样式表\n\n# Level 版本\n\n-   CSS Level 1（废弃\n-   CSS Level 2 (CSS 2.2 完整规范)\n-   CSS Level 3（在 2.2 的基础上增加新模块特性\n    -   Color Module Level 3\n    -   Selectors Level 3\n    -   Media Queries\n    -   Fonts Level 3\n\n# 选择器\n\n## 简单\n\n-   通配 \\*\n-   标签 E\n-   类 .class\n-   id #id\n\n## 属性选择器 [ ]\n\n```css\n/* 具有某个属性 */\n[disabled]\n\n/* 属性为指定的值 */\n[type=\"checkbox\"]\n\n/* 属性值包含某个字符串 */\n[href*=\"example\"]\n\n/* 属性值以某个字符串开头 */\n[href^=\"http:\"]\n\n/* 属性值以某个字符串结束 */\n[href$=\"jpg\"]\n\n/* 属性值以空格分割后包含某个字符串 */\n[lang~＝\"zh-cn\"]/* class选择器的实现机制 */\n```\n\n## 伪类\n\n```css\n/* 动态性伪类，根据状态选择 */\na:link    { ... }       /* 未访问过的链接 */\na:visited { ... }       /* 已访问过的链接 */\n\na:hover   { ... }       /* 鼠标移到链接上的样式 */\na:active  { ... }       /* 鼠标在连接上按下时的样式 */\na:focus   { ... }       /* 获得焦点时的样式 */\n\ninput:disabled { ... }  /* 禁用时的样式 */\ninput:checked { ... }   /* 选中时的样式 */\n                        /*利用:checked来做某些toggle组件状态转换*/\n\n/* 结构性伪类 */\n:first-child\n:last-child\n:nth-child(2n+1)\n\n:first-of-type\n:last-of-type\ndiv:nth-of-type(2n+1)   /*对nth-child()增加类型限制*/\n\n:empty\n```\n\n## 组合性选择器\n\n-   后代 E F\n-   父子 E>F\n-   兄弟 E~F\n-   相邻兄弟 E+F\n\n# 伪元素\n\n-   ::before\n-   ::after\n-   ::first-letter\n-   ::first-line\n\n# 优先级/特异度 Specificity\n\n-   !important > 内联 > id > （伪）类 > （伪）元素\n-   覆盖：同样优先级：后面写的覆盖前面写的\n-   复合选择器：从优先级高的选择器 的 数量 开始比较\n\n# 样式来源\n\n-   页面开发者\n-   用户设置（浏览器可以指定一个本地 CSS 文件，打开所有页面时自动加载\n-   浏览器预设\n    -   [Mozilla Firefox 预设样式](https://dxr.mozilla.org/mozilla-central/source/layout/style/res/html.css)\n    -   [Google Chrome 预设样式](https://chromium.googlesource.com/chromium/blink/+/master/Source/core/css/html.css)\n-   优先级： 开发者 > 用户设置 > 浏览器预设\n-   加了!important 的优先级：用户 important > 开发者 important > 开发者 > 用户设置 > 浏览器预设\n\n# 默认值策略 Defaulting\n\n## 继承\n\n某些属性若不指定值，会自动继承父元素的 ！！！【计算值】\n\n## 显示继承\n\n```css\nhtml {\n    box-sizing: border-box;\n}\n* {\n    box-sizing: inherit;\n    /* 优点是有某一块都要设置为content-box时，只需要设置其最外层元素，不需要全设置 */\n}\n#xxx {\n    box-sizing: content-box;\n}\n```\n\n## 初始值 initial\n\n-   CSS 中，每个属性都有一个初始值\n-   background-color 的初始值为 transparent\n-   margin-left 的初始值为 0，font-size 是 16px，line-height 是 1.2，但根据 font-family 而不同\n-   可以显式重置为初始值，比如 background-color: initial\n-   可以上 mdn 查初始值\n\n# CSS 求值过程\n\n## 一个令人疑惑的很皮的 CSS 求值例子\n\n```html\n<article>\n    <h1>卡尔斯巴德洞窟</h1>\n    <p>\n        卡尔斯巴德洞窟（Carlsbad Caverns）是美国的一座国家公园，\n        位于新墨西哥州东南部。游客可以通过天然入口徒步进入，也可以\n        通过电梯直接到达230米的洞穴深处。\n    </p>\n</article>\n\n<style>\n    body {\n        margin: 0;\n    }\n    article {\n        line-height: 150%;\n    }\n    h1 {\n        font-size: 40px; /*最终实际的line-height值为24px*/\n    }\n    p {\n        font-size: 14px; /*最终实际的line-height值为24px*/\n    }\n</style>\n\n<style>\n    body {\n        margin: 0;\n    }\n    article {\n        line-height: 1.5;\n    }\n    h1 {\n        font-size: 40px; /*最终实际的line-height值为60px*/\n    }\n    p {\n        font-size: 14px; /*最终实际的line-height值为21px*/\n    }\n</style>\n\n<!--\n    原因：\n    设为150%时，子元素继承前，父元素的line-height=150%会先被计算（resolving），得到一个绝对值，被计算为16px(默认的font-size值)*1.5=24px，子元素继承到的值是24px\n\n    设为1.5时，子元素继承前，父元素在执行resolving时，1.5是绝对值，不会被转换，所以子元素继承到值1.5，后面再根据自己的font-size*1.5计算line-height\n\n    总结：子元素继承到的是父元素的 计算值（一个绝对值）\n-->\n```\n\n## CSS 求值详细过程\n\n-   filtering：有效选择器 有效属性值 符合 media ，筛选出所有**声明值 Declared Values**\n-   cascading：选出优先级最高的一条声明，得到**层叠值 Cascaded Value**\n-   defaulting：当层叠值为空时，用 继承 | 初始值，得到**指定值 Specified Value**\n-   resolving：将相对值、关键字转化为绝对值，如 em 转换为 px，%被转换为 px，相对路径转换为绝对路径，得到**计算值 Computed Value**\n-   formatting:将计算值进一步转换，比如百分比、关键字转换为绝对值，得到**使用值 Used Value**\n-   constraining：将小数像素转为整数，得到**实际值**\n\n# CSS 排版原理\n\n## 盒模型\n\n### content-box：\n\n-   margin\n-   border\n-   padding\n-   content（width height）\n\n### border-box\n\n-   margin\n-   border （width = border + padding + content_width）\n-   padding\n-   content\n\n## height 100%（一般不用\n\n-   高度百分数，是相对于父元素的高度\n-   若父元素无高度，则百分比高度不生效\n-   用 vw vh 设置相对于屏幕的百分比高度，100vh 即 100%屏幕高度\n\n## padding 100%\n\n-   padding 百分比值，不论是 padding top、left，都是相对于**父元素宽度**\n-   应用：做固定宽高比的盒子.\n\n## margin 折叠\n\n上下相邻元素的间距会取其 margin 中较大值。\n\n## border：四条边不同颜色\n\n-   实际相邻的 border 交界处，是斜切的。\n-   当元素的 width height 为 0 时，会得到四个三角形\n\n# background: repeating-conic-gradient(black 0 60deg, yellow 0 120deg);\n\n# 视觉格式化模型\n\n## Viewport 视口\n\n浏览器的可视区域，所有元素都在 viewport 内\n\n## 块级元素(Block-level Elements)\n\n-   会被格式化成块状的元素\n-   例如 p、div、section 等\n-   将 display 设置为 block、list-item、table 会使元素变为块级\n\n## 行内元素(Inline-level Elements)\n\n-   不会为其内容生成块级框\n-   让其内容分布在多行中\n-   display 设置为 inline、inline-block、inline-table 会使元素变为行级\n\n---\n\n    “因为大佬比你知道的多”\n","source":"_posts/360fe_02_css.md","raw":"---\ntitle: 360FED课程——CSS\ncategories:\n    - css # 一级分类\ntags:\n    - 360fed\n    - css\ndate: 2018-09-07\ndescription: 大佬为什么是大佬？\ntoc: 1\ntop: 0\n---\n\n# css\n\ncascading stylesheet\n级联样式表\n\n# Level 版本\n\n-   CSS Level 1（废弃\n-   CSS Level 2 (CSS 2.2 完整规范)\n-   CSS Level 3（在 2.2 的基础上增加新模块特性\n    -   Color Module Level 3\n    -   Selectors Level 3\n    -   Media Queries\n    -   Fonts Level 3\n\n# 选择器\n\n## 简单\n\n-   通配 \\*\n-   标签 E\n-   类 .class\n-   id #id\n\n## 属性选择器 [ ]\n\n```css\n/* 具有某个属性 */\n[disabled]\n\n/* 属性为指定的值 */\n[type=\"checkbox\"]\n\n/* 属性值包含某个字符串 */\n[href*=\"example\"]\n\n/* 属性值以某个字符串开头 */\n[href^=\"http:\"]\n\n/* 属性值以某个字符串结束 */\n[href$=\"jpg\"]\n\n/* 属性值以空格分割后包含某个字符串 */\n[lang~＝\"zh-cn\"]/* class选择器的实现机制 */\n```\n\n## 伪类\n\n```css\n/* 动态性伪类，根据状态选择 */\na:link    { ... }       /* 未访问过的链接 */\na:visited { ... }       /* 已访问过的链接 */\n\na:hover   { ... }       /* 鼠标移到链接上的样式 */\na:active  { ... }       /* 鼠标在连接上按下时的样式 */\na:focus   { ... }       /* 获得焦点时的样式 */\n\ninput:disabled { ... }  /* 禁用时的样式 */\ninput:checked { ... }   /* 选中时的样式 */\n                        /*利用:checked来做某些toggle组件状态转换*/\n\n/* 结构性伪类 */\n:first-child\n:last-child\n:nth-child(2n+1)\n\n:first-of-type\n:last-of-type\ndiv:nth-of-type(2n+1)   /*对nth-child()增加类型限制*/\n\n:empty\n```\n\n## 组合性选择器\n\n-   后代 E F\n-   父子 E>F\n-   兄弟 E~F\n-   相邻兄弟 E+F\n\n# 伪元素\n\n-   ::before\n-   ::after\n-   ::first-letter\n-   ::first-line\n\n# 优先级/特异度 Specificity\n\n-   !important > 内联 > id > （伪）类 > （伪）元素\n-   覆盖：同样优先级：后面写的覆盖前面写的\n-   复合选择器：从优先级高的选择器 的 数量 开始比较\n\n# 样式来源\n\n-   页面开发者\n-   用户设置（浏览器可以指定一个本地 CSS 文件，打开所有页面时自动加载\n-   浏览器预设\n    -   [Mozilla Firefox 预设样式](https://dxr.mozilla.org/mozilla-central/source/layout/style/res/html.css)\n    -   [Google Chrome 预设样式](https://chromium.googlesource.com/chromium/blink/+/master/Source/core/css/html.css)\n-   优先级： 开发者 > 用户设置 > 浏览器预设\n-   加了!important 的优先级：用户 important > 开发者 important > 开发者 > 用户设置 > 浏览器预设\n\n# 默认值策略 Defaulting\n\n## 继承\n\n某些属性若不指定值，会自动继承父元素的 ！！！【计算值】\n\n## 显示继承\n\n```css\nhtml {\n    box-sizing: border-box;\n}\n* {\n    box-sizing: inherit;\n    /* 优点是有某一块都要设置为content-box时，只需要设置其最外层元素，不需要全设置 */\n}\n#xxx {\n    box-sizing: content-box;\n}\n```\n\n## 初始值 initial\n\n-   CSS 中，每个属性都有一个初始值\n-   background-color 的初始值为 transparent\n-   margin-left 的初始值为 0，font-size 是 16px，line-height 是 1.2，但根据 font-family 而不同\n-   可以显式重置为初始值，比如 background-color: initial\n-   可以上 mdn 查初始值\n\n# CSS 求值过程\n\n## 一个令人疑惑的很皮的 CSS 求值例子\n\n```html\n<article>\n    <h1>卡尔斯巴德洞窟</h1>\n    <p>\n        卡尔斯巴德洞窟（Carlsbad Caverns）是美国的一座国家公园，\n        位于新墨西哥州东南部。游客可以通过天然入口徒步进入，也可以\n        通过电梯直接到达230米的洞穴深处。\n    </p>\n</article>\n\n<style>\n    body {\n        margin: 0;\n    }\n    article {\n        line-height: 150%;\n    }\n    h1 {\n        font-size: 40px; /*最终实际的line-height值为24px*/\n    }\n    p {\n        font-size: 14px; /*最终实际的line-height值为24px*/\n    }\n</style>\n\n<style>\n    body {\n        margin: 0;\n    }\n    article {\n        line-height: 1.5;\n    }\n    h1 {\n        font-size: 40px; /*最终实际的line-height值为60px*/\n    }\n    p {\n        font-size: 14px; /*最终实际的line-height值为21px*/\n    }\n</style>\n\n<!--\n    原因：\n    设为150%时，子元素继承前，父元素的line-height=150%会先被计算（resolving），得到一个绝对值，被计算为16px(默认的font-size值)*1.5=24px，子元素继承到的值是24px\n\n    设为1.5时，子元素继承前，父元素在执行resolving时，1.5是绝对值，不会被转换，所以子元素继承到值1.5，后面再根据自己的font-size*1.5计算line-height\n\n    总结：子元素继承到的是父元素的 计算值（一个绝对值）\n-->\n```\n\n## CSS 求值详细过程\n\n-   filtering：有效选择器 有效属性值 符合 media ，筛选出所有**声明值 Declared Values**\n-   cascading：选出优先级最高的一条声明，得到**层叠值 Cascaded Value**\n-   defaulting：当层叠值为空时，用 继承 | 初始值，得到**指定值 Specified Value**\n-   resolving：将相对值、关键字转化为绝对值，如 em 转换为 px，%被转换为 px，相对路径转换为绝对路径，得到**计算值 Computed Value**\n-   formatting:将计算值进一步转换，比如百分比、关键字转换为绝对值，得到**使用值 Used Value**\n-   constraining：将小数像素转为整数，得到**实际值**\n\n# CSS 排版原理\n\n## 盒模型\n\n### content-box：\n\n-   margin\n-   border\n-   padding\n-   content（width height）\n\n### border-box\n\n-   margin\n-   border （width = border + padding + content_width）\n-   padding\n-   content\n\n## height 100%（一般不用\n\n-   高度百分数，是相对于父元素的高度\n-   若父元素无高度，则百分比高度不生效\n-   用 vw vh 设置相对于屏幕的百分比高度，100vh 即 100%屏幕高度\n\n## padding 100%\n\n-   padding 百分比值，不论是 padding top、left，都是相对于**父元素宽度**\n-   应用：做固定宽高比的盒子.\n\n## margin 折叠\n\n上下相邻元素的间距会取其 margin 中较大值。\n\n## border：四条边不同颜色\n\n-   实际相邻的 border 交界处，是斜切的。\n-   当元素的 width height 为 0 时，会得到四个三角形\n\n# background: repeating-conic-gradient(black 0 60deg, yellow 0 120deg);\n\n# 视觉格式化模型\n\n## Viewport 视口\n\n浏览器的可视区域，所有元素都在 viewport 内\n\n## 块级元素(Block-level Elements)\n\n-   会被格式化成块状的元素\n-   例如 p、div、section 等\n-   将 display 设置为 block、list-item、table 会使元素变为块级\n\n## 行内元素(Inline-level Elements)\n\n-   不会为其内容生成块级框\n-   让其内容分布在多行中\n-   display 设置为 inline、inline-block、inline-table 会使元素变为行级\n\n---\n\n    “因为大佬比你知道的多”\n","slug":"360fe_02_css","published":1,"updated":"2019-07-05T05:00:34.000Z","_id":"cjxtyumqc000ahbgh7f4zkx2x","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"css\"><a href=\"#css\" class=\"headerlink\" title=\"css\"></a>css</h1><p>cascading stylesheet<br>级联样式表</p>\n<h1 id=\"Level-版本\"><a href=\"#Level-版本\" class=\"headerlink\" title=\"Level 版本\"></a>Level 版本</h1><ul>\n<li>CSS Level 1（废弃</li>\n<li>CSS Level 2 (CSS 2.2 完整规范)</li>\n<li>CSS Level 3（在 2.2 的基础上增加新模块特性<ul>\n<li>Color Module Level 3</li>\n<li>Selectors Level 3</li>\n<li>Media Queries</li>\n<li>Fonts Level 3</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"选择器\"><a href=\"#选择器\" class=\"headerlink\" title=\"选择器\"></a>选择器</h1><h2 id=\"简单\"><a href=\"#简单\" class=\"headerlink\" title=\"简单\"></a>简单</h2><ul>\n<li>通配 *</li>\n<li>标签 E</li>\n<li>类 .class</li>\n<li>id #id</li>\n</ul>\n<h2 id=\"属性选择器\"><a href=\"#属性选择器\" class=\"headerlink\" title=\"属性选择器 [ ]\"></a>属性选择器 [ ]</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 具有某个属性 */</span></span><br><span class=\"line\"><span class=\"selector-attr\">[disabled]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 属性为指定的值 */</span></span><br><span class=\"line\"><span class=\"selector-attr\">[type=\"checkbox\"]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 属性值包含某个字符串 */</span></span><br><span class=\"line\"><span class=\"selector-attr\">[href*=\"example\"]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 属性值以某个字符串开头 */</span></span><br><span class=\"line\"><span class=\"selector-attr\">[href^=\"http:\"]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 属性值以某个字符串结束 */</span></span><br><span class=\"line\"><span class=\"selector-attr\">[href$=\"jpg\"]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 属性值以空格分割后包含某个字符串 */</span></span><br><span class=\"line\"><span class=\"selector-attr\">[lang~＝\"zh-cn\"]</span><span class=\"comment\">/* class选择器的实现机制 */</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"伪类\"><a href=\"#伪类\" class=\"headerlink\" title=\"伪类\"></a>伪类</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 动态性伪类，根据状态选择 */</span></span><br><span class=\"line\">a:link    &#123; ... &#125;       /* 未访问过的链接 */</span><br><span class=\"line\">a:visited &#123; ... &#125;       /* 已访问过的链接 */</span><br><span class=\"line\"></span><br><span class=\"line\">a:hover   &#123; ... &#125;       /* 鼠标移到链接上的样式 */</span><br><span class=\"line\">a:active  &#123; ... &#125;       /* 鼠标在连接上按下时的样式 */</span><br><span class=\"line\">a:focus   &#123; ... &#125;       /* 获得焦点时的样式 */</span><br><span class=\"line\"></span><br><span class=\"line\">input:disabled &#123; ... &#125;  /* 禁用时的样式 */</span><br><span class=\"line\">input:checked &#123; ... &#125;   /* 选中时的样式 */</span><br><span class=\"line\">                        <span class=\"comment\">/*利用:checked来做某些toggle组件状态转换*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 结构性伪类 */</span></span><br><span class=\"line\"><span class=\"selector-pseudo\">:first-child</span></span><br><span class=\"line\"><span class=\"selector-pseudo\">:last-child</span></span><br><span class=\"line\"><span class=\"selector-pseudo\">:nth-child(2n+1)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-pseudo\">:first-of-type</span></span><br><span class=\"line\"><span class=\"selector-pseudo\">:last-of-type</span></span><br><span class=\"line\"><span class=\"selector-tag\">div</span><span class=\"selector-pseudo\">:nth-of-type(2n+1)</span>   <span class=\"comment\">/*对nth-child()增加类型限制*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-pseudo\">:empty</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"组合性选择器\"><a href=\"#组合性选择器\" class=\"headerlink\" title=\"组合性选择器\"></a>组合性选择器</h2><ul>\n<li>后代 E F</li>\n<li>父子 E&gt;F</li>\n<li>兄弟 E~F</li>\n<li>相邻兄弟 E+F</li>\n</ul>\n<h1 id=\"伪元素\"><a href=\"#伪元素\" class=\"headerlink\" title=\"伪元素\"></a>伪元素</h1><ul>\n<li>::before</li>\n<li>::after</li>\n<li>::first-letter</li>\n<li>::first-line</li>\n</ul>\n<h1 id=\"优先级-特异度-Specificity\"><a href=\"#优先级-特异度-Specificity\" class=\"headerlink\" title=\"优先级/特异度 Specificity\"></a>优先级/特异度 Specificity</h1><ul>\n<li>!important &gt; 内联 &gt; id &gt; （伪）类 &gt; （伪）元素</li>\n<li>覆盖：同样优先级：后面写的覆盖前面写的</li>\n<li>复合选择器：从优先级高的选择器 的 数量 开始比较</li>\n</ul>\n<h1 id=\"样式来源\"><a href=\"#样式来源\" class=\"headerlink\" title=\"样式来源\"></a>样式来源</h1><ul>\n<li>页面开发者</li>\n<li>用户设置（浏览器可以指定一个本地 CSS 文件，打开所有页面时自动加载</li>\n<li>浏览器预设<ul>\n<li><a href=\"https://dxr.mozilla.org/mozilla-central/source/layout/style/res/html.css\" target=\"_blank\" rel=\"noopener\">Mozilla Firefox 预设样式</a></li>\n<li><a href=\"https://chromium.googlesource.com/chromium/blink/+/master/Source/core/css/html.css\" target=\"_blank\" rel=\"noopener\">Google Chrome 预设样式</a></li>\n</ul>\n</li>\n<li>优先级： 开发者 &gt; 用户设置 &gt; 浏览器预设</li>\n<li>加了!important 的优先级：用户 important &gt; 开发者 important &gt; 开发者 &gt; 用户设置 &gt; 浏览器预设</li>\n</ul>\n<h1 id=\"默认值策略-Defaulting\"><a href=\"#默认值策略-Defaulting\" class=\"headerlink\" title=\"默认值策略 Defaulting\"></a>默认值策略 Defaulting</h1><h2 id=\"继承\"><a href=\"#继承\" class=\"headerlink\" title=\"继承\"></a>继承</h2><p>某些属性若不指定值，会自动继承父元素的 ！！！【计算值】</p>\n<h2 id=\"显示继承\"><a href=\"#显示继承\" class=\"headerlink\" title=\"显示继承\"></a>显示继承</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">* &#123;</span><br><span class=\"line\">    <span class=\"attribute\">box-sizing</span>: inherit;</span><br><span class=\"line\">    <span class=\"comment\">/* 优点是有某一块都要设置为content-box时，只需要设置其最外层元素，不需要全设置 */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#xxx</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">box-sizing</span>: content-box;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"初始值-initial\"><a href=\"#初始值-initial\" class=\"headerlink\" title=\"初始值 initial\"></a>初始值 initial</h2><ul>\n<li>CSS 中，每个属性都有一个初始值</li>\n<li>background-color 的初始值为 transparent</li>\n<li>margin-left 的初始值为 0，font-size 是 16px，line-height 是 1.2，但根据 font-family 而不同</li>\n<li>可以显式重置为初始值，比如 background-color: initial</li>\n<li>可以上 mdn 查初始值</li>\n</ul>\n<h1 id=\"CSS-求值过程\"><a href=\"#CSS-求值过程\" class=\"headerlink\" title=\"CSS 求值过程\"></a>CSS 求值过程</h1><h2 id=\"一个令人疑惑的很皮的-CSS-求值例子\"><a href=\"#一个令人疑惑的很皮的-CSS-求值例子\" class=\"headerlink\" title=\"一个令人疑惑的很皮的 CSS 求值例子\"></a>一个令人疑惑的很皮的 CSS 求值例子</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">article</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>卡尔斯巴德洞窟<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        卡尔斯巴德洞窟（Carlsbad Caverns）是美国的一座国家公园，</span><br><span class=\"line\">        位于新墨西哥州东南部。游客可以通过天然入口徒步进入，也可以</span><br><span class=\"line\">        通过电梯直接到达230米的洞穴深处。</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    body &#123;</span><br><span class=\"line\">        margin: 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    article &#123;</span><br><span class=\"line\">        line-height: 150%;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    h1 &#123;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-tag\">font-size</span>: 40<span class=\"selector-tag\">px</span>; <span class=\"comment\">/*最终实际的line-height值为24px*/</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    p &#123;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-tag\">font-size</span>: 14<span class=\"selector-tag\">px</span>; <span class=\"comment\">/*最终实际的line-height值为24px*/</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    body &#123;</span><br><span class=\"line\">        margin: 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    article &#123;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-tag\">line-height</span>: 1<span class=\"selector-class\">.5</span>;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    h1 &#123;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-tag\">font-size</span>: 40<span class=\"selector-tag\">px</span>; <span class=\"comment\">/*最终实际的line-height值为60px*/</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    p &#123;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-tag\">font-size</span>: 14<span class=\"selector-tag\">px</span>; <span class=\"comment\">/*最终实际的line-height值为21px*/</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">    原因：</span></span><br><span class=\"line\"><span class=\"comment\">    设为150%时，子元素继承前，父元素的line-height=150%会先被计算（resolving），得到一个绝对值，被计算为16px(默认的font-size值)*1.5=24px，子元素继承到的值是24px</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">    设为1.5时，子元素继承前，父元素在执行resolving时，1.5是绝对值，不会被转换，所以子元素继承到值1.5，后面再根据自己的font-size*1.5计算line-height</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">    总结：子元素继承到的是父元素的 计算值（一个绝对值）</span></span><br><span class=\"line\"><span class=\"comment\">--&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"CSS-求值详细过程\"><a href=\"#CSS-求值详细过程\" class=\"headerlink\" title=\"CSS 求值详细过程\"></a>CSS 求值详细过程</h2><ul>\n<li>filtering：有效选择器 有效属性值 符合 media ，筛选出所有<strong>声明值 Declared Values</strong></li>\n<li>cascading：选出优先级最高的一条声明，得到<strong>层叠值 Cascaded Value</strong></li>\n<li>defaulting：当层叠值为空时，用 继承 | 初始值，得到<strong>指定值 Specified Value</strong></li>\n<li>resolving：将相对值、关键字转化为绝对值，如 em 转换为 px，%被转换为 px，相对路径转换为绝对路径，得到<strong>计算值 Computed Value</strong></li>\n<li>formatting:将计算值进一步转换，比如百分比、关键字转换为绝对值，得到<strong>使用值 Used Value</strong></li>\n<li>constraining：将小数像素转为整数，得到<strong>实际值</strong></li>\n</ul>\n<h1 id=\"CSS-排版原理\"><a href=\"#CSS-排版原理\" class=\"headerlink\" title=\"CSS 排版原理\"></a>CSS 排版原理</h1><h2 id=\"盒模型\"><a href=\"#盒模型\" class=\"headerlink\" title=\"盒模型\"></a>盒模型</h2><h3 id=\"content-box：\"><a href=\"#content-box：\" class=\"headerlink\" title=\"content-box：\"></a>content-box：</h3><ul>\n<li>margin</li>\n<li>border</li>\n<li>padding</li>\n<li>content（width height）</li>\n</ul>\n<h3 id=\"border-box\"><a href=\"#border-box\" class=\"headerlink\" title=\"border-box\"></a>border-box</h3><ul>\n<li>margin</li>\n<li>border （width = border + padding + content_width）</li>\n<li>padding</li>\n<li>content</li>\n</ul>\n<h2 id=\"height-100-（一般不用\"><a href=\"#height-100-（一般不用\" class=\"headerlink\" title=\"height 100%（一般不用\"></a>height 100%（一般不用</h2><ul>\n<li>高度百分数，是相对于父元素的高度</li>\n<li>若父元素无高度，则百分比高度不生效</li>\n<li>用 vw vh 设置相对于屏幕的百分比高度，100vh 即 100%屏幕高度</li>\n</ul>\n<h2 id=\"padding-100\"><a href=\"#padding-100\" class=\"headerlink\" title=\"padding 100%\"></a>padding 100%</h2><ul>\n<li>padding 百分比值，不论是 padding top、left，都是相对于<strong>父元素宽度</strong></li>\n<li>应用：做固定宽高比的盒子.</li>\n</ul>\n<h2 id=\"margin-折叠\"><a href=\"#margin-折叠\" class=\"headerlink\" title=\"margin 折叠\"></a>margin 折叠</h2><p>上下相邻元素的间距会取其 margin 中较大值。</p>\n<h2 id=\"border：四条边不同颜色\"><a href=\"#border：四条边不同颜色\" class=\"headerlink\" title=\"border：四条边不同颜色\"></a>border：四条边不同颜色</h2><ul>\n<li>实际相邻的 border 交界处，是斜切的。</li>\n<li>当元素的 width height 为 0 时，会得到四个三角形</li>\n</ul>\n<h1 id=\"background-repeating-conic-gradient-black-0-60deg-yellow-0-120deg\"><a href=\"#background-repeating-conic-gradient-black-0-60deg-yellow-0-120deg\" class=\"headerlink\" title=\"background: repeating-conic-gradient(black 0 60deg, yellow 0 120deg);\"></a>background: repeating-conic-gradient(black 0 60deg, yellow 0 120deg);</h1><h1 id=\"视觉格式化模型\"><a href=\"#视觉格式化模型\" class=\"headerlink\" title=\"视觉格式化模型\"></a>视觉格式化模型</h1><h2 id=\"Viewport-视口\"><a href=\"#Viewport-视口\" class=\"headerlink\" title=\"Viewport 视口\"></a>Viewport 视口</h2><p>浏览器的可视区域，所有元素都在 viewport 内</p>\n<h2 id=\"块级元素-Block-level-Elements\"><a href=\"#块级元素-Block-level-Elements\" class=\"headerlink\" title=\"块级元素(Block-level Elements)\"></a>块级元素(Block-level Elements)</h2><ul>\n<li>会被格式化成块状的元素</li>\n<li>例如 p、div、section 等</li>\n<li>将 display 设置为 block、list-item、table 会使元素变为块级</li>\n</ul>\n<h2 id=\"行内元素-Inline-level-Elements\"><a href=\"#行内元素-Inline-level-Elements\" class=\"headerlink\" title=\"行内元素(Inline-level Elements)\"></a>行内元素(Inline-level Elements)</h2><ul>\n<li>不会为其内容生成块级框</li>\n<li>让其内容分布在多行中</li>\n<li>display 设置为 inline、inline-block、inline-table 会使元素变为行级</li>\n</ul>\n<hr>\n<pre><code>“因为大佬比你知道的多”\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"css\"><a href=\"#css\" class=\"headerlink\" title=\"css\"></a>css</h1><p>cascading stylesheet<br>级联样式表</p>\n<h1 id=\"Level-版本\"><a href=\"#Level-版本\" class=\"headerlink\" title=\"Level 版本\"></a>Level 版本</h1><ul>\n<li>CSS Level 1（废弃</li>\n<li>CSS Level 2 (CSS 2.2 完整规范)</li>\n<li>CSS Level 3（在 2.2 的基础上增加新模块特性<ul>\n<li>Color Module Level 3</li>\n<li>Selectors Level 3</li>\n<li>Media Queries</li>\n<li>Fonts Level 3</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"选择器\"><a href=\"#选择器\" class=\"headerlink\" title=\"选择器\"></a>选择器</h1><h2 id=\"简单\"><a href=\"#简单\" class=\"headerlink\" title=\"简单\"></a>简单</h2><ul>\n<li>通配 *</li>\n<li>标签 E</li>\n<li>类 .class</li>\n<li>id #id</li>\n</ul>\n<h2 id=\"属性选择器\"><a href=\"#属性选择器\" class=\"headerlink\" title=\"属性选择器 [ ]\"></a>属性选择器 [ ]</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 具有某个属性 */</span></span><br><span class=\"line\"><span class=\"selector-attr\">[disabled]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 属性为指定的值 */</span></span><br><span class=\"line\"><span class=\"selector-attr\">[type=\"checkbox\"]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 属性值包含某个字符串 */</span></span><br><span class=\"line\"><span class=\"selector-attr\">[href*=\"example\"]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 属性值以某个字符串开头 */</span></span><br><span class=\"line\"><span class=\"selector-attr\">[href^=\"http:\"]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 属性值以某个字符串结束 */</span></span><br><span class=\"line\"><span class=\"selector-attr\">[href$=\"jpg\"]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 属性值以空格分割后包含某个字符串 */</span></span><br><span class=\"line\"><span class=\"selector-attr\">[lang~＝\"zh-cn\"]</span><span class=\"comment\">/* class选择器的实现机制 */</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"伪类\"><a href=\"#伪类\" class=\"headerlink\" title=\"伪类\"></a>伪类</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 动态性伪类，根据状态选择 */</span></span><br><span class=\"line\">a:link    &#123; ... &#125;       /* 未访问过的链接 */</span><br><span class=\"line\">a:visited &#123; ... &#125;       /* 已访问过的链接 */</span><br><span class=\"line\"></span><br><span class=\"line\">a:hover   &#123; ... &#125;       /* 鼠标移到链接上的样式 */</span><br><span class=\"line\">a:active  &#123; ... &#125;       /* 鼠标在连接上按下时的样式 */</span><br><span class=\"line\">a:focus   &#123; ... &#125;       /* 获得焦点时的样式 */</span><br><span class=\"line\"></span><br><span class=\"line\">input:disabled &#123; ... &#125;  /* 禁用时的样式 */</span><br><span class=\"line\">input:checked &#123; ... &#125;   /* 选中时的样式 */</span><br><span class=\"line\">                        <span class=\"comment\">/*利用:checked来做某些toggle组件状态转换*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 结构性伪类 */</span></span><br><span class=\"line\"><span class=\"selector-pseudo\">:first-child</span></span><br><span class=\"line\"><span class=\"selector-pseudo\">:last-child</span></span><br><span class=\"line\"><span class=\"selector-pseudo\">:nth-child(2n+1)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-pseudo\">:first-of-type</span></span><br><span class=\"line\"><span class=\"selector-pseudo\">:last-of-type</span></span><br><span class=\"line\"><span class=\"selector-tag\">div</span><span class=\"selector-pseudo\">:nth-of-type(2n+1)</span>   <span class=\"comment\">/*对nth-child()增加类型限制*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-pseudo\">:empty</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"组合性选择器\"><a href=\"#组合性选择器\" class=\"headerlink\" title=\"组合性选择器\"></a>组合性选择器</h2><ul>\n<li>后代 E F</li>\n<li>父子 E&gt;F</li>\n<li>兄弟 E~F</li>\n<li>相邻兄弟 E+F</li>\n</ul>\n<h1 id=\"伪元素\"><a href=\"#伪元素\" class=\"headerlink\" title=\"伪元素\"></a>伪元素</h1><ul>\n<li>::before</li>\n<li>::after</li>\n<li>::first-letter</li>\n<li>::first-line</li>\n</ul>\n<h1 id=\"优先级-特异度-Specificity\"><a href=\"#优先级-特异度-Specificity\" class=\"headerlink\" title=\"优先级/特异度 Specificity\"></a>优先级/特异度 Specificity</h1><ul>\n<li>!important &gt; 内联 &gt; id &gt; （伪）类 &gt; （伪）元素</li>\n<li>覆盖：同样优先级：后面写的覆盖前面写的</li>\n<li>复合选择器：从优先级高的选择器 的 数量 开始比较</li>\n</ul>\n<h1 id=\"样式来源\"><a href=\"#样式来源\" class=\"headerlink\" title=\"样式来源\"></a>样式来源</h1><ul>\n<li>页面开发者</li>\n<li>用户设置（浏览器可以指定一个本地 CSS 文件，打开所有页面时自动加载</li>\n<li>浏览器预设<ul>\n<li><a href=\"https://dxr.mozilla.org/mozilla-central/source/layout/style/res/html.css\" target=\"_blank\" rel=\"noopener\">Mozilla Firefox 预设样式</a></li>\n<li><a href=\"https://chromium.googlesource.com/chromium/blink/+/master/Source/core/css/html.css\" target=\"_blank\" rel=\"noopener\">Google Chrome 预设样式</a></li>\n</ul>\n</li>\n<li>优先级： 开发者 &gt; 用户设置 &gt; 浏览器预设</li>\n<li>加了!important 的优先级：用户 important &gt; 开发者 important &gt; 开发者 &gt; 用户设置 &gt; 浏览器预设</li>\n</ul>\n<h1 id=\"默认值策略-Defaulting\"><a href=\"#默认值策略-Defaulting\" class=\"headerlink\" title=\"默认值策略 Defaulting\"></a>默认值策略 Defaulting</h1><h2 id=\"继承\"><a href=\"#继承\" class=\"headerlink\" title=\"继承\"></a>继承</h2><p>某些属性若不指定值，会自动继承父元素的 ！！！【计算值】</p>\n<h2 id=\"显示继承\"><a href=\"#显示继承\" class=\"headerlink\" title=\"显示继承\"></a>显示继承</h2><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">box-sizing</span>: border-box;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">* &#123;</span><br><span class=\"line\">    <span class=\"attribute\">box-sizing</span>: inherit;</span><br><span class=\"line\">    <span class=\"comment\">/* 优点是有某一块都要设置为content-box时，只需要设置其最外层元素，不需要全设置 */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#xxx</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">box-sizing</span>: content-box;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"初始值-initial\"><a href=\"#初始值-initial\" class=\"headerlink\" title=\"初始值 initial\"></a>初始值 initial</h2><ul>\n<li>CSS 中，每个属性都有一个初始值</li>\n<li>background-color 的初始值为 transparent</li>\n<li>margin-left 的初始值为 0，font-size 是 16px，line-height 是 1.2，但根据 font-family 而不同</li>\n<li>可以显式重置为初始值，比如 background-color: initial</li>\n<li>可以上 mdn 查初始值</li>\n</ul>\n<h1 id=\"CSS-求值过程\"><a href=\"#CSS-求值过程\" class=\"headerlink\" title=\"CSS 求值过程\"></a>CSS 求值过程</h1><h2 id=\"一个令人疑惑的很皮的-CSS-求值例子\"><a href=\"#一个令人疑惑的很皮的-CSS-求值例子\" class=\"headerlink\" title=\"一个令人疑惑的很皮的 CSS 求值例子\"></a>一个令人疑惑的很皮的 CSS 求值例子</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">article</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>卡尔斯巴德洞窟<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        卡尔斯巴德洞窟（Carlsbad Caverns）是美国的一座国家公园，</span><br><span class=\"line\">        位于新墨西哥州东南部。游客可以通过天然入口徒步进入，也可以</span><br><span class=\"line\">        通过电梯直接到达230米的洞穴深处。</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    body &#123;</span><br><span class=\"line\">        margin: 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    article &#123;</span><br><span class=\"line\">        line-height: 150%;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    h1 &#123;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-tag\">font-size</span>: 40<span class=\"selector-tag\">px</span>; <span class=\"comment\">/*最终实际的line-height值为24px*/</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    p &#123;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-tag\">font-size</span>: 14<span class=\"selector-tag\">px</span>; <span class=\"comment\">/*最终实际的line-height值为24px*/</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    body &#123;</span><br><span class=\"line\">        margin: 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    article &#123;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-tag\">line-height</span>: 1<span class=\"selector-class\">.5</span>;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    h1 &#123;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-tag\">font-size</span>: 40<span class=\"selector-tag\">px</span>; <span class=\"comment\">/*最终实际的line-height值为60px*/</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    p &#123;</span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-tag\">font-size</span>: 14<span class=\"selector-tag\">px</span>; <span class=\"comment\">/*最终实际的line-height值为21px*/</span></span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">    原因：</span></span><br><span class=\"line\"><span class=\"comment\">    设为150%时，子元素继承前，父元素的line-height=150%会先被计算（resolving），得到一个绝对值，被计算为16px(默认的font-size值)*1.5=24px，子元素继承到的值是24px</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">    设为1.5时，子元素继承前，父元素在执行resolving时，1.5是绝对值，不会被转换，所以子元素继承到值1.5，后面再根据自己的font-size*1.5计算line-height</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">    总结：子元素继承到的是父元素的 计算值（一个绝对值）</span></span><br><span class=\"line\"><span class=\"comment\">--&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"CSS-求值详细过程\"><a href=\"#CSS-求值详细过程\" class=\"headerlink\" title=\"CSS 求值详细过程\"></a>CSS 求值详细过程</h2><ul>\n<li>filtering：有效选择器 有效属性值 符合 media ，筛选出所有<strong>声明值 Declared Values</strong></li>\n<li>cascading：选出优先级最高的一条声明，得到<strong>层叠值 Cascaded Value</strong></li>\n<li>defaulting：当层叠值为空时，用 继承 | 初始值，得到<strong>指定值 Specified Value</strong></li>\n<li>resolving：将相对值、关键字转化为绝对值，如 em 转换为 px，%被转换为 px，相对路径转换为绝对路径，得到<strong>计算值 Computed Value</strong></li>\n<li>formatting:将计算值进一步转换，比如百分比、关键字转换为绝对值，得到<strong>使用值 Used Value</strong></li>\n<li>constraining：将小数像素转为整数，得到<strong>实际值</strong></li>\n</ul>\n<h1 id=\"CSS-排版原理\"><a href=\"#CSS-排版原理\" class=\"headerlink\" title=\"CSS 排版原理\"></a>CSS 排版原理</h1><h2 id=\"盒模型\"><a href=\"#盒模型\" class=\"headerlink\" title=\"盒模型\"></a>盒模型</h2><h3 id=\"content-box：\"><a href=\"#content-box：\" class=\"headerlink\" title=\"content-box：\"></a>content-box：</h3><ul>\n<li>margin</li>\n<li>border</li>\n<li>padding</li>\n<li>content（width height）</li>\n</ul>\n<h3 id=\"border-box\"><a href=\"#border-box\" class=\"headerlink\" title=\"border-box\"></a>border-box</h3><ul>\n<li>margin</li>\n<li>border （width = border + padding + content_width）</li>\n<li>padding</li>\n<li>content</li>\n</ul>\n<h2 id=\"height-100-（一般不用\"><a href=\"#height-100-（一般不用\" class=\"headerlink\" title=\"height 100%（一般不用\"></a>height 100%（一般不用</h2><ul>\n<li>高度百分数，是相对于父元素的高度</li>\n<li>若父元素无高度，则百分比高度不生效</li>\n<li>用 vw vh 设置相对于屏幕的百分比高度，100vh 即 100%屏幕高度</li>\n</ul>\n<h2 id=\"padding-100\"><a href=\"#padding-100\" class=\"headerlink\" title=\"padding 100%\"></a>padding 100%</h2><ul>\n<li>padding 百分比值，不论是 padding top、left，都是相对于<strong>父元素宽度</strong></li>\n<li>应用：做固定宽高比的盒子.</li>\n</ul>\n<h2 id=\"margin-折叠\"><a href=\"#margin-折叠\" class=\"headerlink\" title=\"margin 折叠\"></a>margin 折叠</h2><p>上下相邻元素的间距会取其 margin 中较大值。</p>\n<h2 id=\"border：四条边不同颜色\"><a href=\"#border：四条边不同颜色\" class=\"headerlink\" title=\"border：四条边不同颜色\"></a>border：四条边不同颜色</h2><ul>\n<li>实际相邻的 border 交界处，是斜切的。</li>\n<li>当元素的 width height 为 0 时，会得到四个三角形</li>\n</ul>\n<h1 id=\"background-repeating-conic-gradient-black-0-60deg-yellow-0-120deg\"><a href=\"#background-repeating-conic-gradient-black-0-60deg-yellow-0-120deg\" class=\"headerlink\" title=\"background: repeating-conic-gradient(black 0 60deg, yellow 0 120deg);\"></a>background: repeating-conic-gradient(black 0 60deg, yellow 0 120deg);</h1><h1 id=\"视觉格式化模型\"><a href=\"#视觉格式化模型\" class=\"headerlink\" title=\"视觉格式化模型\"></a>视觉格式化模型</h1><h2 id=\"Viewport-视口\"><a href=\"#Viewport-视口\" class=\"headerlink\" title=\"Viewport 视口\"></a>Viewport 视口</h2><p>浏览器的可视区域，所有元素都在 viewport 内</p>\n<h2 id=\"块级元素-Block-level-Elements\"><a href=\"#块级元素-Block-level-Elements\" class=\"headerlink\" title=\"块级元素(Block-level Elements)\"></a>块级元素(Block-level Elements)</h2><ul>\n<li>会被格式化成块状的元素</li>\n<li>例如 p、div、section 等</li>\n<li>将 display 设置为 block、list-item、table 会使元素变为块级</li>\n</ul>\n<h2 id=\"行内元素-Inline-level-Elements\"><a href=\"#行内元素-Inline-level-Elements\" class=\"headerlink\" title=\"行内元素(Inline-level Elements)\"></a>行内元素(Inline-level Elements)</h2><ul>\n<li>不会为其内容生成块级框</li>\n<li>让其内容分布在多行中</li>\n<li>display 设置为 inline、inline-block、inline-table 会使元素变为行级</li>\n</ul>\n<hr>\n<pre><code>“因为大佬比你知道的多”\n</code></pre>"},{"title":"古老神奇的table","date":"2018-08-28T16:00:00.000Z","description":"凭什么table能兼容IE6？","toc":1,"top":0,"_content":"\n# 结构\n\n```html\n<table>\n  <caption>表格上方的居中标题</caption>\n  <colgroup>\n    <col span=\"2\" style=\"\">\n    <col style=\"\">\n  </colgroup>\n  <thead>\n      <tr>\n        <th>ISBN</th>\n        <th>Title</th>\n        <th>Price</th>\n      </tr>\n  </thead>\n  <tody>\n      <tr>\n        <td>3476896</td>\n        <td>My first HTML</td>\n        <td>$53</td>\n      </tr>\n  </tbody>\n  <tfoot>\n      <tr>\n        <td>3476896</td>\n        <td>My first HTML</td>\n        <td>$53</td>\n      </tr>\n  </tfoot>\n</table>\n```\n\n# 标签\n\n```\n<caption>、<col>、<colgroup>、<thead>、<tfoot> 以及 <tbody>\n```\n\n# `<caption>标题`\n\n对齐方式：\n\n-   用 CSS 属性 \"text-align\" 和 \"caption-side\"\n-   caption-side 只有 top 和 bootom 两个，即位于表格上方或下方\n-   用 text-align 来控制左右位置\n\n无其他属性（HTML4.01 的 align 属性被 HTML5 删除）\n\n# `<colgroup>` 和 `<col>` ：对列进行组合\n\n对列进行组合\n\nspan 属性：定义横跨的列数,无 span 属性默认为 1（类似于 td 的 colspan 属性）\n\n无其他属性（表示样式的 HTML4.01 属性均被 HTML5 删除）\n\n# `<thead> <tbody> <tfoot>`\n\n无属性（样式属性被 HTML5 删除）\n\n默认不会影响表格的样式布局\n\n优点：\n\n-   使浏览器有能力支持独立于表格表头和表格页脚的表格主体滚动。\n-   当包含多个页面的长的表格被打印时，表格的表头和页脚可被打印在包含表格数据的每张页面上。\n-   可以方便的定义 三部分 的样式\n\n# `<table>`\n\n属性：border=1 或\"\" 规定是否有边框\n\n无其他属性（表示样式的 HTML4.01 属性均被 HTML5 删除）\n\n# 表格行：`<tr>`\n\n无属性（表示样式的 HTML4.01 属性均被 HTML5 删除）\n\n# 单元格：`<td>` 和 `<th>`\n\n差异\n\n-   th：文本粗体，居中\n-   td：文本普通，左对齐\n\n属性\n\n-   colspan：横跨的列数\n-   rowspan：横跨的行数\n-   headers：header_id 单元格关联的一个或多个表头单元格\n-   无其他属性（表示样式的 HTML4.01 属性均被 HTML5 删除）\n\n自动居中\n\n-   如果给 td 定义了尺寸，且子元素的尺寸小于 td 尺寸，子元素会自动垂直居中\n-   居中后子元素与 td 的边距，不属于 td 的 padding 值，也不属于子元素的 margin 值\n-   IE6 居中随便写，写不出来算我输\n\n# CSS 属性：border-collapse\n\n默认情况：单元格之间有间隔隔开，border-collapse:separate\n\n一般不需要隔开：\n\n```css\ntable {\n    border-collapse: collapse;\n}\n```\n\n---\n\n    \"你大爷还是你大爷\"\n","source":"_posts/ancient_magical_table.md","raw":"---\ntitle: 古老神奇的table\ncategories:\n    - html # 一级分类\ntags:\n    - table\n    - html\ndate: 2018-08-29\ndescription: 凭什么table能兼容IE6？\ntoc: 1\ntop: 0\n---\n\n# 结构\n\n```html\n<table>\n  <caption>表格上方的居中标题</caption>\n  <colgroup>\n    <col span=\"2\" style=\"\">\n    <col style=\"\">\n  </colgroup>\n  <thead>\n      <tr>\n        <th>ISBN</th>\n        <th>Title</th>\n        <th>Price</th>\n      </tr>\n  </thead>\n  <tody>\n      <tr>\n        <td>3476896</td>\n        <td>My first HTML</td>\n        <td>$53</td>\n      </tr>\n  </tbody>\n  <tfoot>\n      <tr>\n        <td>3476896</td>\n        <td>My first HTML</td>\n        <td>$53</td>\n      </tr>\n  </tfoot>\n</table>\n```\n\n# 标签\n\n```\n<caption>、<col>、<colgroup>、<thead>、<tfoot> 以及 <tbody>\n```\n\n# `<caption>标题`\n\n对齐方式：\n\n-   用 CSS 属性 \"text-align\" 和 \"caption-side\"\n-   caption-side 只有 top 和 bootom 两个，即位于表格上方或下方\n-   用 text-align 来控制左右位置\n\n无其他属性（HTML4.01 的 align 属性被 HTML5 删除）\n\n# `<colgroup>` 和 `<col>` ：对列进行组合\n\n对列进行组合\n\nspan 属性：定义横跨的列数,无 span 属性默认为 1（类似于 td 的 colspan 属性）\n\n无其他属性（表示样式的 HTML4.01 属性均被 HTML5 删除）\n\n# `<thead> <tbody> <tfoot>`\n\n无属性（样式属性被 HTML5 删除）\n\n默认不会影响表格的样式布局\n\n优点：\n\n-   使浏览器有能力支持独立于表格表头和表格页脚的表格主体滚动。\n-   当包含多个页面的长的表格被打印时，表格的表头和页脚可被打印在包含表格数据的每张页面上。\n-   可以方便的定义 三部分 的样式\n\n# `<table>`\n\n属性：border=1 或\"\" 规定是否有边框\n\n无其他属性（表示样式的 HTML4.01 属性均被 HTML5 删除）\n\n# 表格行：`<tr>`\n\n无属性（表示样式的 HTML4.01 属性均被 HTML5 删除）\n\n# 单元格：`<td>` 和 `<th>`\n\n差异\n\n-   th：文本粗体，居中\n-   td：文本普通，左对齐\n\n属性\n\n-   colspan：横跨的列数\n-   rowspan：横跨的行数\n-   headers：header_id 单元格关联的一个或多个表头单元格\n-   无其他属性（表示样式的 HTML4.01 属性均被 HTML5 删除）\n\n自动居中\n\n-   如果给 td 定义了尺寸，且子元素的尺寸小于 td 尺寸，子元素会自动垂直居中\n-   居中后子元素与 td 的边距，不属于 td 的 padding 值，也不属于子元素的 margin 值\n-   IE6 居中随便写，写不出来算我输\n\n# CSS 属性：border-collapse\n\n默认情况：单元格之间有间隔隔开，border-collapse:separate\n\n一般不需要隔开：\n\n```css\ntable {\n    border-collapse: collapse;\n}\n```\n\n---\n\n    \"你大爷还是你大爷\"\n","slug":"ancient_magical_table","published":1,"updated":"2019-05-23T12:06:32.185Z","_id":"cjxtyumqg000ghbgh45him9j0","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"结构\"><a href=\"#结构\" class=\"headerlink\" title=\"结构\"></a>结构</h1><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">caption</span>&gt;</span>表格上方的居中标题<span class=\"tag\">&lt;/<span class=\"name\">caption</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">colgroup</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">col</span> <span class=\"attr\">span</span>=<span class=\"string\">\"2\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">col</span> <span class=\"attr\">style</span>=<span class=\"string\">\"\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">colgroup</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>ISBN<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>Price<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">tody</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>3476896<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>My first HTML<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>$53<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">tfoot</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>3476896<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>My first HTML<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>$53<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">tfoot</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"标签\"><a href=\"#标签\" class=\"headerlink\" title=\"标签\"></a>标签</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;caption&gt;、&lt;col&gt;、&lt;colgroup&gt;、&lt;thead&gt;、&lt;tfoot&gt; 以及 &lt;tbody&gt;</span><br></pre></td></tr></table></figure>\n<h1 id=\"lt-caption-gt-标题\"><a href=\"#lt-caption-gt-标题\" class=\"headerlink\" title=\"&lt;caption&gt;标题\"></a><code>&lt;caption&gt;标题</code></h1><p>对齐方式：</p>\n<ul>\n<li>用 CSS 属性 “text-align” 和 “caption-side”</li>\n<li>caption-side 只有 top 和 bootom 两个，即位于表格上方或下方</li>\n<li>用 text-align 来控制左右位置</li>\n</ul>\n<p>无其他属性（HTML4.01 的 align 属性被 HTML5 删除）</p>\n<h1 id=\"lt-colgroup-gt-和-lt-col-gt-：对列进行组合\"><a href=\"#lt-colgroup-gt-和-lt-col-gt-：对列进行组合\" class=\"headerlink\" title=\"&lt;colgroup&gt; 和 &lt;col&gt; ：对列进行组合\"></a><code>&lt;colgroup&gt;</code> 和 <code>&lt;col&gt;</code> ：对列进行组合</h1><p>对列进行组合</p>\n<p>span 属性：定义横跨的列数,无 span 属性默认为 1（类似于 td 的 colspan 属性）</p>\n<p>无其他属性（表示样式的 HTML4.01 属性均被 HTML5 删除）</p>\n<h1 id=\"lt-thead-gt-lt-tbody-gt-lt-tfoot-gt\"><a href=\"#lt-thead-gt-lt-tbody-gt-lt-tfoot-gt\" class=\"headerlink\" title=\"&lt;thead&gt; &lt;tbody&gt; &lt;tfoot&gt;\"></a><code>&lt;thead&gt; &lt;tbody&gt; &lt;tfoot&gt;</code></h1><p>无属性（样式属性被 HTML5 删除）</p>\n<p>默认不会影响表格的样式布局</p>\n<p>优点：</p>\n<ul>\n<li>使浏览器有能力支持独立于表格表头和表格页脚的表格主体滚动。</li>\n<li>当包含多个页面的长的表格被打印时，表格的表头和页脚可被打印在包含表格数据的每张页面上。</li>\n<li>可以方便的定义 三部分 的样式</li>\n</ul>\n<h1 id=\"lt-table-gt\"><a href=\"#lt-table-gt\" class=\"headerlink\" title=\"&lt;table&gt;\"></a><code>&lt;table&gt;</code></h1><p>属性：border=1 或”” 规定是否有边框</p>\n<p>无其他属性（表示样式的 HTML4.01 属性均被 HTML5 删除）</p>\n<h1 id=\"表格行：-lt-tr-gt\"><a href=\"#表格行：-lt-tr-gt\" class=\"headerlink\" title=\"表格行：&lt;tr&gt;\"></a>表格行：<code>&lt;tr&gt;</code></h1><p>无属性（表示样式的 HTML4.01 属性均被 HTML5 删除）</p>\n<h1 id=\"单元格：-lt-td-gt-和-lt-th-gt\"><a href=\"#单元格：-lt-td-gt-和-lt-th-gt\" class=\"headerlink\" title=\"单元格：&lt;td&gt; 和 &lt;th&gt;\"></a>单元格：<code>&lt;td&gt;</code> 和 <code>&lt;th&gt;</code></h1><p>差异</p>\n<ul>\n<li>th：文本粗体，居中</li>\n<li>td：文本普通，左对齐</li>\n</ul>\n<p>属性</p>\n<ul>\n<li>colspan：横跨的列数</li>\n<li>rowspan：横跨的行数</li>\n<li>headers：header_id 单元格关联的一个或多个表头单元格</li>\n<li>无其他属性（表示样式的 HTML4.01 属性均被 HTML5 删除）</li>\n</ul>\n<p>自动居中</p>\n<ul>\n<li>如果给 td 定义了尺寸，且子元素的尺寸小于 td 尺寸，子元素会自动垂直居中</li>\n<li>居中后子元素与 td 的边距，不属于 td 的 padding 值，也不属于子元素的 margin 值</li>\n<li>IE6 居中随便写，写不出来算我输</li>\n</ul>\n<h1 id=\"CSS-属性：border-collapse\"><a href=\"#CSS-属性：border-collapse\" class=\"headerlink\" title=\"CSS 属性：border-collapse\"></a>CSS 属性：border-collapse</h1><p>默认情况：单元格之间有间隔隔开，border-collapse:separate</p>\n<p>一般不需要隔开：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">table</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">border-collapse</span>: collapse;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<pre><code>&quot;你大爷还是你大爷&quot;\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"结构\"><a href=\"#结构\" class=\"headerlink\" title=\"结构\"></a>结构</h1><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">caption</span>&gt;</span>表格上方的居中标题<span class=\"tag\">&lt;/<span class=\"name\">caption</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">colgroup</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">col</span> <span class=\"attr\">span</span>=<span class=\"string\">\"2\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">col</span> <span class=\"attr\">style</span>=<span class=\"string\">\"\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">colgroup</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>ISBN<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>Price<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">tody</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>3476896<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>My first HTML<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>$53<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">tfoot</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>3476896<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>My first HTML<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>$53<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">tfoot</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"标签\"><a href=\"#标签\" class=\"headerlink\" title=\"标签\"></a>标签</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;caption&gt;、&lt;col&gt;、&lt;colgroup&gt;、&lt;thead&gt;、&lt;tfoot&gt; 以及 &lt;tbody&gt;</span><br></pre></td></tr></table></figure>\n<h1 id=\"lt-caption-gt-标题\"><a href=\"#lt-caption-gt-标题\" class=\"headerlink\" title=\"&lt;caption&gt;标题\"></a><code>&lt;caption&gt;标题</code></h1><p>对齐方式：</p>\n<ul>\n<li>用 CSS 属性 “text-align” 和 “caption-side”</li>\n<li>caption-side 只有 top 和 bootom 两个，即位于表格上方或下方</li>\n<li>用 text-align 来控制左右位置</li>\n</ul>\n<p>无其他属性（HTML4.01 的 align 属性被 HTML5 删除）</p>\n<h1 id=\"lt-colgroup-gt-和-lt-col-gt-：对列进行组合\"><a href=\"#lt-colgroup-gt-和-lt-col-gt-：对列进行组合\" class=\"headerlink\" title=\"&lt;colgroup&gt; 和 &lt;col&gt; ：对列进行组合\"></a><code>&lt;colgroup&gt;</code> 和 <code>&lt;col&gt;</code> ：对列进行组合</h1><p>对列进行组合</p>\n<p>span 属性：定义横跨的列数,无 span 属性默认为 1（类似于 td 的 colspan 属性）</p>\n<p>无其他属性（表示样式的 HTML4.01 属性均被 HTML5 删除）</p>\n<h1 id=\"lt-thead-gt-lt-tbody-gt-lt-tfoot-gt\"><a href=\"#lt-thead-gt-lt-tbody-gt-lt-tfoot-gt\" class=\"headerlink\" title=\"&lt;thead&gt; &lt;tbody&gt; &lt;tfoot&gt;\"></a><code>&lt;thead&gt; &lt;tbody&gt; &lt;tfoot&gt;</code></h1><p>无属性（样式属性被 HTML5 删除）</p>\n<p>默认不会影响表格的样式布局</p>\n<p>优点：</p>\n<ul>\n<li>使浏览器有能力支持独立于表格表头和表格页脚的表格主体滚动。</li>\n<li>当包含多个页面的长的表格被打印时，表格的表头和页脚可被打印在包含表格数据的每张页面上。</li>\n<li>可以方便的定义 三部分 的样式</li>\n</ul>\n<h1 id=\"lt-table-gt\"><a href=\"#lt-table-gt\" class=\"headerlink\" title=\"&lt;table&gt;\"></a><code>&lt;table&gt;</code></h1><p>属性：border=1 或”” 规定是否有边框</p>\n<p>无其他属性（表示样式的 HTML4.01 属性均被 HTML5 删除）</p>\n<h1 id=\"表格行：-lt-tr-gt\"><a href=\"#表格行：-lt-tr-gt\" class=\"headerlink\" title=\"表格行：&lt;tr&gt;\"></a>表格行：<code>&lt;tr&gt;</code></h1><p>无属性（表示样式的 HTML4.01 属性均被 HTML5 删除）</p>\n<h1 id=\"单元格：-lt-td-gt-和-lt-th-gt\"><a href=\"#单元格：-lt-td-gt-和-lt-th-gt\" class=\"headerlink\" title=\"单元格：&lt;td&gt; 和 &lt;th&gt;\"></a>单元格：<code>&lt;td&gt;</code> 和 <code>&lt;th&gt;</code></h1><p>差异</p>\n<ul>\n<li>th：文本粗体，居中</li>\n<li>td：文本普通，左对齐</li>\n</ul>\n<p>属性</p>\n<ul>\n<li>colspan：横跨的列数</li>\n<li>rowspan：横跨的行数</li>\n<li>headers：header_id 单元格关联的一个或多个表头单元格</li>\n<li>无其他属性（表示样式的 HTML4.01 属性均被 HTML5 删除）</li>\n</ul>\n<p>自动居中</p>\n<ul>\n<li>如果给 td 定义了尺寸，且子元素的尺寸小于 td 尺寸，子元素会自动垂直居中</li>\n<li>居中后子元素与 td 的边距，不属于 td 的 padding 值，也不属于子元素的 margin 值</li>\n<li>IE6 居中随便写，写不出来算我输</li>\n</ul>\n<h1 id=\"CSS-属性：border-collapse\"><a href=\"#CSS-属性：border-collapse\" class=\"headerlink\" title=\"CSS 属性：border-collapse\"></a>CSS 属性：border-collapse</h1><p>默认情况：单元格之间有间隔隔开，border-collapse:separate</p>\n<p>一般不需要隔开：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">table</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">border-collapse</span>: collapse;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<pre><code>&quot;你大爷还是你大爷&quot;\n</code></pre>"},{"title":"用chrome调试node.js服务端代码","date":"2018-07-29T16:00:00.000Z","description":"不然你想用什么调试？","toc":1,"top":0,"_content":"\n### 开启调试命令\n\n```\nnode --inspect app.js\n\n//在第一行就停下来等待调试,也可以使用\nnode --inspect-brk app.js\n```\n\n### debugger 地址\n\n```\n//运行开启调试命令后，能看到类似如下的输出：\nDebugger listening on ws://127.0.0.1:9229/4dc825ec-a204-46f8-8edc-4afadc8da61a\nFor help see https://nodejs.org/en/docs/inspector\n```\n\n### 在 chrome 中打开 debugger\n\n```\n在Chrome中打开chrome://inspect/#devices\n点击inspect进入调试界面\n```\n\n### debugger 端口\n\ninspect 调试默认监听 9229 端口,可以通过下面的参数指定端口\n\n```\n--inspect=9222\n```\n\n---\n\n    用VSC、用webstorm啊\n    对不起我懒(～﹃～)~zZ\n","source":"_posts/debug_node.js_with_chrome.md","raw":"---\ntitle: 用chrome调试node.js服务端代码\ncategories:\n    - node # 一级分类\ntags:\n    - chrome\n    - node.js\ndate: 2018-07-30\ndescription: 不然你想用什么调试？\ntoc: 1\ntop: 0\n---\n\n### 开启调试命令\n\n```\nnode --inspect app.js\n\n//在第一行就停下来等待调试,也可以使用\nnode --inspect-brk app.js\n```\n\n### debugger 地址\n\n```\n//运行开启调试命令后，能看到类似如下的输出：\nDebugger listening on ws://127.0.0.1:9229/4dc825ec-a204-46f8-8edc-4afadc8da61a\nFor help see https://nodejs.org/en/docs/inspector\n```\n\n### 在 chrome 中打开 debugger\n\n```\n在Chrome中打开chrome://inspect/#devices\n点击inspect进入调试界面\n```\n\n### debugger 端口\n\ninspect 调试默认监听 9229 端口,可以通过下面的参数指定端口\n\n```\n--inspect=9222\n```\n\n---\n\n    用VSC、用webstorm啊\n    对不起我懒(～﹃～)~zZ\n","slug":"debug_node.js_with_chrome","published":1,"updated":"2019-07-05T05:00:34.000Z","_id":"cjxtyumqi000khbghzom0ywgd","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"开启调试命令\"><a href=\"#开启调试命令\" class=\"headerlink\" title=\"开启调试命令\"></a>开启调试命令</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node --inspect app.js</span><br><span class=\"line\"></span><br><span class=\"line\">//在第一行就停下来等待调试,也可以使用</span><br><span class=\"line\">node --inspect-brk app.js</span><br></pre></td></tr></table></figure>\n<h3 id=\"debugger-地址\"><a href=\"#debugger-地址\" class=\"headerlink\" title=\"debugger 地址\"></a>debugger 地址</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//运行开启调试命令后，能看到类似如下的输出：</span><br><span class=\"line\">Debugger listening on ws://127.0.0.1:9229/4dc825ec-a204-46f8-8edc-4afadc8da61a</span><br><span class=\"line\">For help see https://nodejs.org/en/docs/inspector</span><br></pre></td></tr></table></figure>\n<h3 id=\"在-chrome-中打开-debugger\"><a href=\"#在-chrome-中打开-debugger\" class=\"headerlink\" title=\"在 chrome 中打开 debugger\"></a>在 chrome 中打开 debugger</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在Chrome中打开chrome://inspect/#devices</span><br><span class=\"line\">点击inspect进入调试界面</span><br></pre></td></tr></table></figure>\n<h3 id=\"debugger-端口\"><a href=\"#debugger-端口\" class=\"headerlink\" title=\"debugger 端口\"></a>debugger 端口</h3><p>inspect 调试默认监听 9229 端口,可以通过下面的参数指定端口</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">--inspect=9222</span><br></pre></td></tr></table></figure>\n<hr>\n<pre><code>用VSC、用webstorm啊\n对不起我懒(～﹃～)~zZ\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"开启调试命令\"><a href=\"#开启调试命令\" class=\"headerlink\" title=\"开启调试命令\"></a>开启调试命令</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node --inspect app.js</span><br><span class=\"line\"></span><br><span class=\"line\">//在第一行就停下来等待调试,也可以使用</span><br><span class=\"line\">node --inspect-brk app.js</span><br></pre></td></tr></table></figure>\n<h3 id=\"debugger-地址\"><a href=\"#debugger-地址\" class=\"headerlink\" title=\"debugger 地址\"></a>debugger 地址</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//运行开启调试命令后，能看到类似如下的输出：</span><br><span class=\"line\">Debugger listening on ws://127.0.0.1:9229/4dc825ec-a204-46f8-8edc-4afadc8da61a</span><br><span class=\"line\">For help see https://nodejs.org/en/docs/inspector</span><br></pre></td></tr></table></figure>\n<h3 id=\"在-chrome-中打开-debugger\"><a href=\"#在-chrome-中打开-debugger\" class=\"headerlink\" title=\"在 chrome 中打开 debugger\"></a>在 chrome 中打开 debugger</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在Chrome中打开chrome://inspect/#devices</span><br><span class=\"line\">点击inspect进入调试界面</span><br></pre></td></tr></table></figure>\n<h3 id=\"debugger-端口\"><a href=\"#debugger-端口\" class=\"headerlink\" title=\"debugger 端口\"></a>debugger 端口</h3><p>inspect 调试默认监听 9229 端口,可以通过下面的参数指定端口</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">--inspect=9222</span><br></pre></td></tr></table></figure>\n<hr>\n<pre><code>用VSC、用webstorm啊\n对不起我懒(～﹃～)~zZ\n</code></pre>"},{"title":"【置顶】本博客搭建指南[ Hexo + Netlify ]","comments":1,"date":"2099-12-11T16:00:00.000Z","description":"免费 高效 自动部署 markdown友好。","toc":0,"top":1,"_content":"\n## 搭建工具\n\n#### 1. [Hexo](https://hexo.io) - 快速、简洁且高效的博客框架\n- Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。\n- Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。\n- Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade, CoffeeScript。\n\n\n#### 2. [Netlify](https://www.netlify.com/) - 自动化构建、部署、持续集成，自动化HTTPS\n1. 配置代码仓库\n2. 添加构建设置\n3. 自动部署\n\n## 为什么选择这两个工具\n\n1. `Markdown赛高`：习惯于 markdown 输出内容，一直以来都是用 md 来写笔记存在有道云，简单纯净更适合技术文档。\n2. `提交代码 自动构建部署`：每次写完笔记只需要把 md 文件丢在项目路径里，然后提交代码到github，就会触发Netlify自动构建部署，快速更新，只关注于笔记本身。\n3. `自定义域名 无需服务器 HTTPS`：不需要买服务器，可以使用Netlify的子域名，也可以自己买域名配置(例如我的scarsu.com和doc.scarsu.com这两个域名，都是托管在NetlifyDNS服务器上，与我在github上的博客仓库和gitbook仓库关联即可)。\n4. `可定制`：hexo默认/hexo主题中又很多可配置项，另外主题的源码是用pug模板写的，前端er易于上手更改\n\n## 相关配置\n\n- Hexo 主题：[Maupassant Theme](https://github.com/tufu9441/maupassant-hexo/)\n- 本博客代码仓库地址 [github scarsu/ScarSuHexo_Netlify](https://github.com/scarsu/ScarSuHexo_Netlify)\n\n\n## 本地搭建步骤：\n```bash\n#克隆代码仓库到本地\ngit clone https://github.com/scarsu/ScarSuHexo_Netlify.git\n#全局安装hexo\nnpm install hexo -g \n#安装相关依赖\nnpm install \n#构建打包\nhexo d -g \n#运行本地服务器\nhexo s \n```\n\n\n## 本站git仓库目录结构\n```bash\n.\n├── _config.yml    #网站配置\n├── package.json    #npm包信息\n├── scaffolds   #模板文件夹\n├── public   #生成的静态资源文件夹（需要添加到.gitignore文件中）\n├── node_modules   #项目依赖的node模块（需要添加到.gitignore文件中）\n├── source      #资源文件夹\n|   ├── _posts     #markown文档文件夹（日常更新md文章存放路径）\n|   ├── _xx      #所有_开头的文件夹会被编译器忽略\n|   └── xx      #不会被编译器识别的普通文件夹 但是会直接打包的资源目录 （可访问）\n└── themes      #主题\n    └── maupassant     #maupassant主题包\n            ├── languages      #多语言文件\n            ├── layout      #布局模板文件\n            ├── source      #主题资源\n            └── _config.yml      #主题配置\n\n```\n\n\n\n---\n\n     免费 高效 自动部署 markdown友好。\n","source":"_posts/hello_hexo.md","raw":"---\ntitle: 【置顶】本博客搭建指南[ Hexo + Netlify ] # 文章标题\ncategories:\n    - daily # 一级分类\n    - blog # 一级分类\ntags:\n    - daily\n    - blog\ncomments: true #开启评论\ndate: 2099-12-12\ndescription: 免费 高效 自动部署 markdown友好。\ntoc: 0\ntop: 1\n---\n\n## 搭建工具\n\n#### 1. [Hexo](https://hexo.io) - 快速、简洁且高效的博客框架\n- Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。\n- Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。\n- Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade, CoffeeScript。\n\n\n#### 2. [Netlify](https://www.netlify.com/) - 自动化构建、部署、持续集成，自动化HTTPS\n1. 配置代码仓库\n2. 添加构建设置\n3. 自动部署\n\n## 为什么选择这两个工具\n\n1. `Markdown赛高`：习惯于 markdown 输出内容，一直以来都是用 md 来写笔记存在有道云，简单纯净更适合技术文档。\n2. `提交代码 自动构建部署`：每次写完笔记只需要把 md 文件丢在项目路径里，然后提交代码到github，就会触发Netlify自动构建部署，快速更新，只关注于笔记本身。\n3. `自定义域名 无需服务器 HTTPS`：不需要买服务器，可以使用Netlify的子域名，也可以自己买域名配置(例如我的scarsu.com和doc.scarsu.com这两个域名，都是托管在NetlifyDNS服务器上，与我在github上的博客仓库和gitbook仓库关联即可)。\n4. `可定制`：hexo默认/hexo主题中又很多可配置项，另外主题的源码是用pug模板写的，前端er易于上手更改\n\n## 相关配置\n\n- Hexo 主题：[Maupassant Theme](https://github.com/tufu9441/maupassant-hexo/)\n- 本博客代码仓库地址 [github scarsu/ScarSuHexo_Netlify](https://github.com/scarsu/ScarSuHexo_Netlify)\n\n\n## 本地搭建步骤：\n```bash\n#克隆代码仓库到本地\ngit clone https://github.com/scarsu/ScarSuHexo_Netlify.git\n#全局安装hexo\nnpm install hexo -g \n#安装相关依赖\nnpm install \n#构建打包\nhexo d -g \n#运行本地服务器\nhexo s \n```\n\n\n## 本站git仓库目录结构\n```bash\n.\n├── _config.yml    #网站配置\n├── package.json    #npm包信息\n├── scaffolds   #模板文件夹\n├── public   #生成的静态资源文件夹（需要添加到.gitignore文件中）\n├── node_modules   #项目依赖的node模块（需要添加到.gitignore文件中）\n├── source      #资源文件夹\n|   ├── _posts     #markown文档文件夹（日常更新md文章存放路径）\n|   ├── _xx      #所有_开头的文件夹会被编译器忽略\n|   └── xx      #不会被编译器识别的普通文件夹 但是会直接打包的资源目录 （可访问）\n└── themes      #主题\n    └── maupassant     #maupassant主题包\n            ├── languages      #多语言文件\n            ├── layout      #布局模板文件\n            ├── source      #主题资源\n            └── _config.yml      #主题配置\n\n```\n\n\n\n---\n\n     免费 高效 自动部署 markdown友好。\n","slug":"hello_hexo","published":1,"updated":"2019-07-05T05:52:34.000Z","_id":"cjxtyumqk000mhbghp3btkh2u","layout":"post","photos":[],"link":"","content":"<h2 id=\"搭建工具\"><a href=\"#搭建工具\" class=\"headerlink\" title=\"搭建工具\"></a>搭建工具</h2><h4 id=\"1-Hexo-快速、简洁且高效的博客框架\"><a href=\"#1-Hexo-快速、简洁且高效的博客框架\" class=\"headerlink\" title=\"1. Hexo - 快速、简洁且高效的博客框架\"></a>1. <a href=\"https://hexo.io\" target=\"_blank\" rel=\"noopener\">Hexo</a> - 快速、简洁且高效的博客框架</h4><ul>\n<li>Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。</li>\n<li>Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。</li>\n<li>Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade, CoffeeScript。</li>\n</ul>\n<h4 id=\"2-Netlify-自动化构建、部署、持续集成，自动化HTTPS\"><a href=\"#2-Netlify-自动化构建、部署、持续集成，自动化HTTPS\" class=\"headerlink\" title=\"2. Netlify - 自动化构建、部署、持续集成，自动化HTTPS\"></a>2. <a href=\"https://www.netlify.com/\" target=\"_blank\" rel=\"noopener\">Netlify</a> - 自动化构建、部署、持续集成，自动化HTTPS</h4><ol>\n<li>配置代码仓库</li>\n<li>添加构建设置</li>\n<li>自动部署</li>\n</ol>\n<h2 id=\"为什么选择这两个工具\"><a href=\"#为什么选择这两个工具\" class=\"headerlink\" title=\"为什么选择这两个工具\"></a>为什么选择这两个工具</h2><ol>\n<li><code>Markdown赛高</code>：习惯于 markdown 输出内容，一直以来都是用 md 来写笔记存在有道云，简单纯净更适合技术文档。</li>\n<li><code>提交代码 自动构建部署</code>：每次写完笔记只需要把 md 文件丢在项目路径里，然后提交代码到github，就会触发Netlify自动构建部署，快速更新，只关注于笔记本身。</li>\n<li><code>自定义域名 无需服务器 HTTPS</code>：不需要买服务器，可以使用Netlify的子域名，也可以自己买域名配置(例如我的scarsu.com和doc.scarsu.com这两个域名，都是托管在NetlifyDNS服务器上，与我在github上的博客仓库和gitbook仓库关联即可)。</li>\n<li><code>可定制</code>：hexo默认/hexo主题中又很多可配置项，另外主题的源码是用pug模板写的，前端er易于上手更改</li>\n</ol>\n<h2 id=\"相关配置\"><a href=\"#相关配置\" class=\"headerlink\" title=\"相关配置\"></a>相关配置</h2><ul>\n<li>Hexo 主题：<a href=\"https://github.com/tufu9441/maupassant-hexo/\" target=\"_blank\" rel=\"noopener\">Maupassant Theme</a></li>\n<li>本博客代码仓库地址 <a href=\"https://github.com/scarsu/ScarSuHexo_Netlify\" target=\"_blank\" rel=\"noopener\">github scarsu/ScarSuHexo_Netlify</a></li>\n</ul>\n<h2 id=\"本地搭建步骤：\"><a href=\"#本地搭建步骤：\" class=\"headerlink\" title=\"本地搭建步骤：\"></a>本地搭建步骤：</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#克隆代码仓库到本地</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/scarsu/ScarSuHexo_Netlify.git</span><br><span class=\"line\"><span class=\"comment\">#全局安装hexo</span></span><br><span class=\"line\">npm install hexo -g </span><br><span class=\"line\"><span class=\"comment\">#安装相关依赖</span></span><br><span class=\"line\">npm install </span><br><span class=\"line\"><span class=\"comment\">#构建打包</span></span><br><span class=\"line\">hexo d -g </span><br><span class=\"line\"><span class=\"comment\">#运行本地服务器</span></span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n<h2 id=\"本站git仓库目录结构\"><a href=\"#本站git仓库目录结构\" class=\"headerlink\" title=\"本站git仓库目录结构\"></a>本站git仓库目录结构</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml    <span class=\"comment\">#网站配置</span></span><br><span class=\"line\">├── package.json    <span class=\"comment\">#npm包信息</span></span><br><span class=\"line\">├── scaffolds   <span class=\"comment\">#模板文件夹</span></span><br><span class=\"line\">├── public   <span class=\"comment\">#生成的静态资源文件夹（需要添加到.gitignore文件中）</span></span><br><span class=\"line\">├── node_modules   <span class=\"comment\">#项目依赖的node模块（需要添加到.gitignore文件中）</span></span><br><span class=\"line\">├── <span class=\"built_in\">source</span>      <span class=\"comment\">#资源文件夹</span></span><br><span class=\"line\">|   ├── _posts     <span class=\"comment\">#markown文档文件夹（日常更新md文章存放路径）</span></span><br><span class=\"line\">|   ├── _xx      <span class=\"comment\">#所有_开头的文件夹会被编译器忽略</span></span><br><span class=\"line\">|   └── xx      <span class=\"comment\">#不会被编译器识别的普通文件夹 但是会直接打包的资源目录 （可访问）</span></span><br><span class=\"line\">└── themes      <span class=\"comment\">#主题</span></span><br><span class=\"line\">    └── maupassant     <span class=\"comment\">#maupassant主题包</span></span><br><span class=\"line\">            ├── languages      <span class=\"comment\">#多语言文件</span></span><br><span class=\"line\">            ├── layout      <span class=\"comment\">#布局模板文件</span></span><br><span class=\"line\">            ├── <span class=\"built_in\">source</span>      <span class=\"comment\">#主题资源</span></span><br><span class=\"line\">            └── _config.yml      <span class=\"comment\">#主题配置</span></span><br></pre></td></tr></table></figure>\n<hr>\n<pre><code>免费 高效 自动部署 markdown友好。\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"搭建工具\"><a href=\"#搭建工具\" class=\"headerlink\" title=\"搭建工具\"></a>搭建工具</h2><h4 id=\"1-Hexo-快速、简洁且高效的博客框架\"><a href=\"#1-Hexo-快速、简洁且高效的博客框架\" class=\"headerlink\" title=\"1. Hexo - 快速、简洁且高效的博客框架\"></a>1. <a href=\"https://hexo.io\" target=\"_blank\" rel=\"noopener\">Hexo</a> - 快速、简洁且高效的博客框架</h4><ul>\n<li>Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。</li>\n<li>Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。</li>\n<li>Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade, CoffeeScript。</li>\n</ul>\n<h4 id=\"2-Netlify-自动化构建、部署、持续集成，自动化HTTPS\"><a href=\"#2-Netlify-自动化构建、部署、持续集成，自动化HTTPS\" class=\"headerlink\" title=\"2. Netlify - 自动化构建、部署、持续集成，自动化HTTPS\"></a>2. <a href=\"https://www.netlify.com/\" target=\"_blank\" rel=\"noopener\">Netlify</a> - 自动化构建、部署、持续集成，自动化HTTPS</h4><ol>\n<li>配置代码仓库</li>\n<li>添加构建设置</li>\n<li>自动部署</li>\n</ol>\n<h2 id=\"为什么选择这两个工具\"><a href=\"#为什么选择这两个工具\" class=\"headerlink\" title=\"为什么选择这两个工具\"></a>为什么选择这两个工具</h2><ol>\n<li><code>Markdown赛高</code>：习惯于 markdown 输出内容，一直以来都是用 md 来写笔记存在有道云，简单纯净更适合技术文档。</li>\n<li><code>提交代码 自动构建部署</code>：每次写完笔记只需要把 md 文件丢在项目路径里，然后提交代码到github，就会触发Netlify自动构建部署，快速更新，只关注于笔记本身。</li>\n<li><code>自定义域名 无需服务器 HTTPS</code>：不需要买服务器，可以使用Netlify的子域名，也可以自己买域名配置(例如我的scarsu.com和doc.scarsu.com这两个域名，都是托管在NetlifyDNS服务器上，与我在github上的博客仓库和gitbook仓库关联即可)。</li>\n<li><code>可定制</code>：hexo默认/hexo主题中又很多可配置项，另外主题的源码是用pug模板写的，前端er易于上手更改</li>\n</ol>\n<h2 id=\"相关配置\"><a href=\"#相关配置\" class=\"headerlink\" title=\"相关配置\"></a>相关配置</h2><ul>\n<li>Hexo 主题：<a href=\"https://github.com/tufu9441/maupassant-hexo/\" target=\"_blank\" rel=\"noopener\">Maupassant Theme</a></li>\n<li>本博客代码仓库地址 <a href=\"https://github.com/scarsu/ScarSuHexo_Netlify\" target=\"_blank\" rel=\"noopener\">github scarsu/ScarSuHexo_Netlify</a></li>\n</ul>\n<h2 id=\"本地搭建步骤：\"><a href=\"#本地搭建步骤：\" class=\"headerlink\" title=\"本地搭建步骤：\"></a>本地搭建步骤：</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#克隆代码仓库到本地</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/scarsu/ScarSuHexo_Netlify.git</span><br><span class=\"line\"><span class=\"comment\">#全局安装hexo</span></span><br><span class=\"line\">npm install hexo -g </span><br><span class=\"line\"><span class=\"comment\">#安装相关依赖</span></span><br><span class=\"line\">npm install </span><br><span class=\"line\"><span class=\"comment\">#构建打包</span></span><br><span class=\"line\">hexo d -g </span><br><span class=\"line\"><span class=\"comment\">#运行本地服务器</span></span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n<h2 id=\"本站git仓库目录结构\"><a href=\"#本站git仓库目录结构\" class=\"headerlink\" title=\"本站git仓库目录结构\"></a>本站git仓库目录结构</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml    <span class=\"comment\">#网站配置</span></span><br><span class=\"line\">├── package.json    <span class=\"comment\">#npm包信息</span></span><br><span class=\"line\">├── scaffolds   <span class=\"comment\">#模板文件夹</span></span><br><span class=\"line\">├── public   <span class=\"comment\">#生成的静态资源文件夹（需要添加到.gitignore文件中）</span></span><br><span class=\"line\">├── node_modules   <span class=\"comment\">#项目依赖的node模块（需要添加到.gitignore文件中）</span></span><br><span class=\"line\">├── <span class=\"built_in\">source</span>      <span class=\"comment\">#资源文件夹</span></span><br><span class=\"line\">|   ├── _posts     <span class=\"comment\">#markown文档文件夹（日常更新md文章存放路径）</span></span><br><span class=\"line\">|   ├── _xx      <span class=\"comment\">#所有_开头的文件夹会被编译器忽略</span></span><br><span class=\"line\">|   └── xx      <span class=\"comment\">#不会被编译器识别的普通文件夹 但是会直接打包的资源目录 （可访问）</span></span><br><span class=\"line\">└── themes      <span class=\"comment\">#主题</span></span><br><span class=\"line\">    └── maupassant     <span class=\"comment\">#maupassant主题包</span></span><br><span class=\"line\">            ├── languages      <span class=\"comment\">#多语言文件</span></span><br><span class=\"line\">            ├── layout      <span class=\"comment\">#布局模板文件</span></span><br><span class=\"line\">            ├── <span class=\"built_in\">source</span>      <span class=\"comment\">#主题资源</span></span><br><span class=\"line\">            └── _config.yml      <span class=\"comment\">#主题配置</span></span><br></pre></td></tr></table></figure>\n<hr>\n<pre><code>免费 高效 自动部署 markdown友好。\n</code></pre>"},{"title":"高可定+低维护的博客搭建指南","date":"2018-12-07T16:00:00.000Z","description":"Markdown赛高d=====(￣▽￣*)b","toc":1,"top":0,"_content":"\n## 为什么要有博客\n\n博客之于程序员意义重大，因为，**输出**是一个程序员的基本素养和技能，**开源分享**是科学技术发展和人类社会进步的重要美德和推动力，而博客正是输出分享的重要途径之一。\n\n为什么输出分享对程序员来说十分重要，我有以下几点看法。\n\n-   从技术角度考虑，技术的提升依赖于专业知识的学习以及实际经验的积累，而人的大脑需要不断地进行重复记忆，才能将这些知识经验留在自己的知识库里。因此，无论是学习新知识还是通过实践得到的经验，有了即时的输出记录，才便于复盘与巩固。\n\n-   在实际工作中，当我们面临复杂大型的项目，和其中大量的代码时，如果只根据个人喜好而不根据代码规范去开发，写完后不留存开发文档以及接口文档，必然给项目的维护带来更高的代价，给团队中的其他开发者带来困扰。因此，代码规范和开发文档的输出也相当必要。\n\n如果你还不相信，坚持输出给程序员带来好处的例子很多，我随意举几个。\n\n-   例如 IT 圈出名的[阮一峰](http://www.ruanyifeng.com)，[张鑫旭](https://www.zhangxinxu.com/)，stormzhang(这位已经不再分享技术了)等等大佬，他们有今天这种影响力的一个重要因素就是输出分享；\n\n-   我也曾不止一次吸取前辈的经验以及建议，前端圈的[小爝](https://www.zhihu.com/people/xiao-jue-83/activities)大佬在知乎的某个[回答](https://www.zhihu.com/question/301802742/answer/528508203)当中提到过“长期坚持技术输出和总结分享”在找工作面试中是一个亮点和加分项；\n\n-   “前端桃园”公号的运营者桃翁也十分提倡坚持输出，他在他星球小圈子中给我们分享过他自己 因为坚持输出提升了影响力 而多次收到阿里面试邀请的经历。\n\n还有很多例子，不一一例举，分享本文的原因也就写到这，不再赘述。\n\n（当然输出分享的途径很多，本文以介绍博客为目的，如果选择其他途径可以忽略下文）\n\n## 如何选择博客\n\n现在网络上有各式各样的博客，有基于第三方的平台（如博客园、csdn 等）\n\n也有可供个人搭建的工具（如 Hexo、Ghost、wordpress、jekyll 等）\n\n自建博客的选择丰富多彩，选择一个最适合自己的最重要。\n\n作为一个博客，我最重视的有两个方面：\n\n1. 可自定义，可个性化。\n\n因为每个人追求的博客风格不同，想要展示的内容和格式也有所不同。\n\n2. 高效转化。\n\n我指的转化，是你的输出原文档 到 博客文本的转化，这一转化的过程对于想要存档原文，或不习惯于博客编辑器，不习惯于博客网页格式的人之分重要。\n\n我推崇用 markdown 来写笔记，因为 markdown 足够简约优雅，兼容性也十分强，\n\n> Markdown 是一种轻量级的「标记语言」，通常为程序员群体所用，目前它已是全球最大的技术分享网站 GitHub 和技术问答网站 StackOverFlow 的御用书写格式。\n>\n> 非技术类笔记用户，千万不要被「标记」、「语言」吓到，Markdown 的语法十分简单，常用的标记符号不超过十个，用于日常写作记录绰绰有余，不到半小时就能完全掌握。\n>\n> 就是这十个不到的标记符号，却能让人优雅地沉浸式记录，专注内容而不是纠结排版，达到「心中无尘，码字入神」的境界。\n\n因此今天推荐的博客搭建工具，就是[Hexo](https://hexo.io).\n\n-   通过 Hexo，你可以高定制化的 DIY 自己的博客（可以选择主题）\n-   搭建后，只需要将 md 文档源文件丢尽指定目录，输一个命令，hexo 就可以自动生成页面\n-   生成静态文件后，可以无需服务器+域名，直接将静态文件丢在 GithubPages 上即可\n\n## Hexo 博客搭建 & DIY & 使用指南\n\n> 具体 api 请看 hexo 官网文档，下面只分享搭建+DIY+使用流程\n\n1. 安装 node 和 git\n2. npm 安装 hexo 和相关依赖\n3. 根据 hexo 命令 初始化 博客文件夹，在 config 中添加博客相关信息和配置\n4. 在 hexo 官网/themes 选择相关主题，或使用默认主题，以我使用的简约主题[maupassant](https://github.com/tufu9441/maupassant-hexo)为例\n\n主题默认样式如图：\n\n![maupassant](/images/maupassant.jpg)\n\n5. 除了默认的首页/归档等 tab 页，可以在配置中添加更多 tab 页，tab 的内容也可以从 markdown 渲染。\n\n例如添加/Demo 分页，可以再配置文件中新增一项 tab 配置，在 source 文件夹下添加/demo/index.md 即可，可以在 post.pug 模板中更改 tab 分页渲染 index.md 的方式。\n\n配置:\n\n![hexo1](/images/hexo1.jpg)\n\npost.pug 模板代码:\n\n![hexo2](/images/hexo2.jpg)\n\n实现效果：\n\n![hexo3](/images/hexo3.jpg)\n\n6. 其他的各种折腾，其实原理都类似，找到对应的 pug 模板代码进行增删改即可，包括样式、脚本、内容。（注：pug，即前 jade，前端的一种模板引擎，api 参见[文档](https://pugjs.org)）\n7. 调试的过程也很方便，使用 hexo server 命令可以启动本地环境，并且会自动 watch 你的更改（包括配置+scss+pug 模板），并自动重新生成，这个过程也很快，大概一口茶不到的功夫。\n8. 搭建完成后，日常使用只需要将 md 源文件放入 source/\\_post 文件夹下，再运行一个简单的命令，即可自动生成+部署到 git\n\n```\nhexo generate --deploy\nhexo g -d\n```\n\n9. 一些其他的实用功能也很多，例如：根据 markdown#标题，自动生成 toc 目录；可以方便的引入各大评论网站的脚本，只需要账号，第三方存储评论留言不需要维护；引入百度/busuanzi 等的访问量统计；文章字数统计和预计阅读时间；等等很多，不一一例举。**总之 DIY 自由度极高，适合开发者**\n\n## 写在最后\n\n最近有一些感悟，以技术为目标的人，不要浮躁，莫逞他人嘴上快，莫争浮世虚功名，心无旁骛，沉下心来钻研技术就好。\n","source":"_posts/highly_configurable_low_maintenance_blog_build_guide.md","raw":"---\ntitle: 高可定+低维护的博客搭建指南\ncategories:\n    - hexo # 一级分类\ntags:\n    - blog\ndate: 2018-12-08\ndescription: Markdown赛高d=====(￣▽￣*)b\ntoc: 1\ntop: 0\n---\n\n## 为什么要有博客\n\n博客之于程序员意义重大，因为，**输出**是一个程序员的基本素养和技能，**开源分享**是科学技术发展和人类社会进步的重要美德和推动力，而博客正是输出分享的重要途径之一。\n\n为什么输出分享对程序员来说十分重要，我有以下几点看法。\n\n-   从技术角度考虑，技术的提升依赖于专业知识的学习以及实际经验的积累，而人的大脑需要不断地进行重复记忆，才能将这些知识经验留在自己的知识库里。因此，无论是学习新知识还是通过实践得到的经验，有了即时的输出记录，才便于复盘与巩固。\n\n-   在实际工作中，当我们面临复杂大型的项目，和其中大量的代码时，如果只根据个人喜好而不根据代码规范去开发，写完后不留存开发文档以及接口文档，必然给项目的维护带来更高的代价，给团队中的其他开发者带来困扰。因此，代码规范和开发文档的输出也相当必要。\n\n如果你还不相信，坚持输出给程序员带来好处的例子很多，我随意举几个。\n\n-   例如 IT 圈出名的[阮一峰](http://www.ruanyifeng.com)，[张鑫旭](https://www.zhangxinxu.com/)，stormzhang(这位已经不再分享技术了)等等大佬，他们有今天这种影响力的一个重要因素就是输出分享；\n\n-   我也曾不止一次吸取前辈的经验以及建议，前端圈的[小爝](https://www.zhihu.com/people/xiao-jue-83/activities)大佬在知乎的某个[回答](https://www.zhihu.com/question/301802742/answer/528508203)当中提到过“长期坚持技术输出和总结分享”在找工作面试中是一个亮点和加分项；\n\n-   “前端桃园”公号的运营者桃翁也十分提倡坚持输出，他在他星球小圈子中给我们分享过他自己 因为坚持输出提升了影响力 而多次收到阿里面试邀请的经历。\n\n还有很多例子，不一一例举，分享本文的原因也就写到这，不再赘述。\n\n（当然输出分享的途径很多，本文以介绍博客为目的，如果选择其他途径可以忽略下文）\n\n## 如何选择博客\n\n现在网络上有各式各样的博客，有基于第三方的平台（如博客园、csdn 等）\n\n也有可供个人搭建的工具（如 Hexo、Ghost、wordpress、jekyll 等）\n\n自建博客的选择丰富多彩，选择一个最适合自己的最重要。\n\n作为一个博客，我最重视的有两个方面：\n\n1. 可自定义，可个性化。\n\n因为每个人追求的博客风格不同，想要展示的内容和格式也有所不同。\n\n2. 高效转化。\n\n我指的转化，是你的输出原文档 到 博客文本的转化，这一转化的过程对于想要存档原文，或不习惯于博客编辑器，不习惯于博客网页格式的人之分重要。\n\n我推崇用 markdown 来写笔记，因为 markdown 足够简约优雅，兼容性也十分强，\n\n> Markdown 是一种轻量级的「标记语言」，通常为程序员群体所用，目前它已是全球最大的技术分享网站 GitHub 和技术问答网站 StackOverFlow 的御用书写格式。\n>\n> 非技术类笔记用户，千万不要被「标记」、「语言」吓到，Markdown 的语法十分简单，常用的标记符号不超过十个，用于日常写作记录绰绰有余，不到半小时就能完全掌握。\n>\n> 就是这十个不到的标记符号，却能让人优雅地沉浸式记录，专注内容而不是纠结排版，达到「心中无尘，码字入神」的境界。\n\n因此今天推荐的博客搭建工具，就是[Hexo](https://hexo.io).\n\n-   通过 Hexo，你可以高定制化的 DIY 自己的博客（可以选择主题）\n-   搭建后，只需要将 md 文档源文件丢尽指定目录，输一个命令，hexo 就可以自动生成页面\n-   生成静态文件后，可以无需服务器+域名，直接将静态文件丢在 GithubPages 上即可\n\n## Hexo 博客搭建 & DIY & 使用指南\n\n> 具体 api 请看 hexo 官网文档，下面只分享搭建+DIY+使用流程\n\n1. 安装 node 和 git\n2. npm 安装 hexo 和相关依赖\n3. 根据 hexo 命令 初始化 博客文件夹，在 config 中添加博客相关信息和配置\n4. 在 hexo 官网/themes 选择相关主题，或使用默认主题，以我使用的简约主题[maupassant](https://github.com/tufu9441/maupassant-hexo)为例\n\n主题默认样式如图：\n\n![maupassant](/images/maupassant.jpg)\n\n5. 除了默认的首页/归档等 tab 页，可以在配置中添加更多 tab 页，tab 的内容也可以从 markdown 渲染。\n\n例如添加/Demo 分页，可以再配置文件中新增一项 tab 配置，在 source 文件夹下添加/demo/index.md 即可，可以在 post.pug 模板中更改 tab 分页渲染 index.md 的方式。\n\n配置:\n\n![hexo1](/images/hexo1.jpg)\n\npost.pug 模板代码:\n\n![hexo2](/images/hexo2.jpg)\n\n实现效果：\n\n![hexo3](/images/hexo3.jpg)\n\n6. 其他的各种折腾，其实原理都类似，找到对应的 pug 模板代码进行增删改即可，包括样式、脚本、内容。（注：pug，即前 jade，前端的一种模板引擎，api 参见[文档](https://pugjs.org)）\n7. 调试的过程也很方便，使用 hexo server 命令可以启动本地环境，并且会自动 watch 你的更改（包括配置+scss+pug 模板），并自动重新生成，这个过程也很快，大概一口茶不到的功夫。\n8. 搭建完成后，日常使用只需要将 md 源文件放入 source/\\_post 文件夹下，再运行一个简单的命令，即可自动生成+部署到 git\n\n```\nhexo generate --deploy\nhexo g -d\n```\n\n9. 一些其他的实用功能也很多，例如：根据 markdown#标题，自动生成 toc 目录；可以方便的引入各大评论网站的脚本，只需要账号，第三方存储评论留言不需要维护；引入百度/busuanzi 等的访问量统计；文章字数统计和预计阅读时间；等等很多，不一一例举。**总之 DIY 自由度极高，适合开发者**\n\n## 写在最后\n\n最近有一些感悟，以技术为目标的人，不要浮躁，莫逞他人嘴上快，莫争浮世虚功名，心无旁骛，沉下心来钻研技术就好。\n","slug":"highly_configurable_low_maintenance_blog_build_guide","published":1,"updated":"2019-07-05T05:00:34.000Z","_id":"cjxtyumql000qhbghrp89vd3f","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"为什么要有博客\"><a href=\"#为什么要有博客\" class=\"headerlink\" title=\"为什么要有博客\"></a>为什么要有博客</h2><p>博客之于程序员意义重大，因为，<strong>输出</strong>是一个程序员的基本素养和技能，<strong>开源分享</strong>是科学技术发展和人类社会进步的重要美德和推动力，而博客正是输出分享的重要途径之一。</p>\n<p>为什么输出分享对程序员来说十分重要，我有以下几点看法。</p>\n<ul>\n<li><p>从技术角度考虑，技术的提升依赖于专业知识的学习以及实际经验的积累，而人的大脑需要不断地进行重复记忆，才能将这些知识经验留在自己的知识库里。因此，无论是学习新知识还是通过实践得到的经验，有了即时的输出记录，才便于复盘与巩固。</p>\n</li>\n<li><p>在实际工作中，当我们面临复杂大型的项目，和其中大量的代码时，如果只根据个人喜好而不根据代码规范去开发，写完后不留存开发文档以及接口文档，必然给项目的维护带来更高的代价，给团队中的其他开发者带来困扰。因此，代码规范和开发文档的输出也相当必要。</p>\n</li>\n</ul>\n<p>如果你还不相信，坚持输出给程序员带来好处的例子很多，我随意举几个。</p>\n<ul>\n<li><p>例如 IT 圈出名的<a href=\"http://www.ruanyifeng.com\" target=\"_blank\" rel=\"noopener\">阮一峰</a>，<a href=\"https://www.zhangxinxu.com/\" target=\"_blank\" rel=\"noopener\">张鑫旭</a>，stormzhang(这位已经不再分享技术了)等等大佬，他们有今天这种影响力的一个重要因素就是输出分享；</p>\n</li>\n<li><p>我也曾不止一次吸取前辈的经验以及建议，前端圈的<a href=\"https://www.zhihu.com/people/xiao-jue-83/activities\" target=\"_blank\" rel=\"noopener\">小爝</a>大佬在知乎的某个<a href=\"https://www.zhihu.com/question/301802742/answer/528508203\" target=\"_blank\" rel=\"noopener\">回答</a>当中提到过“长期坚持技术输出和总结分享”在找工作面试中是一个亮点和加分项；</p>\n</li>\n<li><p>“前端桃园”公号的运营者桃翁也十分提倡坚持输出，他在他星球小圈子中给我们分享过他自己 因为坚持输出提升了影响力 而多次收到阿里面试邀请的经历。</p>\n</li>\n</ul>\n<p>还有很多例子，不一一例举，分享本文的原因也就写到这，不再赘述。</p>\n<p>（当然输出分享的途径很多，本文以介绍博客为目的，如果选择其他途径可以忽略下文）</p>\n<h2 id=\"如何选择博客\"><a href=\"#如何选择博客\" class=\"headerlink\" title=\"如何选择博客\"></a>如何选择博客</h2><p>现在网络上有各式各样的博客，有基于第三方的平台（如博客园、csdn 等）</p>\n<p>也有可供个人搭建的工具（如 Hexo、Ghost、wordpress、jekyll 等）</p>\n<p>自建博客的选择丰富多彩，选择一个最适合自己的最重要。</p>\n<p>作为一个博客，我最重视的有两个方面：</p>\n<ol>\n<li>可自定义，可个性化。</li>\n</ol>\n<p>因为每个人追求的博客风格不同，想要展示的内容和格式也有所不同。</p>\n<ol start=\"2\">\n<li>高效转化。</li>\n</ol>\n<p>我指的转化，是你的输出原文档 到 博客文本的转化，这一转化的过程对于想要存档原文，或不习惯于博客编辑器，不习惯于博客网页格式的人之分重要。</p>\n<p>我推崇用 markdown 来写笔记，因为 markdown 足够简约优雅，兼容性也十分强，</p>\n<blockquote>\n<p>Markdown 是一种轻量级的「标记语言」，通常为程序员群体所用，目前它已是全球最大的技术分享网站 GitHub 和技术问答网站 StackOverFlow 的御用书写格式。</p>\n<p>非技术类笔记用户，千万不要被「标记」、「语言」吓到，Markdown 的语法十分简单，常用的标记符号不超过十个，用于日常写作记录绰绰有余，不到半小时就能完全掌握。</p>\n<p>就是这十个不到的标记符号，却能让人优雅地沉浸式记录，专注内容而不是纠结排版，达到「心中无尘，码字入神」的境界。</p>\n</blockquote>\n<p>因此今天推荐的博客搭建工具，就是<a href=\"https://hexo.io\" target=\"_blank\" rel=\"noopener\">Hexo</a>.</p>\n<ul>\n<li>通过 Hexo，你可以高定制化的 DIY 自己的博客（可以选择主题）</li>\n<li>搭建后，只需要将 md 文档源文件丢尽指定目录，输一个命令，hexo 就可以自动生成页面</li>\n<li>生成静态文件后，可以无需服务器+域名，直接将静态文件丢在 GithubPages 上即可</li>\n</ul>\n<h2 id=\"Hexo-博客搭建-amp-DIY-amp-使用指南\"><a href=\"#Hexo-博客搭建-amp-DIY-amp-使用指南\" class=\"headerlink\" title=\"Hexo 博客搭建 &amp; DIY &amp; 使用指南\"></a>Hexo 博客搭建 &amp; DIY &amp; 使用指南</h2><blockquote>\n<p>具体 api 请看 hexo 官网文档，下面只分享搭建+DIY+使用流程</p>\n</blockquote>\n<ol>\n<li>安装 node 和 git</li>\n<li>npm 安装 hexo 和相关依赖</li>\n<li>根据 hexo 命令 初始化 博客文件夹，在 config 中添加博客相关信息和配置</li>\n<li>在 hexo 官网/themes 选择相关主题，或使用默认主题，以我使用的简约主题<a href=\"https://github.com/tufu9441/maupassant-hexo\" target=\"_blank\" rel=\"noopener\">maupassant</a>为例</li>\n</ol>\n<p>主题默认样式如图：</p>\n<p><img src=\"/images/maupassant.jpg\" alt=\"maupassant\"></p>\n<ol start=\"5\">\n<li>除了默认的首页/归档等 tab 页，可以在配置中添加更多 tab 页，tab 的内容也可以从 markdown 渲染。</li>\n</ol>\n<p>例如添加/Demo 分页，可以再配置文件中新增一项 tab 配置，在 source 文件夹下添加/demo/index.md 即可，可以在 post.pug 模板中更改 tab 分页渲染 index.md 的方式。</p>\n<p>配置:</p>\n<p><img src=\"/images/hexo1.jpg\" alt=\"hexo1\"></p>\n<p>post.pug 模板代码:</p>\n<p><img src=\"/images/hexo2.jpg\" alt=\"hexo2\"></p>\n<p>实现效果：</p>\n<p><img src=\"/images/hexo3.jpg\" alt=\"hexo3\"></p>\n<ol start=\"6\">\n<li>其他的各种折腾，其实原理都类似，找到对应的 pug 模板代码进行增删改即可，包括样式、脚本、内容。（注：pug，即前 jade，前端的一种模板引擎，api 参见<a href=\"https://pugjs.org\" target=\"_blank\" rel=\"noopener\">文档</a>）</li>\n<li>调试的过程也很方便，使用 hexo server 命令可以启动本地环境，并且会自动 watch 你的更改（包括配置+scss+pug 模板），并自动重新生成，这个过程也很快，大概一口茶不到的功夫。</li>\n<li>搭建完成后，日常使用只需要将 md 源文件放入 source/_post 文件夹下，再运行一个简单的命令，即可自动生成+部署到 git</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate --deploy</span><br><span class=\"line\">hexo g -d</span><br></pre></td></tr></table></figure>\n<ol start=\"9\">\n<li>一些其他的实用功能也很多，例如：根据 markdown#标题，自动生成 toc 目录；可以方便的引入各大评论网站的脚本，只需要账号，第三方存储评论留言不需要维护；引入百度/busuanzi 等的访问量统计；文章字数统计和预计阅读时间；等等很多，不一一例举。<strong>总之 DIY 自由度极高，适合开发者</strong></li>\n</ol>\n<h2 id=\"写在最后\"><a href=\"#写在最后\" class=\"headerlink\" title=\"写在最后\"></a>写在最后</h2><p>最近有一些感悟，以技术为目标的人，不要浮躁，莫逞他人嘴上快，莫争浮世虚功名，心无旁骛，沉下心来钻研技术就好。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"为什么要有博客\"><a href=\"#为什么要有博客\" class=\"headerlink\" title=\"为什么要有博客\"></a>为什么要有博客</h2><p>博客之于程序员意义重大，因为，<strong>输出</strong>是一个程序员的基本素养和技能，<strong>开源分享</strong>是科学技术发展和人类社会进步的重要美德和推动力，而博客正是输出分享的重要途径之一。</p>\n<p>为什么输出分享对程序员来说十分重要，我有以下几点看法。</p>\n<ul>\n<li><p>从技术角度考虑，技术的提升依赖于专业知识的学习以及实际经验的积累，而人的大脑需要不断地进行重复记忆，才能将这些知识经验留在自己的知识库里。因此，无论是学习新知识还是通过实践得到的经验，有了即时的输出记录，才便于复盘与巩固。</p>\n</li>\n<li><p>在实际工作中，当我们面临复杂大型的项目，和其中大量的代码时，如果只根据个人喜好而不根据代码规范去开发，写完后不留存开发文档以及接口文档，必然给项目的维护带来更高的代价，给团队中的其他开发者带来困扰。因此，代码规范和开发文档的输出也相当必要。</p>\n</li>\n</ul>\n<p>如果你还不相信，坚持输出给程序员带来好处的例子很多，我随意举几个。</p>\n<ul>\n<li><p>例如 IT 圈出名的<a href=\"http://www.ruanyifeng.com\" target=\"_blank\" rel=\"noopener\">阮一峰</a>，<a href=\"https://www.zhangxinxu.com/\" target=\"_blank\" rel=\"noopener\">张鑫旭</a>，stormzhang(这位已经不再分享技术了)等等大佬，他们有今天这种影响力的一个重要因素就是输出分享；</p>\n</li>\n<li><p>我也曾不止一次吸取前辈的经验以及建议，前端圈的<a href=\"https://www.zhihu.com/people/xiao-jue-83/activities\" target=\"_blank\" rel=\"noopener\">小爝</a>大佬在知乎的某个<a href=\"https://www.zhihu.com/question/301802742/answer/528508203\" target=\"_blank\" rel=\"noopener\">回答</a>当中提到过“长期坚持技术输出和总结分享”在找工作面试中是一个亮点和加分项；</p>\n</li>\n<li><p>“前端桃园”公号的运营者桃翁也十分提倡坚持输出，他在他星球小圈子中给我们分享过他自己 因为坚持输出提升了影响力 而多次收到阿里面试邀请的经历。</p>\n</li>\n</ul>\n<p>还有很多例子，不一一例举，分享本文的原因也就写到这，不再赘述。</p>\n<p>（当然输出分享的途径很多，本文以介绍博客为目的，如果选择其他途径可以忽略下文）</p>\n<h2 id=\"如何选择博客\"><a href=\"#如何选择博客\" class=\"headerlink\" title=\"如何选择博客\"></a>如何选择博客</h2><p>现在网络上有各式各样的博客，有基于第三方的平台（如博客园、csdn 等）</p>\n<p>也有可供个人搭建的工具（如 Hexo、Ghost、wordpress、jekyll 等）</p>\n<p>自建博客的选择丰富多彩，选择一个最适合自己的最重要。</p>\n<p>作为一个博客，我最重视的有两个方面：</p>\n<ol>\n<li>可自定义，可个性化。</li>\n</ol>\n<p>因为每个人追求的博客风格不同，想要展示的内容和格式也有所不同。</p>\n<ol start=\"2\">\n<li>高效转化。</li>\n</ol>\n<p>我指的转化，是你的输出原文档 到 博客文本的转化，这一转化的过程对于想要存档原文，或不习惯于博客编辑器，不习惯于博客网页格式的人之分重要。</p>\n<p>我推崇用 markdown 来写笔记，因为 markdown 足够简约优雅，兼容性也十分强，</p>\n<blockquote>\n<p>Markdown 是一种轻量级的「标记语言」，通常为程序员群体所用，目前它已是全球最大的技术分享网站 GitHub 和技术问答网站 StackOverFlow 的御用书写格式。</p>\n<p>非技术类笔记用户，千万不要被「标记」、「语言」吓到，Markdown 的语法十分简单，常用的标记符号不超过十个，用于日常写作记录绰绰有余，不到半小时就能完全掌握。</p>\n<p>就是这十个不到的标记符号，却能让人优雅地沉浸式记录，专注内容而不是纠结排版，达到「心中无尘，码字入神」的境界。</p>\n</blockquote>\n<p>因此今天推荐的博客搭建工具，就是<a href=\"https://hexo.io\" target=\"_blank\" rel=\"noopener\">Hexo</a>.</p>\n<ul>\n<li>通过 Hexo，你可以高定制化的 DIY 自己的博客（可以选择主题）</li>\n<li>搭建后，只需要将 md 文档源文件丢尽指定目录，输一个命令，hexo 就可以自动生成页面</li>\n<li>生成静态文件后，可以无需服务器+域名，直接将静态文件丢在 GithubPages 上即可</li>\n</ul>\n<h2 id=\"Hexo-博客搭建-amp-DIY-amp-使用指南\"><a href=\"#Hexo-博客搭建-amp-DIY-amp-使用指南\" class=\"headerlink\" title=\"Hexo 博客搭建 &amp; DIY &amp; 使用指南\"></a>Hexo 博客搭建 &amp; DIY &amp; 使用指南</h2><blockquote>\n<p>具体 api 请看 hexo 官网文档，下面只分享搭建+DIY+使用流程</p>\n</blockquote>\n<ol>\n<li>安装 node 和 git</li>\n<li>npm 安装 hexo 和相关依赖</li>\n<li>根据 hexo 命令 初始化 博客文件夹，在 config 中添加博客相关信息和配置</li>\n<li>在 hexo 官网/themes 选择相关主题，或使用默认主题，以我使用的简约主题<a href=\"https://github.com/tufu9441/maupassant-hexo\" target=\"_blank\" rel=\"noopener\">maupassant</a>为例</li>\n</ol>\n<p>主题默认样式如图：</p>\n<p><img src=\"/images/maupassant.jpg\" alt=\"maupassant\"></p>\n<ol start=\"5\">\n<li>除了默认的首页/归档等 tab 页，可以在配置中添加更多 tab 页，tab 的内容也可以从 markdown 渲染。</li>\n</ol>\n<p>例如添加/Demo 分页，可以再配置文件中新增一项 tab 配置，在 source 文件夹下添加/demo/index.md 即可，可以在 post.pug 模板中更改 tab 分页渲染 index.md 的方式。</p>\n<p>配置:</p>\n<p><img src=\"/images/hexo1.jpg\" alt=\"hexo1\"></p>\n<p>post.pug 模板代码:</p>\n<p><img src=\"/images/hexo2.jpg\" alt=\"hexo2\"></p>\n<p>实现效果：</p>\n<p><img src=\"/images/hexo3.jpg\" alt=\"hexo3\"></p>\n<ol start=\"6\">\n<li>其他的各种折腾，其实原理都类似，找到对应的 pug 模板代码进行增删改即可，包括样式、脚本、内容。（注：pug，即前 jade，前端的一种模板引擎，api 参见<a href=\"https://pugjs.org\" target=\"_blank\" rel=\"noopener\">文档</a>）</li>\n<li>调试的过程也很方便，使用 hexo server 命令可以启动本地环境，并且会自动 watch 你的更改（包括配置+scss+pug 模板），并自动重新生成，这个过程也很快，大概一口茶不到的功夫。</li>\n<li>搭建完成后，日常使用只需要将 md 源文件放入 source/_post 文件夹下，再运行一个简单的命令，即可自动生成+部署到 git</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate --deploy</span><br><span class=\"line\">hexo g -d</span><br></pre></td></tr></table></figure>\n<ol start=\"9\">\n<li>一些其他的实用功能也很多，例如：根据 markdown#标题，自动生成 toc 目录；可以方便的引入各大评论网站的脚本，只需要账号，第三方存储评论留言不需要维护；引入百度/busuanzi 等的访问量统计；文章字数统计和预计阅读时间；等等很多，不一一例举。<strong>总之 DIY 自由度极高，适合开发者</strong></li>\n</ol>\n<h2 id=\"写在最后\"><a href=\"#写在最后\" class=\"headerlink\" title=\"写在最后\"></a>写在最后</h2><p>最近有一些感悟，以技术为目标的人，不要浮躁，莫逞他人嘴上快，莫争浮世虚功名，心无旁骛，沉下心来钻研技术就好。</p>\n"},{"title":"MongoDB配置","date":"2018-03-05T16:00:00.000Z","description":"MongoDB被我选来做毕设的数据库，在此记录配置过程。","toc":1,"top":0,"_content":"\n## 官网下载安装\n\n    （我版本3.0.15\n    [官网下载地址](https://www.mongodb.com/download-center?jmp=nav)\n\n## 安装路径\n\n    将C:\\Program Files\\MongoDB\\Server\\3.0\\bin(windows下的默认路径)添加到环境变量\n    即可在任何位置使用\n    mongo   使用数据库\n    mongod  开机\n    mongoimport  导入数据\n\n## 新建\n\n    C:\\data\\db路径作为数据库\n\n## 开机 cmd 命令：\n\n    mongod --dbpath c:\\data\\db\n    （保持该cmd窗口才能正常运行mongodb）\n    （其他数据操作另外开cmd）\n    --dbpath是选择数据库文档所在文件夹\n    即，mongodb中数据库有物理文件\n\n## use\n\n    use 数据库名字\n    使用一个数据库\n    如果想新建数据库，也是use。use一个不存在的，就是新建。\n\n## 查看当前所在数据库\n\n    db\n\n## 插入数据\n\n    数据库中不能直接插入数据，\n    只能往集合(collections)中插入数据\n    db.userid.insert({\"id\":\"zengsuyu\",\"password\":\"123456789\"});\n    此处的userid就是集合\n\n## 删除当前所在的数据库\n\n    db.dropDatabase();\n\n## 导入外部 json 数据\n\n    用sublime在外部写好json数据库的形式，然后导入数据库：\n    -db 数据库名（选择数据库\n    --collection 集合名（ 选择集合\n    --drop （把集合清空\n    --file json文件名（选择要导入的json文件\n\n## 查找数据:\n\n    db.集合名.find() （列出所有数据\n    db.集合名.find({\"key\":\"value\"})  (精确匹配key为value值的数据\n    db.集合名.find().sort(\"\")  （升降排序\n\n## mongoose\n\n    不用直接操作数据库，操作对象，对象自动持久\n\n-   连接 Mongo 数据库\n\n```\nvar mongoose = require('mongoose');\nvar db = mongoose.connect('mongodb://localhost/geekChat');//；连接数据库\n```\n\n-   监听 open 事件\n\n```\ndb.once('open', function (callback) {\n    console.log(\"数据库成功连接\");\n});\n```\n\n-   创建类\n\n```\n//创建了一个模型。猫的模型。所有的猫，都有名字，是字符串。“类”。\nvar Cat = mongoose.model('Cat', { name: String });\n//实例化一只猫\nvar kitty = new Cat({ name: 'Zildjian' });\n//调用这只猫的save方法，保存这只猫\nkitty.save(function (err) {\n  console.log('喵喵喵');\n});\n```\n\n-   创建模型\n\n```\nvar Schema = mongoose.Schema;\nvar userScheMa = new Schema({\n    name: String,\n    password: String\n}); //  定义了一个新的模型，但是此模式还未和users集合有关联\nexports.user = db.model('user', userScheMa); //  与users集合关联\n\nref 数据表关联\n```\n\n---\n\n    这次不皮了\n","source":"_posts/mongoDB_configuration.md","raw":"---\ntitle: MongoDB配置\ncategories:\n    - mongodb\ntags:\n    - mongodb\n    - mongoose\ndate: 2018-03-06\ndescription: MongoDB被我选来做毕设的数据库，在此记录配置过程。\ntoc: 1\ntop: 0\n---\n\n## 官网下载安装\n\n    （我版本3.0.15\n    [官网下载地址](https://www.mongodb.com/download-center?jmp=nav)\n\n## 安装路径\n\n    将C:\\Program Files\\MongoDB\\Server\\3.0\\bin(windows下的默认路径)添加到环境变量\n    即可在任何位置使用\n    mongo   使用数据库\n    mongod  开机\n    mongoimport  导入数据\n\n## 新建\n\n    C:\\data\\db路径作为数据库\n\n## 开机 cmd 命令：\n\n    mongod --dbpath c:\\data\\db\n    （保持该cmd窗口才能正常运行mongodb）\n    （其他数据操作另外开cmd）\n    --dbpath是选择数据库文档所在文件夹\n    即，mongodb中数据库有物理文件\n\n## use\n\n    use 数据库名字\n    使用一个数据库\n    如果想新建数据库，也是use。use一个不存在的，就是新建。\n\n## 查看当前所在数据库\n\n    db\n\n## 插入数据\n\n    数据库中不能直接插入数据，\n    只能往集合(collections)中插入数据\n    db.userid.insert({\"id\":\"zengsuyu\",\"password\":\"123456789\"});\n    此处的userid就是集合\n\n## 删除当前所在的数据库\n\n    db.dropDatabase();\n\n## 导入外部 json 数据\n\n    用sublime在外部写好json数据库的形式，然后导入数据库：\n    -db 数据库名（选择数据库\n    --collection 集合名（ 选择集合\n    --drop （把集合清空\n    --file json文件名（选择要导入的json文件\n\n## 查找数据:\n\n    db.集合名.find() （列出所有数据\n    db.集合名.find({\"key\":\"value\"})  (精确匹配key为value值的数据\n    db.集合名.find().sort(\"\")  （升降排序\n\n## mongoose\n\n    不用直接操作数据库，操作对象，对象自动持久\n\n-   连接 Mongo 数据库\n\n```\nvar mongoose = require('mongoose');\nvar db = mongoose.connect('mongodb://localhost/geekChat');//；连接数据库\n```\n\n-   监听 open 事件\n\n```\ndb.once('open', function (callback) {\n    console.log(\"数据库成功连接\");\n});\n```\n\n-   创建类\n\n```\n//创建了一个模型。猫的模型。所有的猫，都有名字，是字符串。“类”。\nvar Cat = mongoose.model('Cat', { name: String });\n//实例化一只猫\nvar kitty = new Cat({ name: 'Zildjian' });\n//调用这只猫的save方法，保存这只猫\nkitty.save(function (err) {\n  console.log('喵喵喵');\n});\n```\n\n-   创建模型\n\n```\nvar Schema = mongoose.Schema;\nvar userScheMa = new Schema({\n    name: String,\n    password: String\n}); //  定义了一个新的模型，但是此模式还未和users集合有关联\nexports.user = db.model('user', userScheMa); //  与users集合关联\n\nref 数据表关联\n```\n\n---\n\n    这次不皮了\n","slug":"mongoDB_configuration","published":1,"updated":"2019-07-05T05:00:34.000Z","_id":"cjxtyumqs000rhbghujvt4e2d","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"官网下载安装\"><a href=\"#官网下载安装\" class=\"headerlink\" title=\"官网下载安装\"></a>官网下载安装</h2><pre><code>（我版本3.0.15\n[官网下载地址](https://www.mongodb.com/download-center?jmp=nav)\n</code></pre><h2 id=\"安装路径\"><a href=\"#安装路径\" class=\"headerlink\" title=\"安装路径\"></a>安装路径</h2><pre><code>将C:\\Program Files\\MongoDB\\Server\\3.0\\bin(windows下的默认路径)添加到环境变量\n即可在任何位置使用\nmongo   使用数据库\nmongod  开机\nmongoimport  导入数据\n</code></pre><h2 id=\"新建\"><a href=\"#新建\" class=\"headerlink\" title=\"新建\"></a>新建</h2><pre><code>C:\\data\\db路径作为数据库\n</code></pre><h2 id=\"开机-cmd-命令：\"><a href=\"#开机-cmd-命令：\" class=\"headerlink\" title=\"开机 cmd 命令：\"></a>开机 cmd 命令：</h2><pre><code>mongod --dbpath c:\\data\\db\n（保持该cmd窗口才能正常运行mongodb）\n（其他数据操作另外开cmd）\n--dbpath是选择数据库文档所在文件夹\n即，mongodb中数据库有物理文件\n</code></pre><h2 id=\"use\"><a href=\"#use\" class=\"headerlink\" title=\"use\"></a>use</h2><pre><code>use 数据库名字\n使用一个数据库\n如果想新建数据库，也是use。use一个不存在的，就是新建。\n</code></pre><h2 id=\"查看当前所在数据库\"><a href=\"#查看当前所在数据库\" class=\"headerlink\" title=\"查看当前所在数据库\"></a>查看当前所在数据库</h2><pre><code>db\n</code></pre><h2 id=\"插入数据\"><a href=\"#插入数据\" class=\"headerlink\" title=\"插入数据\"></a>插入数据</h2><pre><code>数据库中不能直接插入数据，\n只能往集合(collections)中插入数据\ndb.userid.insert({&quot;id&quot;:&quot;zengsuyu&quot;,&quot;password&quot;:&quot;123456789&quot;});\n此处的userid就是集合\n</code></pre><h2 id=\"删除当前所在的数据库\"><a href=\"#删除当前所在的数据库\" class=\"headerlink\" title=\"删除当前所在的数据库\"></a>删除当前所在的数据库</h2><pre><code>db.dropDatabase();\n</code></pre><h2 id=\"导入外部-json-数据\"><a href=\"#导入外部-json-数据\" class=\"headerlink\" title=\"导入外部 json 数据\"></a>导入外部 json 数据</h2><pre><code>用sublime在外部写好json数据库的形式，然后导入数据库：\n-db 数据库名（选择数据库\n--collection 集合名（ 选择集合\n--drop （把集合清空\n--file json文件名（选择要导入的json文件\n</code></pre><h2 id=\"查找数据\"><a href=\"#查找数据\" class=\"headerlink\" title=\"查找数据:\"></a>查找数据:</h2><pre><code>db.集合名.find() （列出所有数据\ndb.集合名.find({&quot;key&quot;:&quot;value&quot;})  (精确匹配key为value值的数据\ndb.集合名.find().sort(&quot;&quot;)  （升降排序\n</code></pre><h2 id=\"mongoose\"><a href=\"#mongoose\" class=\"headerlink\" title=\"mongoose\"></a>mongoose</h2><pre><code>不用直接操作数据库，操作对象，对象自动持久\n</code></pre><ul>\n<li>连接 Mongo 数据库</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var mongoose = require(&apos;mongoose&apos;);</span><br><span class=\"line\">var db = mongoose.connect(&apos;mongodb://localhost/geekChat&apos;);//；连接数据库</span><br></pre></td></tr></table></figure>\n<ul>\n<li>监听 open 事件</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.once(&apos;open&apos;, function (callback) &#123;</span><br><span class=\"line\">    console.log(&quot;数据库成功连接&quot;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>创建类</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//创建了一个模型。猫的模型。所有的猫，都有名字，是字符串。“类”。</span><br><span class=\"line\">var Cat = mongoose.model(&apos;Cat&apos;, &#123; name: String &#125;);</span><br><span class=\"line\">//实例化一只猫</span><br><span class=\"line\">var kitty = new Cat(&#123; name: &apos;Zildjian&apos; &#125;);</span><br><span class=\"line\">//调用这只猫的save方法，保存这只猫</span><br><span class=\"line\">kitty.save(function (err) &#123;</span><br><span class=\"line\">  console.log(&apos;喵喵喵&apos;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>创建模型</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var Schema = mongoose.Schema;</span><br><span class=\"line\">var userScheMa = new Schema(&#123;</span><br><span class=\"line\">    name: String,</span><br><span class=\"line\">    password: String</span><br><span class=\"line\">&#125;); //  定义了一个新的模型，但是此模式还未和users集合有关联</span><br><span class=\"line\">exports.user = db.model(&apos;user&apos;, userScheMa); //  与users集合关联</span><br><span class=\"line\"></span><br><span class=\"line\">ref 数据表关联</span><br></pre></td></tr></table></figure>\n<hr>\n<pre><code>这次不皮了\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"官网下载安装\"><a href=\"#官网下载安装\" class=\"headerlink\" title=\"官网下载安装\"></a>官网下载安装</h2><pre><code>（我版本3.0.15\n[官网下载地址](https://www.mongodb.com/download-center?jmp=nav)\n</code></pre><h2 id=\"安装路径\"><a href=\"#安装路径\" class=\"headerlink\" title=\"安装路径\"></a>安装路径</h2><pre><code>将C:\\Program Files\\MongoDB\\Server\\3.0\\bin(windows下的默认路径)添加到环境变量\n即可在任何位置使用\nmongo   使用数据库\nmongod  开机\nmongoimport  导入数据\n</code></pre><h2 id=\"新建\"><a href=\"#新建\" class=\"headerlink\" title=\"新建\"></a>新建</h2><pre><code>C:\\data\\db路径作为数据库\n</code></pre><h2 id=\"开机-cmd-命令：\"><a href=\"#开机-cmd-命令：\" class=\"headerlink\" title=\"开机 cmd 命令：\"></a>开机 cmd 命令：</h2><pre><code>mongod --dbpath c:\\data\\db\n（保持该cmd窗口才能正常运行mongodb）\n（其他数据操作另外开cmd）\n--dbpath是选择数据库文档所在文件夹\n即，mongodb中数据库有物理文件\n</code></pre><h2 id=\"use\"><a href=\"#use\" class=\"headerlink\" title=\"use\"></a>use</h2><pre><code>use 数据库名字\n使用一个数据库\n如果想新建数据库，也是use。use一个不存在的，就是新建。\n</code></pre><h2 id=\"查看当前所在数据库\"><a href=\"#查看当前所在数据库\" class=\"headerlink\" title=\"查看当前所在数据库\"></a>查看当前所在数据库</h2><pre><code>db\n</code></pre><h2 id=\"插入数据\"><a href=\"#插入数据\" class=\"headerlink\" title=\"插入数据\"></a>插入数据</h2><pre><code>数据库中不能直接插入数据，\n只能往集合(collections)中插入数据\ndb.userid.insert({&quot;id&quot;:&quot;zengsuyu&quot;,&quot;password&quot;:&quot;123456789&quot;});\n此处的userid就是集合\n</code></pre><h2 id=\"删除当前所在的数据库\"><a href=\"#删除当前所在的数据库\" class=\"headerlink\" title=\"删除当前所在的数据库\"></a>删除当前所在的数据库</h2><pre><code>db.dropDatabase();\n</code></pre><h2 id=\"导入外部-json-数据\"><a href=\"#导入外部-json-数据\" class=\"headerlink\" title=\"导入外部 json 数据\"></a>导入外部 json 数据</h2><pre><code>用sublime在外部写好json数据库的形式，然后导入数据库：\n-db 数据库名（选择数据库\n--collection 集合名（ 选择集合\n--drop （把集合清空\n--file json文件名（选择要导入的json文件\n</code></pre><h2 id=\"查找数据\"><a href=\"#查找数据\" class=\"headerlink\" title=\"查找数据:\"></a>查找数据:</h2><pre><code>db.集合名.find() （列出所有数据\ndb.集合名.find({&quot;key&quot;:&quot;value&quot;})  (精确匹配key为value值的数据\ndb.集合名.find().sort(&quot;&quot;)  （升降排序\n</code></pre><h2 id=\"mongoose\"><a href=\"#mongoose\" class=\"headerlink\" title=\"mongoose\"></a>mongoose</h2><pre><code>不用直接操作数据库，操作对象，对象自动持久\n</code></pre><ul>\n<li>连接 Mongo 数据库</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var mongoose = require(&apos;mongoose&apos;);</span><br><span class=\"line\">var db = mongoose.connect(&apos;mongodb://localhost/geekChat&apos;);//；连接数据库</span><br></pre></td></tr></table></figure>\n<ul>\n<li>监听 open 事件</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.once(&apos;open&apos;, function (callback) &#123;</span><br><span class=\"line\">    console.log(&quot;数据库成功连接&quot;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>创建类</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//创建了一个模型。猫的模型。所有的猫，都有名字，是字符串。“类”。</span><br><span class=\"line\">var Cat = mongoose.model(&apos;Cat&apos;, &#123; name: String &#125;);</span><br><span class=\"line\">//实例化一只猫</span><br><span class=\"line\">var kitty = new Cat(&#123; name: &apos;Zildjian&apos; &#125;);</span><br><span class=\"line\">//调用这只猫的save方法，保存这只猫</span><br><span class=\"line\">kitty.save(function (err) &#123;</span><br><span class=\"line\">  console.log(&apos;喵喵喵&apos;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>创建模型</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var Schema = mongoose.Schema;</span><br><span class=\"line\">var userScheMa = new Schema(&#123;</span><br><span class=\"line\">    name: String,</span><br><span class=\"line\">    password: String</span><br><span class=\"line\">&#125;); //  定义了一个新的模型，但是此模式还未和users集合有关联</span><br><span class=\"line\">exports.user = db.model(&apos;user&apos;, userScheMa); //  与users集合关联</span><br><span class=\"line\"></span><br><span class=\"line\">ref 数据表关联</span><br></pre></td></tr></table></figure>\n<hr>\n<pre><code>这次不皮了\n</code></pre>"},{"title":"Node版本管理工具 nvm for windows","date":"2018-09-28T16:00:00.000Z","description":"node版本更新那么快，怎么才能在机子上多装几版node？还能一句命令切换？","toc":1,"top":0,"_content":"\n# nvm\n\n只支持 linux 和 cent os\n\n# nvm for windows\n\n[https://github.com/coreybutler/nvm-windows/releases](https://github.com/coreybutler/nvm-windows/releases)\n\n# 安装\n\n    0. 安装前卸载干净已经有的node\n    1. 设置nvm安装路径（不能有空格，否则nvm use 报错）\n    2. 设置node路径（当前使用的node的存放路径，会被添加到环境变量）\n\n# 常用命令\n\n```\nnvm list -当前安装的node版本\nnvm list available -可获取的版本\nnvm install xx.xx.xx -安装某版本node\nnvm use xx.xx.xx -使用某版本node\nnvm uninstall xx.xx.xx -卸载某版本node\n```\n\n# 其他命令\n\n```\nnvm arch -查看当前系统位数\nnvm on/off -打开/关闭nvm（好像并没有什么区别\nnvm proxy [url] -设置代理下载地址\nnvm root [path] -nvm安装路径\nnvm node_mirror [url] -node下载库路径\nnvm npm_mirror [url] -npm下载库路径\n```\n\n---\n\n    “重点是node为什么更新那么快？”\n","source":"_posts/nvm_for_windows.md","raw":"---\ntitle: Node版本管理工具 nvm for windows\ncategories:\n    - node # 一级分类\ntags:\n    - node\n    - nvm\ndate: 2018-09-29\ndescription: node版本更新那么快，怎么才能在机子上多装几版node？还能一句命令切换？\ntoc: 1\ntop: 0\n---\n\n# nvm\n\n只支持 linux 和 cent os\n\n# nvm for windows\n\n[https://github.com/coreybutler/nvm-windows/releases](https://github.com/coreybutler/nvm-windows/releases)\n\n# 安装\n\n    0. 安装前卸载干净已经有的node\n    1. 设置nvm安装路径（不能有空格，否则nvm use 报错）\n    2. 设置node路径（当前使用的node的存放路径，会被添加到环境变量）\n\n# 常用命令\n\n```\nnvm list -当前安装的node版本\nnvm list available -可获取的版本\nnvm install xx.xx.xx -安装某版本node\nnvm use xx.xx.xx -使用某版本node\nnvm uninstall xx.xx.xx -卸载某版本node\n```\n\n# 其他命令\n\n```\nnvm arch -查看当前系统位数\nnvm on/off -打开/关闭nvm（好像并没有什么区别\nnvm proxy [url] -设置代理下载地址\nnvm root [path] -nvm安装路径\nnvm node_mirror [url] -node下载库路径\nnvm npm_mirror [url] -npm下载库路径\n```\n\n---\n\n    “重点是node为什么更新那么快？”\n","slug":"nvm_for_windows","published":1,"updated":"2019-07-05T05:00:34.000Z","_id":"cjxtyumqt000vhbgh93mzupk4","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"nvm\"><a href=\"#nvm\" class=\"headerlink\" title=\"nvm\"></a>nvm</h1><p>只支持 linux 和 cent os</p>\n<h1 id=\"nvm-for-windows\"><a href=\"#nvm-for-windows\" class=\"headerlink\" title=\"nvm for windows\"></a>nvm for windows</h1><p><a href=\"https://github.com/coreybutler/nvm-windows/releases\" target=\"_blank\" rel=\"noopener\">https://github.com/coreybutler/nvm-windows/releases</a></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><pre><code>0. 安装前卸载干净已经有的node\n1. 设置nvm安装路径（不能有空格，否则nvm use 报错）\n2. 设置node路径（当前使用的node的存放路径，会被添加到环境变量）\n</code></pre><h1 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm list -当前安装的node版本</span><br><span class=\"line\">nvm list available -可获取的版本</span><br><span class=\"line\">nvm install xx.xx.xx -安装某版本node</span><br><span class=\"line\">nvm use xx.xx.xx -使用某版本node</span><br><span class=\"line\">nvm uninstall xx.xx.xx -卸载某版本node</span><br></pre></td></tr></table></figure>\n<h1 id=\"其他命令\"><a href=\"#其他命令\" class=\"headerlink\" title=\"其他命令\"></a>其他命令</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm arch -查看当前系统位数</span><br><span class=\"line\">nvm on/off -打开/关闭nvm（好像并没有什么区别</span><br><span class=\"line\">nvm proxy [url] -设置代理下载地址</span><br><span class=\"line\">nvm root [path] -nvm安装路径</span><br><span class=\"line\">nvm node_mirror [url] -node下载库路径</span><br><span class=\"line\">nvm npm_mirror [url] -npm下载库路径</span><br></pre></td></tr></table></figure>\n<hr>\n<pre><code>“重点是node为什么更新那么快？”\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"nvm\"><a href=\"#nvm\" class=\"headerlink\" title=\"nvm\"></a>nvm</h1><p>只支持 linux 和 cent os</p>\n<h1 id=\"nvm-for-windows\"><a href=\"#nvm-for-windows\" class=\"headerlink\" title=\"nvm for windows\"></a>nvm for windows</h1><p><a href=\"https://github.com/coreybutler/nvm-windows/releases\" target=\"_blank\" rel=\"noopener\">https://github.com/coreybutler/nvm-windows/releases</a></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><pre><code>0. 安装前卸载干净已经有的node\n1. 设置nvm安装路径（不能有空格，否则nvm use 报错）\n2. 设置node路径（当前使用的node的存放路径，会被添加到环境变量）\n</code></pre><h1 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm list -当前安装的node版本</span><br><span class=\"line\">nvm list available -可获取的版本</span><br><span class=\"line\">nvm install xx.xx.xx -安装某版本node</span><br><span class=\"line\">nvm use xx.xx.xx -使用某版本node</span><br><span class=\"line\">nvm uninstall xx.xx.xx -卸载某版本node</span><br></pre></td></tr></table></figure>\n<h1 id=\"其他命令\"><a href=\"#其他命令\" class=\"headerlink\" title=\"其他命令\"></a>其他命令</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm arch -查看当前系统位数</span><br><span class=\"line\">nvm on/off -打开/关闭nvm（好像并没有什么区别</span><br><span class=\"line\">nvm proxy [url] -设置代理下载地址</span><br><span class=\"line\">nvm root [path] -nvm安装路径</span><br><span class=\"line\">nvm node_mirror [url] -node下载库路径</span><br><span class=\"line\">nvm npm_mirror [url] -npm下载库路径</span><br></pre></td></tr></table></figure>\n<hr>\n<pre><code>“重点是node为什么更新那么快？”\n</code></pre>"},{"title":"Animate.css","date":"2018-01-31T16:00:00.000Z","description":"Animate.css是一个来自国外的 CSS3 动画库。","toc":1,"top":0,"_content":"\n## 功能\n\n-   它预设了抖动（shake）\n-   闪烁（flash）\n-   弹跳（bounce）\n-   翻转（flip）\n-   旋转（rotateIn/rotateOut）\n-   淡入淡出（fadeIn/fadeOut）\n-   等多达 60 多种动画效果\n\n## 浏览器兼容：\n\n    只兼容支持 CSS3 animate 属性的浏览器，\n    分别是：IE10+、Firefox、Chrome、Opera、Safari。\n\n## 引入文件\n\n    <link rel=\"stylesheet\" href=\"animate.min.css\">\n\n## 官网\n\n    [Animate.css](https://daneden.github.io/animate.css/)\n\n    [Github](https://github.com/daneden/animate.css)\n\n## 使用\n\n```\n\t<h1 class=\"animated infinite bounce delay-2s\">Example</h1>\n```\n\n-   首先给元素加上 animated 类\n-   第二个 infinate 使动画无限播放，可选\n-   第三个 bounce 是具体的动画效果名称，[全部动效演示](https://daneden.github.io/animate.css/)\n-   第四个 delay-2s 是动效延迟播放 2s，可选\n\n## 通过 Js,Jq 给元素添加 class：\n\n```\n\t$(function(){\n    \t$('#dowebok').addClass('animated bounce');\n\t});\n```\n\n## 更改 animate.css 的默认设置：\n\n```\n\t#dowebok {\n\t    animate-duration: 2s;    //动画持续时间\n\t    animate-delay: 1s;    //动画延迟时间\n\t    animate-iteration-count: 2;    //动画执行次数\n\t}\n\t//兼容各种浏览器代码，需要添加各浏览器前缀：\n\t#dowebok{\n          -webkit-animation-duration: 3s;\n          -webkit-animation-delay: 4s;\n          -webkit-animation-iteration-count: 5;\n\n          -moz-animation-duration: 3s;\n          -moz-animation-delay: 4s;\n          -moz-animation-iteration-count: 5;\n\n          -o-animation-duration: 3s;\n          -o-animation-delay: 4s;\n          -0-animation-iteration-count: 5;\n\n          -ms-animation-duration: 3s;\n          -ms-animation-delay: 4s;\n          -ms-animation-iteration-count:5;\n\n          animation-duration: 3s;\n          animation-delay: 4s;\n          animation-iteration-count: 5;\n\t}\n```\n\n## 动画结束触发函数：\n\n```js\n\t$(\".test\").click(function(){\n          $(this).addClass('animated fadeOut');\n\t});\n\tvar animateEnd=(function(el){\n\t    var animations={\n\t        animation:'animationend',\n\t        OAnimation:'oAnimationEnd',\n\t        MozAnimation:'mozAnimationEnd'\n\t        WebktiAnimation:'webkitAnimationEnd'\n\t    }\n\t    for(var i in animations){\n\t        if(el.style[i]!==undefined){\n\t            return animations[i]\n\t        }\n\t    }\n\t})(document.createElement('div'));//通过任意元素检测浏览器内核类型\n\t$('.test').one(animateEnd, doSomething);\n\t//$.one():为元素的特定事件绑定一个一次性的事件处理函数。\n```\n\n## 将以上过程整合为 Jq 扩展函数\n\n```\njq自定义函数\n$.fn.extend({\n    animateCss: function (animationName, callback) {\n        var animationEnd = (function (el) {\n            var animations = {\n                animation: 'animationend',\n                OAnimation: 'oAnimationEnd',\n                MozAnimation: 'mozAnimationEnd',\n                WebkitAnimation: 'webkitAnimationEnd',\n            };\n            for (var t in animations) {\n                if (el.style[t] !== undefined) {\n                    return animations[t];\n                }\n            }\n        })(document.createElement('div'));\n        this.addClass('animated ' + animationName).one(animationEnd, function () {\n            //某些动画效果执行完后元素不可见又需要这个元素（实际遇过这个问题）\n            //eg.淡出、向左滑动等等，\n\t        //可能需要将 class 删除\n            $(this).removeClass('animated ' + animationName);\n            if (typeof callback === 'function') callback();\n        });\n        return this;\n    },\n});\n$('#yourElement').animateCss('bounce');\n$('#yourElement').animateCss('bounce', function () {\n    // 事件结束触发的函数\n});\n```\n\n---\n\n    为什么不自己写动画？\n    别人比你写的好啊小辣鸡。\n","source":"_posts/Animate.css.md","raw":"---\ntitle: Animate.css\ncategories:\n    - css # 一级分类\ntags:\n    - css\ndate: 2018-02-01\ndescription: Animate.css是一个来自国外的 CSS3 动画库。\ntoc: 1\ntop: 0\n---\n\n## 功能\n\n-   它预设了抖动（shake）\n-   闪烁（flash）\n-   弹跳（bounce）\n-   翻转（flip）\n-   旋转（rotateIn/rotateOut）\n-   淡入淡出（fadeIn/fadeOut）\n-   等多达 60 多种动画效果\n\n## 浏览器兼容：\n\n    只兼容支持 CSS3 animate 属性的浏览器，\n    分别是：IE10+、Firefox、Chrome、Opera、Safari。\n\n## 引入文件\n\n    <link rel=\"stylesheet\" href=\"animate.min.css\">\n\n## 官网\n\n    [Animate.css](https://daneden.github.io/animate.css/)\n\n    [Github](https://github.com/daneden/animate.css)\n\n## 使用\n\n```\n\t<h1 class=\"animated infinite bounce delay-2s\">Example</h1>\n```\n\n-   首先给元素加上 animated 类\n-   第二个 infinate 使动画无限播放，可选\n-   第三个 bounce 是具体的动画效果名称，[全部动效演示](https://daneden.github.io/animate.css/)\n-   第四个 delay-2s 是动效延迟播放 2s，可选\n\n## 通过 Js,Jq 给元素添加 class：\n\n```\n\t$(function(){\n    \t$('#dowebok').addClass('animated bounce');\n\t});\n```\n\n## 更改 animate.css 的默认设置：\n\n```\n\t#dowebok {\n\t    animate-duration: 2s;    //动画持续时间\n\t    animate-delay: 1s;    //动画延迟时间\n\t    animate-iteration-count: 2;    //动画执行次数\n\t}\n\t//兼容各种浏览器代码，需要添加各浏览器前缀：\n\t#dowebok{\n          -webkit-animation-duration: 3s;\n          -webkit-animation-delay: 4s;\n          -webkit-animation-iteration-count: 5;\n\n          -moz-animation-duration: 3s;\n          -moz-animation-delay: 4s;\n          -moz-animation-iteration-count: 5;\n\n          -o-animation-duration: 3s;\n          -o-animation-delay: 4s;\n          -0-animation-iteration-count: 5;\n\n          -ms-animation-duration: 3s;\n          -ms-animation-delay: 4s;\n          -ms-animation-iteration-count:5;\n\n          animation-duration: 3s;\n          animation-delay: 4s;\n          animation-iteration-count: 5;\n\t}\n```\n\n## 动画结束触发函数：\n\n```js\n\t$(\".test\").click(function(){\n          $(this).addClass('animated fadeOut');\n\t});\n\tvar animateEnd=(function(el){\n\t    var animations={\n\t        animation:'animationend',\n\t        OAnimation:'oAnimationEnd',\n\t        MozAnimation:'mozAnimationEnd'\n\t        WebktiAnimation:'webkitAnimationEnd'\n\t    }\n\t    for(var i in animations){\n\t        if(el.style[i]!==undefined){\n\t            return animations[i]\n\t        }\n\t    }\n\t})(document.createElement('div'));//通过任意元素检测浏览器内核类型\n\t$('.test').one(animateEnd, doSomething);\n\t//$.one():为元素的特定事件绑定一个一次性的事件处理函数。\n```\n\n## 将以上过程整合为 Jq 扩展函数\n\n```\njq自定义函数\n$.fn.extend({\n    animateCss: function (animationName, callback) {\n        var animationEnd = (function (el) {\n            var animations = {\n                animation: 'animationend',\n                OAnimation: 'oAnimationEnd',\n                MozAnimation: 'mozAnimationEnd',\n                WebkitAnimation: 'webkitAnimationEnd',\n            };\n            for (var t in animations) {\n                if (el.style[t] !== undefined) {\n                    return animations[t];\n                }\n            }\n        })(document.createElement('div'));\n        this.addClass('animated ' + animationName).one(animationEnd, function () {\n            //某些动画效果执行完后元素不可见又需要这个元素（实际遇过这个问题）\n            //eg.淡出、向左滑动等等，\n\t        //可能需要将 class 删除\n            $(this).removeClass('animated ' + animationName);\n            if (typeof callback === 'function') callback();\n        });\n        return this;\n    },\n});\n$('#yourElement').animateCss('bounce');\n$('#yourElement').animateCss('bounce', function () {\n    // 事件结束触发的函数\n});\n```\n\n---\n\n    为什么不自己写动画？\n    别人比你写的好啊小辣鸡。\n","slug":"Animate.css","published":1,"updated":"2019-07-05T05:00:34.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxx6lm4w0000s5ghoo619vne","content":"<h2 id=\"功能\"><a href=\"#功能\" class=\"headerlink\" title=\"功能\"></a>功能</h2><ul>\n<li>它预设了抖动（shake）</li>\n<li>闪烁（flash）</li>\n<li>弹跳（bounce）</li>\n<li>翻转（flip）</li>\n<li>旋转（rotateIn/rotateOut）</li>\n<li>淡入淡出（fadeIn/fadeOut）</li>\n<li>等多达 60 多种动画效果</li>\n</ul>\n<h2 id=\"浏览器兼容：\"><a href=\"#浏览器兼容：\" class=\"headerlink\" title=\"浏览器兼容：\"></a>浏览器兼容：</h2><pre><code>只兼容支持 CSS3 animate 属性的浏览器，\n分别是：IE10+、Firefox、Chrome、Opera、Safari。\n</code></pre><h2 id=\"引入文件\"><a href=\"#引入文件\" class=\"headerlink\" title=\"引入文件\"></a>引入文件</h2><pre><code>&lt;link rel=&quot;stylesheet&quot; href=&quot;animate.min.css&quot;&gt;\n</code></pre><h2 id=\"官网\"><a href=\"#官网\" class=\"headerlink\" title=\"官网\"></a>官网</h2><pre><code>[Animate.css](https://daneden.github.io/animate.css/)\n\n[Github](https://github.com/daneden/animate.css)\n</code></pre><h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;h1 class=&quot;animated infinite bounce delay-2s&quot;&gt;Example&lt;/h1&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>首先给元素加上 animated 类</li>\n<li>第二个 infinate 使动画无限播放，可选</li>\n<li>第三个 bounce 是具体的动画效果名称，<a href=\"https://daneden.github.io/animate.css/\" target=\"_blank\" rel=\"noopener\">全部动效演示</a></li>\n<li>第四个 delay-2s 是动效延迟播放 2s，可选</li>\n</ul>\n<h2 id=\"通过-Js-Jq-给元素添加-class：\"><a href=\"#通过-Js-Jq-给元素添加-class：\" class=\"headerlink\" title=\"通过 Js,Jq 给元素添加 class：\"></a>通过 Js,Jq 给元素添加 class：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(function()&#123;</span><br><span class=\"line\">   \t$(&apos;#dowebok&apos;).addClass(&apos;animated bounce&apos;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"更改-animate-css-的默认设置：\"><a href=\"#更改-animate-css-的默认设置：\" class=\"headerlink\" title=\"更改 animate.css 的默认设置：\"></a>更改 animate.css 的默认设置：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#dowebok &#123;</span><br><span class=\"line\">    animate-duration: 2s;    //动画持续时间</span><br><span class=\"line\">    animate-delay: 1s;    //动画延迟时间</span><br><span class=\"line\">    animate-iteration-count: 2;    //动画执行次数</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//兼容各种浏览器代码，需要添加各浏览器前缀：</span><br><span class=\"line\">#dowebok&#123;</span><br><span class=\"line\">         -webkit-animation-duration: 3s;</span><br><span class=\"line\">         -webkit-animation-delay: 4s;</span><br><span class=\"line\">         -webkit-animation-iteration-count: 5;</span><br><span class=\"line\"></span><br><span class=\"line\">         -moz-animation-duration: 3s;</span><br><span class=\"line\">         -moz-animation-delay: 4s;</span><br><span class=\"line\">         -moz-animation-iteration-count: 5;</span><br><span class=\"line\"></span><br><span class=\"line\">         -o-animation-duration: 3s;</span><br><span class=\"line\">         -o-animation-delay: 4s;</span><br><span class=\"line\">         -0-animation-iteration-count: 5;</span><br><span class=\"line\"></span><br><span class=\"line\">         -ms-animation-duration: 3s;</span><br><span class=\"line\">         -ms-animation-delay: 4s;</span><br><span class=\"line\">         -ms-animation-iteration-count:5;</span><br><span class=\"line\"></span><br><span class=\"line\">         animation-duration: 3s;</span><br><span class=\"line\">         animation-delay: 4s;</span><br><span class=\"line\">         animation-iteration-count: 5;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"动画结束触发函数：\"><a href=\"#动画结束触发函数：\" class=\"headerlink\" title=\"动画结束触发函数：\"></a>动画结束触发函数：</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\".test\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">         $(<span class=\"keyword\">this</span>).addClass(<span class=\"string\">'animated fadeOut'</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"keyword\">var</span> animateEnd=(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">el</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> animations=&#123;</span><br><span class=\"line\">        animation:<span class=\"string\">'animationend'</span>,</span><br><span class=\"line\">        OAnimation:<span class=\"string\">'oAnimationEnd'</span>,</span><br><span class=\"line\">        MozAnimation:<span class=\"string\">'mozAnimationEnd'</span></span><br><span class=\"line\">        WebktiAnimation:<span class=\"string\">'webkitAnimationEnd'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i <span class=\"keyword\">in</span> animations)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(el.style[i]!==<span class=\"literal\">undefined</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> animations[i]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)(<span class=\"built_in\">document</span>.createElement(<span class=\"string\">'div'</span>));<span class=\"comment\">//通过任意元素检测浏览器内核类型</span></span><br><span class=\"line\">$(<span class=\"string\">'.test'</span>).one(animateEnd, doSomething);</span><br><span class=\"line\"><span class=\"comment\">//$.one():为元素的特定事件绑定一个一次性的事件处理函数。</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"将以上过程整合为-Jq-扩展函数\"><a href=\"#将以上过程整合为-Jq-扩展函数\" class=\"headerlink\" title=\"将以上过程整合为 Jq 扩展函数\"></a>将以上过程整合为 Jq 扩展函数</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jq自定义函数</span><br><span class=\"line\">$.fn.extend(&#123;</span><br><span class=\"line\">    animateCss: function (animationName, callback) &#123;</span><br><span class=\"line\">        var animationEnd = (function (el) &#123;</span><br><span class=\"line\">            var animations = &#123;</span><br><span class=\"line\">                animation: &apos;animationend&apos;,</span><br><span class=\"line\">                OAnimation: &apos;oAnimationEnd&apos;,</span><br><span class=\"line\">                MozAnimation: &apos;mozAnimationEnd&apos;,</span><br><span class=\"line\">                WebkitAnimation: &apos;webkitAnimationEnd&apos;,</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\">            for (var t in animations) &#123;</span><br><span class=\"line\">                if (el.style[t] !== undefined) &#123;</span><br><span class=\"line\">                    return animations[t];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)(document.createElement(&apos;div&apos;));</span><br><span class=\"line\">        this.addClass(&apos;animated &apos; + animationName).one(animationEnd, function () &#123;</span><br><span class=\"line\">            //某些动画效果执行完后元素不可见又需要这个元素（实际遇过这个问题）</span><br><span class=\"line\">            //eg.淡出、向左滑动等等，</span><br><span class=\"line\">\t        //可能需要将 class 删除</span><br><span class=\"line\">            $(this).removeClass(&apos;animated &apos; + animationName);</span><br><span class=\"line\">            if (typeof callback === &apos;function&apos;) callback();</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        return this;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">$(&apos;#yourElement&apos;).animateCss(&apos;bounce&apos;);</span><br><span class=\"line\">$(&apos;#yourElement&apos;).animateCss(&apos;bounce&apos;, function () &#123;</span><br><span class=\"line\">    // 事件结束触发的函数</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<hr>\n<pre><code>为什么不自己写动画？\n别人比你写的好啊小辣鸡。\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"功能\"><a href=\"#功能\" class=\"headerlink\" title=\"功能\"></a>功能</h2><ul>\n<li>它预设了抖动（shake）</li>\n<li>闪烁（flash）</li>\n<li>弹跳（bounce）</li>\n<li>翻转（flip）</li>\n<li>旋转（rotateIn/rotateOut）</li>\n<li>淡入淡出（fadeIn/fadeOut）</li>\n<li>等多达 60 多种动画效果</li>\n</ul>\n<h2 id=\"浏览器兼容：\"><a href=\"#浏览器兼容：\" class=\"headerlink\" title=\"浏览器兼容：\"></a>浏览器兼容：</h2><pre><code>只兼容支持 CSS3 animate 属性的浏览器，\n分别是：IE10+、Firefox、Chrome、Opera、Safari。\n</code></pre><h2 id=\"引入文件\"><a href=\"#引入文件\" class=\"headerlink\" title=\"引入文件\"></a>引入文件</h2><pre><code>&lt;link rel=&quot;stylesheet&quot; href=&quot;animate.min.css&quot;&gt;\n</code></pre><h2 id=\"官网\"><a href=\"#官网\" class=\"headerlink\" title=\"官网\"></a>官网</h2><pre><code>[Animate.css](https://daneden.github.io/animate.css/)\n\n[Github](https://github.com/daneden/animate.css)\n</code></pre><h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;h1 class=&quot;animated infinite bounce delay-2s&quot;&gt;Example&lt;/h1&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>首先给元素加上 animated 类</li>\n<li>第二个 infinate 使动画无限播放，可选</li>\n<li>第三个 bounce 是具体的动画效果名称，<a href=\"https://daneden.github.io/animate.css/\" target=\"_blank\" rel=\"noopener\">全部动效演示</a></li>\n<li>第四个 delay-2s 是动效延迟播放 2s，可选</li>\n</ul>\n<h2 id=\"通过-Js-Jq-给元素添加-class：\"><a href=\"#通过-Js-Jq-给元素添加-class：\" class=\"headerlink\" title=\"通过 Js,Jq 给元素添加 class：\"></a>通过 Js,Jq 给元素添加 class：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(function()&#123;</span><br><span class=\"line\">   \t$(&apos;#dowebok&apos;).addClass(&apos;animated bounce&apos;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"更改-animate-css-的默认设置：\"><a href=\"#更改-animate-css-的默认设置：\" class=\"headerlink\" title=\"更改 animate.css 的默认设置：\"></a>更改 animate.css 的默认设置：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#dowebok &#123;</span><br><span class=\"line\">    animate-duration: 2s;    //动画持续时间</span><br><span class=\"line\">    animate-delay: 1s;    //动画延迟时间</span><br><span class=\"line\">    animate-iteration-count: 2;    //动画执行次数</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//兼容各种浏览器代码，需要添加各浏览器前缀：</span><br><span class=\"line\">#dowebok&#123;</span><br><span class=\"line\">         -webkit-animation-duration: 3s;</span><br><span class=\"line\">         -webkit-animation-delay: 4s;</span><br><span class=\"line\">         -webkit-animation-iteration-count: 5;</span><br><span class=\"line\"></span><br><span class=\"line\">         -moz-animation-duration: 3s;</span><br><span class=\"line\">         -moz-animation-delay: 4s;</span><br><span class=\"line\">         -moz-animation-iteration-count: 5;</span><br><span class=\"line\"></span><br><span class=\"line\">         -o-animation-duration: 3s;</span><br><span class=\"line\">         -o-animation-delay: 4s;</span><br><span class=\"line\">         -0-animation-iteration-count: 5;</span><br><span class=\"line\"></span><br><span class=\"line\">         -ms-animation-duration: 3s;</span><br><span class=\"line\">         -ms-animation-delay: 4s;</span><br><span class=\"line\">         -ms-animation-iteration-count:5;</span><br><span class=\"line\"></span><br><span class=\"line\">         animation-duration: 3s;</span><br><span class=\"line\">         animation-delay: 4s;</span><br><span class=\"line\">         animation-iteration-count: 5;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"动画结束触发函数：\"><a href=\"#动画结束触发函数：\" class=\"headerlink\" title=\"动画结束触发函数：\"></a>动画结束触发函数：</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">\".test\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">         $(<span class=\"keyword\">this</span>).addClass(<span class=\"string\">'animated fadeOut'</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"keyword\">var</span> animateEnd=(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">el</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> animations=&#123;</span><br><span class=\"line\">        animation:<span class=\"string\">'animationend'</span>,</span><br><span class=\"line\">        OAnimation:<span class=\"string\">'oAnimationEnd'</span>,</span><br><span class=\"line\">        MozAnimation:<span class=\"string\">'mozAnimationEnd'</span></span><br><span class=\"line\">        WebktiAnimation:<span class=\"string\">'webkitAnimationEnd'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i <span class=\"keyword\">in</span> animations)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(el.style[i]!==<span class=\"literal\">undefined</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> animations[i]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)(<span class=\"built_in\">document</span>.createElement(<span class=\"string\">'div'</span>));<span class=\"comment\">//通过任意元素检测浏览器内核类型</span></span><br><span class=\"line\">$(<span class=\"string\">'.test'</span>).one(animateEnd, doSomething);</span><br><span class=\"line\"><span class=\"comment\">//$.one():为元素的特定事件绑定一个一次性的事件处理函数。</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"将以上过程整合为-Jq-扩展函数\"><a href=\"#将以上过程整合为-Jq-扩展函数\" class=\"headerlink\" title=\"将以上过程整合为 Jq 扩展函数\"></a>将以上过程整合为 Jq 扩展函数</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jq自定义函数</span><br><span class=\"line\">$.fn.extend(&#123;</span><br><span class=\"line\">    animateCss: function (animationName, callback) &#123;</span><br><span class=\"line\">        var animationEnd = (function (el) &#123;</span><br><span class=\"line\">            var animations = &#123;</span><br><span class=\"line\">                animation: &apos;animationend&apos;,</span><br><span class=\"line\">                OAnimation: &apos;oAnimationEnd&apos;,</span><br><span class=\"line\">                MozAnimation: &apos;mozAnimationEnd&apos;,</span><br><span class=\"line\">                WebkitAnimation: &apos;webkitAnimationEnd&apos;,</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\">            for (var t in animations) &#123;</span><br><span class=\"line\">                if (el.style[t] !== undefined) &#123;</span><br><span class=\"line\">                    return animations[t];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)(document.createElement(&apos;div&apos;));</span><br><span class=\"line\">        this.addClass(&apos;animated &apos; + animationName).one(animationEnd, function () &#123;</span><br><span class=\"line\">            //某些动画效果执行完后元素不可见又需要这个元素（实际遇过这个问题）</span><br><span class=\"line\">            //eg.淡出、向左滑动等等，</span><br><span class=\"line\">\t        //可能需要将 class 删除</span><br><span class=\"line\">            $(this).removeClass(&apos;animated &apos; + animationName);</span><br><span class=\"line\">            if (typeof callback === &apos;function&apos;) callback();</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        return this;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">$(&apos;#yourElement&apos;).animateCss(&apos;bounce&apos;);</span><br><span class=\"line\">$(&apos;#yourElement&apos;).animateCss(&apos;bounce&apos;, function () &#123;</span><br><span class=\"line\">    // 事件结束触发的函数</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<hr>\n<pre><code>为什么不自己写动画？\n别人比你写的好啊小辣鸡。\n</code></pre>"},{"title":"Fullpage.js","date":"2018-04-18T16:00:00.000Z","description":"fullPage.js 是一个基于 jQuery 的插件。","toc":1,"top":0,"_content":"\n## 主要功能有：\n\n-   支持鼠标滚动\n-   支持前进后退和键盘控制\n-   多个回调函数\n-   支持手机、平板触摸事件\n-   支持 CSS3 动画\n-   支持窗口缩放\n-   窗口缩放时自动调整\n-   可设置滚动宽度、背景颜色、滚动速度、 循环选项、回调、文本对齐方式等等\n\n## 兼容性\n\n    jQuery 兼容:\n    兼容 jQuery 1.7+。\n\n    浏览器兼容:\n    IE8+ ✔\tChrome ✔\tFirefox ✔\tOpera ✔\tSafari ✔\n\n## 引入文件\n\n```\n<link rel=\"stylesheet\" href=\"css/jquery.fullPage.css\">\n<script src=\"js/jquery.fullPage.js\"></script>\n<script src=\"js/jquery.min.js\"></script>\n<!-- jquery.easings.min.js 用于 easing 参数，也可以使用完整的 jQuery UI 代替，如果不需要设置 easing 参数，可去掉改文件 -->\n<script src=\"js/jquery.easings.min.js\"></script>\n<!-- 如果 scrollOverflow 设置为 true，则需要引入 jquery.slimscroll.min.js，一般情况下不需要 -->\n<script src=\"js/jquery.slimscroll.min.js\"></script>\n```\n\n## HTML\n\n```\n\t<div id=\"dowebok\">\n\t    <div class=\"section\">\n\t        <h3>第一屏</h3>\n\t    </div>\n\t    <div class=\"section\">\n\t        <h3>第二屏</h3>\n\t    </div>\n\t    <div class=\"section\">\n\t        <h3>第三屏</h3>\n\t    </div>\n\t    <div class=\"section\">\n\t        <h3>第四屏</h3>\n\t    </div>\n\t</div>\n\t每个 section 代表一屏，默认显示“第一屏”，如果要指定加载页面时显示的“屏幕”，可以在对应的 section 加上 class=”active”，如：\n\n\t<div class=\"section active\">第三屏</div>\n\n\t同时，可以在 section 内加入 slide，如：\n\n\t<div id=\"dowebok\">\n\t    <div class=\"section\">第一屏</div>\n\t    <div class=\"section\">第二屏</div>\n\t    <div class=\"section\">\n\t        <div class=\"slide\">第三屏的第一屏</div>\n\t        <div class=\"slide\">第三屏的第二屏</div>\n\t        <div class=\"slide\">第三屏的第三屏</div>\n\t        <div class=\"slide\">第三屏的第四屏</div>\n\t    </div>\n\t    <div class=\"section\">第四屏</div>\n\t</div>\n\n### JavaScript\n``\n\t$(function(){\n\t    $('#dowebok').fullpage();\n\t});\n```\n\n## 详细配置见官方文档\n\n[Fullpage.js-Github](https://github.com/alvarotrigo/fullPage.js/tree/master/lang/chinese#fullpagejs)\n\n---\n\n    皮不动了...\n","source":"_posts/Fullpage.js.md","raw":"---\ntitle: Fullpage.js\ncategories:\n    - js # 一级分类\ntags:\n    - js\n    - FullPage.js\ndate: 2018-04-19\ndescription: fullPage.js 是一个基于 jQuery 的插件。\ntoc: 1\ntop: 0\n---\n\n## 主要功能有：\n\n-   支持鼠标滚动\n-   支持前进后退和键盘控制\n-   多个回调函数\n-   支持手机、平板触摸事件\n-   支持 CSS3 动画\n-   支持窗口缩放\n-   窗口缩放时自动调整\n-   可设置滚动宽度、背景颜色、滚动速度、 循环选项、回调、文本对齐方式等等\n\n## 兼容性\n\n    jQuery 兼容:\n    兼容 jQuery 1.7+。\n\n    浏览器兼容:\n    IE8+ ✔\tChrome ✔\tFirefox ✔\tOpera ✔\tSafari ✔\n\n## 引入文件\n\n```\n<link rel=\"stylesheet\" href=\"css/jquery.fullPage.css\">\n<script src=\"js/jquery.fullPage.js\"></script>\n<script src=\"js/jquery.min.js\"></script>\n<!-- jquery.easings.min.js 用于 easing 参数，也可以使用完整的 jQuery UI 代替，如果不需要设置 easing 参数，可去掉改文件 -->\n<script src=\"js/jquery.easings.min.js\"></script>\n<!-- 如果 scrollOverflow 设置为 true，则需要引入 jquery.slimscroll.min.js，一般情况下不需要 -->\n<script src=\"js/jquery.slimscroll.min.js\"></script>\n```\n\n## HTML\n\n```\n\t<div id=\"dowebok\">\n\t    <div class=\"section\">\n\t        <h3>第一屏</h3>\n\t    </div>\n\t    <div class=\"section\">\n\t        <h3>第二屏</h3>\n\t    </div>\n\t    <div class=\"section\">\n\t        <h3>第三屏</h3>\n\t    </div>\n\t    <div class=\"section\">\n\t        <h3>第四屏</h3>\n\t    </div>\n\t</div>\n\t每个 section 代表一屏，默认显示“第一屏”，如果要指定加载页面时显示的“屏幕”，可以在对应的 section 加上 class=”active”，如：\n\n\t<div class=\"section active\">第三屏</div>\n\n\t同时，可以在 section 内加入 slide，如：\n\n\t<div id=\"dowebok\">\n\t    <div class=\"section\">第一屏</div>\n\t    <div class=\"section\">第二屏</div>\n\t    <div class=\"section\">\n\t        <div class=\"slide\">第三屏的第一屏</div>\n\t        <div class=\"slide\">第三屏的第二屏</div>\n\t        <div class=\"slide\">第三屏的第三屏</div>\n\t        <div class=\"slide\">第三屏的第四屏</div>\n\t    </div>\n\t    <div class=\"section\">第四屏</div>\n\t</div>\n\n### JavaScript\n``\n\t$(function(){\n\t    $('#dowebok').fullpage();\n\t});\n```\n\n## 详细配置见官方文档\n\n[Fullpage.js-Github](https://github.com/alvarotrigo/fullPage.js/tree/master/lang/chinese#fullpagejs)\n\n---\n\n    皮不动了...\n","slug":"Fullpage.js","published":1,"updated":"2019-07-05T05:00:34.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxx6lm500001s5ghh59fom2e","content":"<h2 id=\"主要功能有：\"><a href=\"#主要功能有：\" class=\"headerlink\" title=\"主要功能有：\"></a>主要功能有：</h2><ul>\n<li>支持鼠标滚动</li>\n<li>支持前进后退和键盘控制</li>\n<li>多个回调函数</li>\n<li>支持手机、平板触摸事件</li>\n<li>支持 CSS3 动画</li>\n<li>支持窗口缩放</li>\n<li>窗口缩放时自动调整</li>\n<li>可设置滚动宽度、背景颜色、滚动速度、 循环选项、回调、文本对齐方式等等</li>\n</ul>\n<h2 id=\"兼容性\"><a href=\"#兼容性\" class=\"headerlink\" title=\"兼容性\"></a>兼容性</h2><pre><code>jQuery 兼容:\n兼容 jQuery 1.7+。\n\n浏览器兼容:\nIE8+ ✔    Chrome ✔    Firefox ✔    Opera ✔    Safari ✔\n</code></pre><h2 id=\"引入文件\"><a href=\"#引入文件\" class=\"headerlink\" title=\"引入文件\"></a>引入文件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;link rel=&quot;stylesheet&quot; href=&quot;css/jquery.fullPage.css&quot;&gt;</span><br><span class=\"line\">&lt;script src=&quot;js/jquery.fullPage.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script src=&quot;js/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;!-- jquery.easings.min.js 用于 easing 参数，也可以使用完整的 jQuery UI 代替，如果不需要设置 easing 参数，可去掉改文件 --&gt;</span><br><span class=\"line\">&lt;script src=&quot;js/jquery.easings.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;!-- 如果 scrollOverflow 设置为 true，则需要引入 jquery.slimscroll.min.js，一般情况下不需要 --&gt;</span><br><span class=\"line\">&lt;script src=&quot;js/jquery.slimscroll.min.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t&lt;div id=&quot;dowebok&quot;&gt;</span><br><span class=\"line\">\t    &lt;div class=&quot;section&quot;&gt;</span><br><span class=\"line\">\t        &lt;h3&gt;第一屏&lt;/h3&gt;</span><br><span class=\"line\">\t    &lt;/div&gt;</span><br><span class=\"line\">\t    &lt;div class=&quot;section&quot;&gt;</span><br><span class=\"line\">\t        &lt;h3&gt;第二屏&lt;/h3&gt;</span><br><span class=\"line\">\t    &lt;/div&gt;</span><br><span class=\"line\">\t    &lt;div class=&quot;section&quot;&gt;</span><br><span class=\"line\">\t        &lt;h3&gt;第三屏&lt;/h3&gt;</span><br><span class=\"line\">\t    &lt;/div&gt;</span><br><span class=\"line\">\t    &lt;div class=&quot;section&quot;&gt;</span><br><span class=\"line\">\t        &lt;h3&gt;第四屏&lt;/h3&gt;</span><br><span class=\"line\">\t    &lt;/div&gt;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">\t每个 section 代表一屏，默认显示“第一屏”，如果要指定加载页面时显示的“屏幕”，可以在对应的 section 加上 class=”active”，如：</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;div class=&quot;section active&quot;&gt;第三屏&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t同时，可以在 section 内加入 slide，如：</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;div id=&quot;dowebok&quot;&gt;</span><br><span class=\"line\">\t    &lt;div class=&quot;section&quot;&gt;第一屏&lt;/div&gt;</span><br><span class=\"line\">\t    &lt;div class=&quot;section&quot;&gt;第二屏&lt;/div&gt;</span><br><span class=\"line\">\t    &lt;div class=&quot;section&quot;&gt;</span><br><span class=\"line\">\t        &lt;div class=&quot;slide&quot;&gt;第三屏的第一屏&lt;/div&gt;</span><br><span class=\"line\">\t        &lt;div class=&quot;slide&quot;&gt;第三屏的第二屏&lt;/div&gt;</span><br><span class=\"line\">\t        &lt;div class=&quot;slide&quot;&gt;第三屏的第三屏&lt;/div&gt;</span><br><span class=\"line\">\t        &lt;div class=&quot;slide&quot;&gt;第三屏的第四屏&lt;/div&gt;</span><br><span class=\"line\">\t    &lt;/div&gt;</span><br><span class=\"line\">\t    &lt;div class=&quot;section&quot;&gt;第四屏&lt;/div&gt;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">### JavaScript</span><br><span class=\"line\">``</span><br><span class=\"line\">\t$(function()&#123;</span><br><span class=\"line\">\t    $(&apos;#dowebok&apos;).fullpage();</span><br><span class=\"line\">\t&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"详细配置见官方文档\"><a href=\"#详细配置见官方文档\" class=\"headerlink\" title=\"详细配置见官方文档\"></a>详细配置见官方文档</h2><p><a href=\"https://github.com/alvarotrigo/fullPage.js/tree/master/lang/chinese#fullpagejs\" target=\"_blank\" rel=\"noopener\">Fullpage.js-Github</a></p>\n<hr>\n<pre><code>皮不动了...\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"主要功能有：\"><a href=\"#主要功能有：\" class=\"headerlink\" title=\"主要功能有：\"></a>主要功能有：</h2><ul>\n<li>支持鼠标滚动</li>\n<li>支持前进后退和键盘控制</li>\n<li>多个回调函数</li>\n<li>支持手机、平板触摸事件</li>\n<li>支持 CSS3 动画</li>\n<li>支持窗口缩放</li>\n<li>窗口缩放时自动调整</li>\n<li>可设置滚动宽度、背景颜色、滚动速度、 循环选项、回调、文本对齐方式等等</li>\n</ul>\n<h2 id=\"兼容性\"><a href=\"#兼容性\" class=\"headerlink\" title=\"兼容性\"></a>兼容性</h2><pre><code>jQuery 兼容:\n兼容 jQuery 1.7+。\n\n浏览器兼容:\nIE8+ ✔    Chrome ✔    Firefox ✔    Opera ✔    Safari ✔\n</code></pre><h2 id=\"引入文件\"><a href=\"#引入文件\" class=\"headerlink\" title=\"引入文件\"></a>引入文件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;link rel=&quot;stylesheet&quot; href=&quot;css/jquery.fullPage.css&quot;&gt;</span><br><span class=\"line\">&lt;script src=&quot;js/jquery.fullPage.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script src=&quot;js/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;!-- jquery.easings.min.js 用于 easing 参数，也可以使用完整的 jQuery UI 代替，如果不需要设置 easing 参数，可去掉改文件 --&gt;</span><br><span class=\"line\">&lt;script src=&quot;js/jquery.easings.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;!-- 如果 scrollOverflow 设置为 true，则需要引入 jquery.slimscroll.min.js，一般情况下不需要 --&gt;</span><br><span class=\"line\">&lt;script src=&quot;js/jquery.slimscroll.min.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t&lt;div id=&quot;dowebok&quot;&gt;</span><br><span class=\"line\">\t    &lt;div class=&quot;section&quot;&gt;</span><br><span class=\"line\">\t        &lt;h3&gt;第一屏&lt;/h3&gt;</span><br><span class=\"line\">\t    &lt;/div&gt;</span><br><span class=\"line\">\t    &lt;div class=&quot;section&quot;&gt;</span><br><span class=\"line\">\t        &lt;h3&gt;第二屏&lt;/h3&gt;</span><br><span class=\"line\">\t    &lt;/div&gt;</span><br><span class=\"line\">\t    &lt;div class=&quot;section&quot;&gt;</span><br><span class=\"line\">\t        &lt;h3&gt;第三屏&lt;/h3&gt;</span><br><span class=\"line\">\t    &lt;/div&gt;</span><br><span class=\"line\">\t    &lt;div class=&quot;section&quot;&gt;</span><br><span class=\"line\">\t        &lt;h3&gt;第四屏&lt;/h3&gt;</span><br><span class=\"line\">\t    &lt;/div&gt;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">\t每个 section 代表一屏，默认显示“第一屏”，如果要指定加载页面时显示的“屏幕”，可以在对应的 section 加上 class=”active”，如：</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;div class=&quot;section active&quot;&gt;第三屏&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t同时，可以在 section 内加入 slide，如：</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;div id=&quot;dowebok&quot;&gt;</span><br><span class=\"line\">\t    &lt;div class=&quot;section&quot;&gt;第一屏&lt;/div&gt;</span><br><span class=\"line\">\t    &lt;div class=&quot;section&quot;&gt;第二屏&lt;/div&gt;</span><br><span class=\"line\">\t    &lt;div class=&quot;section&quot;&gt;</span><br><span class=\"line\">\t        &lt;div class=&quot;slide&quot;&gt;第三屏的第一屏&lt;/div&gt;</span><br><span class=\"line\">\t        &lt;div class=&quot;slide&quot;&gt;第三屏的第二屏&lt;/div&gt;</span><br><span class=\"line\">\t        &lt;div class=&quot;slide&quot;&gt;第三屏的第三屏&lt;/div&gt;</span><br><span class=\"line\">\t        &lt;div class=&quot;slide&quot;&gt;第三屏的第四屏&lt;/div&gt;</span><br><span class=\"line\">\t    &lt;/div&gt;</span><br><span class=\"line\">\t    &lt;div class=&quot;section&quot;&gt;第四屏&lt;/div&gt;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">### JavaScript</span><br><span class=\"line\">``</span><br><span class=\"line\">\t$(function()&#123;</span><br><span class=\"line\">\t    $(&apos;#dowebok&apos;).fullpage();</span><br><span class=\"line\">\t&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"详细配置见官方文档\"><a href=\"#详细配置见官方文档\" class=\"headerlink\" title=\"详细配置见官方文档\"></a>详细配置见官方文档</h2><p><a href=\"https://github.com/alvarotrigo/fullPage.js/tree/master/lang/chinese#fullpagejs\" target=\"_blank\" rel=\"noopener\">Fullpage.js-Github</a></p>\n<hr>\n<pre><code>皮不动了...\n</code></pre>"},{"title":"Grunt 学习总结","date":"2019-05-31T16:00:00.000Z","description":"自动化 压缩（minification）、编译、单元测试、linting等","toc":1,"top":0,"_content":"\n# 是什么 & 用途 & 场景\ngrunt本身是一种自动化任务处理工具，它是一个工具框架，有很多插件扩展它的功能。\n\n通过丰富的grunt插件可以实现以下功能：\n- jshint代码检查\n- 代码合并\n- 代码压缩--js/css/html都可以\n- SASS/LESS编译css\n- watch监听---文件发生改变自动执行任务\n\n# 相关\n- [官方github](https://github.com/gruntjs)\n- [官方网址（文档）](https://gruntjs.com/)\n- [中文文档](http://www.gruntjs.net/)\n- [插件列表](https://gruntjs.com/plugins)\n\n# 环境\ngrunt依赖Nodejs和npm环境\n\n使用npm安装全局grunt-cli命令行工具：`npm install -g grunt-cli`\n\n# demo\n1. 需求\n\n假设你手上有一个项目，叫gruntlearn，项目文件中你的源码存储在src目录下，包含四个模块的js文件，还没编译的scss文件，html文件，图片文件：\n\n![demo src 目录结构](/images/grunt/grunt01.png)\n\n现在你想用grunt，自动给你的源代码执行几个任务：\n- 将images/html和复制到 发布文件夹build下\n- 用jshint检查js语法\n- 合并四个js文件（分别合并，因为a,b用于不同的页面）\n- 编译scss文件\n- 压缩合并后的js文件，存储到build下\n- 调试：新建一个本地服务器监听文件改变自动刷新HTML文件\n\n2. 搭建环境\n\n- 在命令行里打开到gruntlearn的目录下，执行`npm init`\n- 安装 grunt 和 grunt-cli\n```bash\nnpm install grunt-cli --global\nnpm install grunt --save-dev\n```\n\n- 在项目中安装grunt和相关插件,根据第1步中的需求，需要用到一下插件：\n    - 复制文件：grunt-contrib-copy\n    - 合并文件：grunt-contrib-concat\n    - 语法检查：grunt-contrib-jshint\n    - Scss 编译：grunt-contrib-sass\n    - 压缩文件：grunt-contrib-uglify\n    - 监听文件变动：grunt-contrib-watch\n    - 建立本地服务器：grunt-contrib-connect\n- 安装插件：\n```bash\nnpm install --save-dev grunt-contrib-copy grunt-contrib-concat grunt-contrib-jshint grunt-contrib-sass grunt-contrib-uglify grunt-contrib-watch grunt-contrib-connect\n```\n- 创建gruntfile.js文件，代码结构：\n![gruntfile.js 代码结构](/images/grunt/grunt02.png)\n\n- 根据demo需求配置gruntfile：\n```js\n//wrapper函数\nmodule.exports = function(grunt) {\n\n    //你可以像普通的js文件一样添加自己的代码\n    var sassStyle = 'expanded';\n\n    //1.配置任务 tasks--根据插件的文档来定义任务\n    grunt.initConfig({\n        pkg: grunt.file.readJSON('package.json'),\n        //将html和图片从src复制到build\n        copy: { //task\n            html: { //target\n                files: [\n                    { expand: true, cwd: './src/html', src: '*', dest: './build/html/' }\n                ]\n            },\n            images: { //target\n                files: [\n                    { expand: true, cwd: './src/images', src: '*', dest: './build/images/' }\n                ]\n            }\n        },\n        //合并js\n        concat: {\n            /* options: {\n                separator: ';',//合并分隔符\n            }, */\n            dist: {\n                files: { //文件路径\n                    './src/js/a.all.js': ['./src/js/a.1.js', './src/js/a.2.js'],\n                    './src/js/b.all.js': ['./src/js/b.1.js', './src/js/b.2.js']\n                }\n            },\n        },\n        //task:编译sass\n        sass: {\n            output: { //target\n                options: { //target options\n                    style: sassStyle\n                },\n                files: {\n                    './build/css/style.css': './src/scss/style.scss' //'目标文件':'源文件'\n                }\n            }\n        },\n        //代码检查\n        jshint: {\n            all: ['./src/js/a.all.js', './src/js/b.all.js']\n        },\n        //压缩\n        uglify: {\n            uglifyjs: {\n                files: {\n                    './build/js/a.min.js': ['./src/js/a.all.js'],\n                    './build/js/b.min.js': ['./src/js/b.all.js']\n                }\n            }\n        },\n        //监听\n        watch: {\n            scripts: {\n                files: ['./src/js/a.1.js', './src/js/a.2.js', './src/js/b.1.js', '/src/js/b.2.js'],\n                tasks: ['concat', 'jshint', 'uglify']\n            },\n            sass: {\n                files: ['./src/scss/style.scss'],\n                tasks: ['sass']\n            },\n            livereload: {\n                options: {\n                    liverelload: '<%= connect.options.livereload %>'\n                },\n                files: [\n                    './src/html/index.html',\n                    './src/scss/style.scss',\n                    './src/js/a.1.js',\n                    './src/js/a.2.js',\n                    './src/js/b.1.js',\n                    './src/js/b.2.js'\n                ]\n            }\n        },\n        connect: {\n            options: {\n                port: 9000,\n                open: true,\n                livareload: 35729,\n                //change this to '0.0.0.0' to access the server from outside\n                hostname: 'localhost'\n            },\n            server: {\n                options: {\n                    port: 9001,\n                    base: './'\n                }\n            }\n        }\n    });\n\n    //2.加载插件\n    grunt.loadNpmTasks('grunt-contrib-copy');\n    grunt.loadNpmTasks('grunt-contrib-concat');\n    grunt.loadNpmTasks('grunt-contrib-sass');\n    grunt.loadNpmTasks('grunt-contrib-jshint');\n    grunt.loadNpmTasks('grunt-contrib-uglify');\n    grunt.loadNpmTasks('grunt-contrib-watch');\n    grunt.loadNpmTasks('grunt-contrib-connect');\n\n    //3.注册任务\n    grunt.registerTask('copyhtml', ['copy:html']); //可以用task：target的方法分别注册\n    grunt.registerTask('concatjs', ['concat']); //也可以只用task名称注册，默认执行task下全部target\n    grunt.registerTask('outputcss', ['sass']);\n    grunt.registerTask('watchit', ['concat', 'sass', 'jshint', 'uglify', 'connect', 'watch']);\n    grunt.registerTask('default', ['copy', 'concat', 'sass', 'jshint', 'uglify']);\n}\n```\n\n- 执行定义好的命令`grunt default`：\n![执行命令](/images/grunt/grunt03.png)\n\n- 执行后的项目目录结构：\n![执行后目录结构](/images/grunt/grunt04.png)\n","source":"_posts/grunt.md","raw":"---\ntitle: Grunt 学习总结\ncategories:\n    - tool # 一级分类\ntags:\n    - grunt\ndate: 2019-06-01\ndescription: 自动化 压缩（minification）、编译、单元测试、linting等\ntoc: 1\ntop: 0\n---\n\n# 是什么 & 用途 & 场景\ngrunt本身是一种自动化任务处理工具，它是一个工具框架，有很多插件扩展它的功能。\n\n通过丰富的grunt插件可以实现以下功能：\n- jshint代码检查\n- 代码合并\n- 代码压缩--js/css/html都可以\n- SASS/LESS编译css\n- watch监听---文件发生改变自动执行任务\n\n# 相关\n- [官方github](https://github.com/gruntjs)\n- [官方网址（文档）](https://gruntjs.com/)\n- [中文文档](http://www.gruntjs.net/)\n- [插件列表](https://gruntjs.com/plugins)\n\n# 环境\ngrunt依赖Nodejs和npm环境\n\n使用npm安装全局grunt-cli命令行工具：`npm install -g grunt-cli`\n\n# demo\n1. 需求\n\n假设你手上有一个项目，叫gruntlearn，项目文件中你的源码存储在src目录下，包含四个模块的js文件，还没编译的scss文件，html文件，图片文件：\n\n![demo src 目录结构](/images/grunt/grunt01.png)\n\n现在你想用grunt，自动给你的源代码执行几个任务：\n- 将images/html和复制到 发布文件夹build下\n- 用jshint检查js语法\n- 合并四个js文件（分别合并，因为a,b用于不同的页面）\n- 编译scss文件\n- 压缩合并后的js文件，存储到build下\n- 调试：新建一个本地服务器监听文件改变自动刷新HTML文件\n\n2. 搭建环境\n\n- 在命令行里打开到gruntlearn的目录下，执行`npm init`\n- 安装 grunt 和 grunt-cli\n```bash\nnpm install grunt-cli --global\nnpm install grunt --save-dev\n```\n\n- 在项目中安装grunt和相关插件,根据第1步中的需求，需要用到一下插件：\n    - 复制文件：grunt-contrib-copy\n    - 合并文件：grunt-contrib-concat\n    - 语法检查：grunt-contrib-jshint\n    - Scss 编译：grunt-contrib-sass\n    - 压缩文件：grunt-contrib-uglify\n    - 监听文件变动：grunt-contrib-watch\n    - 建立本地服务器：grunt-contrib-connect\n- 安装插件：\n```bash\nnpm install --save-dev grunt-contrib-copy grunt-contrib-concat grunt-contrib-jshint grunt-contrib-sass grunt-contrib-uglify grunt-contrib-watch grunt-contrib-connect\n```\n- 创建gruntfile.js文件，代码结构：\n![gruntfile.js 代码结构](/images/grunt/grunt02.png)\n\n- 根据demo需求配置gruntfile：\n```js\n//wrapper函数\nmodule.exports = function(grunt) {\n\n    //你可以像普通的js文件一样添加自己的代码\n    var sassStyle = 'expanded';\n\n    //1.配置任务 tasks--根据插件的文档来定义任务\n    grunt.initConfig({\n        pkg: grunt.file.readJSON('package.json'),\n        //将html和图片从src复制到build\n        copy: { //task\n            html: { //target\n                files: [\n                    { expand: true, cwd: './src/html', src: '*', dest: './build/html/' }\n                ]\n            },\n            images: { //target\n                files: [\n                    { expand: true, cwd: './src/images', src: '*', dest: './build/images/' }\n                ]\n            }\n        },\n        //合并js\n        concat: {\n            /* options: {\n                separator: ';',//合并分隔符\n            }, */\n            dist: {\n                files: { //文件路径\n                    './src/js/a.all.js': ['./src/js/a.1.js', './src/js/a.2.js'],\n                    './src/js/b.all.js': ['./src/js/b.1.js', './src/js/b.2.js']\n                }\n            },\n        },\n        //task:编译sass\n        sass: {\n            output: { //target\n                options: { //target options\n                    style: sassStyle\n                },\n                files: {\n                    './build/css/style.css': './src/scss/style.scss' //'目标文件':'源文件'\n                }\n            }\n        },\n        //代码检查\n        jshint: {\n            all: ['./src/js/a.all.js', './src/js/b.all.js']\n        },\n        //压缩\n        uglify: {\n            uglifyjs: {\n                files: {\n                    './build/js/a.min.js': ['./src/js/a.all.js'],\n                    './build/js/b.min.js': ['./src/js/b.all.js']\n                }\n            }\n        },\n        //监听\n        watch: {\n            scripts: {\n                files: ['./src/js/a.1.js', './src/js/a.2.js', './src/js/b.1.js', '/src/js/b.2.js'],\n                tasks: ['concat', 'jshint', 'uglify']\n            },\n            sass: {\n                files: ['./src/scss/style.scss'],\n                tasks: ['sass']\n            },\n            livereload: {\n                options: {\n                    liverelload: '<%= connect.options.livereload %>'\n                },\n                files: [\n                    './src/html/index.html',\n                    './src/scss/style.scss',\n                    './src/js/a.1.js',\n                    './src/js/a.2.js',\n                    './src/js/b.1.js',\n                    './src/js/b.2.js'\n                ]\n            }\n        },\n        connect: {\n            options: {\n                port: 9000,\n                open: true,\n                livareload: 35729,\n                //change this to '0.0.0.0' to access the server from outside\n                hostname: 'localhost'\n            },\n            server: {\n                options: {\n                    port: 9001,\n                    base: './'\n                }\n            }\n        }\n    });\n\n    //2.加载插件\n    grunt.loadNpmTasks('grunt-contrib-copy');\n    grunt.loadNpmTasks('grunt-contrib-concat');\n    grunt.loadNpmTasks('grunt-contrib-sass');\n    grunt.loadNpmTasks('grunt-contrib-jshint');\n    grunt.loadNpmTasks('grunt-contrib-uglify');\n    grunt.loadNpmTasks('grunt-contrib-watch');\n    grunt.loadNpmTasks('grunt-contrib-connect');\n\n    //3.注册任务\n    grunt.registerTask('copyhtml', ['copy:html']); //可以用task：target的方法分别注册\n    grunt.registerTask('concatjs', ['concat']); //也可以只用task名称注册，默认执行task下全部target\n    grunt.registerTask('outputcss', ['sass']);\n    grunt.registerTask('watchit', ['concat', 'sass', 'jshint', 'uglify', 'connect', 'watch']);\n    grunt.registerTask('default', ['copy', 'concat', 'sass', 'jshint', 'uglify']);\n}\n```\n\n- 执行定义好的命令`grunt default`：\n![执行命令](/images/grunt/grunt03.png)\n\n- 执行后的项目目录结构：\n![执行后目录结构](/images/grunt/grunt04.png)\n","slug":"grunt","published":1,"updated":"2019-07-10T17:49:40.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxxjgbk80000akghjb0sst7h","content":"<h1 id=\"是什么-amp-用途-amp-场景\"><a href=\"#是什么-amp-用途-amp-场景\" class=\"headerlink\" title=\"是什么 &amp; 用途 &amp; 场景\"></a>是什么 &amp; 用途 &amp; 场景</h1><p>grunt本身是一种自动化任务处理工具，它是一个工具框架，有很多插件扩展它的功能。</p>\n<p>通过丰富的grunt插件可以实现以下功能：</p>\n<ul>\n<li>jshint代码检查</li>\n<li>代码合并</li>\n<li>代码压缩–js/css/html都可以</li>\n<li>SASS/LESS编译css</li>\n<li>watch监听—文件发生改变自动执行任务</li>\n</ul>\n<h1 id=\"相关\"><a href=\"#相关\" class=\"headerlink\" title=\"相关\"></a>相关</h1><ul>\n<li><a href=\"https://github.com/gruntjs\" target=\"_blank\" rel=\"noopener\">官方github</a></li>\n<li><a href=\"https://gruntjs.com/\" target=\"_blank\" rel=\"noopener\">官方网址（文档）</a></li>\n<li><a href=\"http://www.gruntjs.net/\" target=\"_blank\" rel=\"noopener\">中文文档</a></li>\n<li><a href=\"https://gruntjs.com/plugins\" target=\"_blank\" rel=\"noopener\">插件列表</a></li>\n</ul>\n<h1 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h1><p>grunt依赖Nodejs和npm环境</p>\n<p>使用npm安装全局grunt-cli命令行工具：<code>npm install -g grunt-cli</code></p>\n<h1 id=\"demo\"><a href=\"#demo\" class=\"headerlink\" title=\"demo\"></a>demo</h1><ol>\n<li>需求</li>\n</ol>\n<p>假设你手上有一个项目，叫gruntlearn，项目文件中你的源码存储在src目录下，包含四个模块的js文件，还没编译的scss文件，html文件，图片文件：</p>\n<p><img src=\"/images/grunt/grunt01.png\" alt=\"demo src 目录结构\"></p>\n<p>现在你想用grunt，自动给你的源代码执行几个任务：</p>\n<ul>\n<li>将images/html和复制到 发布文件夹build下</li>\n<li>用jshint检查js语法</li>\n<li>合并四个js文件（分别合并，因为a,b用于不同的页面）</li>\n<li>编译scss文件</li>\n<li>压缩合并后的js文件，存储到build下</li>\n<li>调试：新建一个本地服务器监听文件改变自动刷新HTML文件</li>\n</ul>\n<ol start=\"2\">\n<li>搭建环境</li>\n</ol>\n<ul>\n<li>在命令行里打开到gruntlearn的目录下，执行<code>npm init</code></li>\n<li><p>安装 grunt 和 grunt-cli</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install grunt-cli --global</span><br><span class=\"line\">npm install grunt --save-dev</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在项目中安装grunt和相关插件,根据第1步中的需求，需要用到一下插件：</p>\n<ul>\n<li>复制文件：grunt-contrib-copy</li>\n<li>合并文件：grunt-contrib-concat</li>\n<li>语法检查：grunt-contrib-jshint</li>\n<li>Scss 编译：grunt-contrib-sass</li>\n<li>压缩文件：grunt-contrib-uglify</li>\n<li>监听文件变动：grunt-contrib-watch</li>\n<li>建立本地服务器：grunt-contrib-connect</li>\n</ul>\n</li>\n<li><p>安装插件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save-dev grunt-contrib-copy grunt-contrib-concat grunt-contrib-jshint grunt-contrib-sass grunt-contrib-uglify grunt-contrib-watch grunt-contrib-connect</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建gruntfile.js文件，代码结构：<br><img src=\"/images/grunt/grunt02.png\" alt=\"gruntfile.js 代码结构\"></p>\n</li>\n<li><p>根据demo需求配置gruntfile：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//wrapper函数</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">grunt</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//你可以像普通的js文件一样添加自己的代码</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> sassStyle = <span class=\"string\">'expanded'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//1.配置任务 tasks--根据插件的文档来定义任务</span></span><br><span class=\"line\">    grunt.initConfig(&#123;</span><br><span class=\"line\">        pkg: grunt.file.readJSON(<span class=\"string\">'package.json'</span>),</span><br><span class=\"line\">        <span class=\"comment\">//将html和图片从src复制到build</span></span><br><span class=\"line\">        copy: &#123; <span class=\"comment\">//task</span></span><br><span class=\"line\">            html: &#123; <span class=\"comment\">//target</span></span><br><span class=\"line\">                files: [</span><br><span class=\"line\">                    &#123; <span class=\"attr\">expand</span>: <span class=\"literal\">true</span>, <span class=\"attr\">cwd</span>: <span class=\"string\">'./src/html'</span>, <span class=\"attr\">src</span>: <span class=\"string\">'*'</span>, <span class=\"attr\">dest</span>: <span class=\"string\">'./build/html/'</span> &#125;</span><br><span class=\"line\">                ]</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            images: &#123; <span class=\"comment\">//target</span></span><br><span class=\"line\">                files: [</span><br><span class=\"line\">                    &#123; <span class=\"attr\">expand</span>: <span class=\"literal\">true</span>, <span class=\"attr\">cwd</span>: <span class=\"string\">'./src/images'</span>, <span class=\"attr\">src</span>: <span class=\"string\">'*'</span>, <span class=\"attr\">dest</span>: <span class=\"string\">'./build/images/'</span> &#125;</span><br><span class=\"line\">                ]</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"comment\">//合并js</span></span><br><span class=\"line\">        concat: &#123;</span><br><span class=\"line\">            <span class=\"comment\">/* options: &#123;</span></span><br><span class=\"line\"><span class=\"comment\">                separator: ';',//合并分隔符</span></span><br><span class=\"line\"><span class=\"comment\">            &#125;, */</span></span><br><span class=\"line\">            dist: &#123;</span><br><span class=\"line\">                files: &#123; <span class=\"comment\">//文件路径</span></span><br><span class=\"line\">                    <span class=\"string\">'./src/js/a.all.js'</span>: [<span class=\"string\">'./src/js/a.1.js'</span>, <span class=\"string\">'./src/js/a.2.js'</span>],</span><br><span class=\"line\">                    <span class=\"string\">'./src/js/b.all.js'</span>: [<span class=\"string\">'./src/js/b.1.js'</span>, <span class=\"string\">'./src/js/b.2.js'</span>]</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"comment\">//task:编译sass</span></span><br><span class=\"line\">        sass: &#123;</span><br><span class=\"line\">            output: &#123; <span class=\"comment\">//target</span></span><br><span class=\"line\">                options: &#123; <span class=\"comment\">//target options</span></span><br><span class=\"line\">                    style: sassStyle</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                files: &#123;</span><br><span class=\"line\">                    <span class=\"string\">'./build/css/style.css'</span>: <span class=\"string\">'./src/scss/style.scss'</span> <span class=\"comment\">//'目标文件':'源文件'</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"comment\">//代码检查</span></span><br><span class=\"line\">        jshint: &#123;</span><br><span class=\"line\">            all: [<span class=\"string\">'./src/js/a.all.js'</span>, <span class=\"string\">'./src/js/b.all.js'</span>]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"comment\">//压缩</span></span><br><span class=\"line\">        uglify: &#123;</span><br><span class=\"line\">            uglifyjs: &#123;</span><br><span class=\"line\">                files: &#123;</span><br><span class=\"line\">                    <span class=\"string\">'./build/js/a.min.js'</span>: [<span class=\"string\">'./src/js/a.all.js'</span>],</span><br><span class=\"line\">                    <span class=\"string\">'./build/js/b.min.js'</span>: [<span class=\"string\">'./src/js/b.all.js'</span>]</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"comment\">//监听</span></span><br><span class=\"line\">        watch: &#123;</span><br><span class=\"line\">            scripts: &#123;</span><br><span class=\"line\">                files: [<span class=\"string\">'./src/js/a.1.js'</span>, <span class=\"string\">'./src/js/a.2.js'</span>, <span class=\"string\">'./src/js/b.1.js'</span>, <span class=\"string\">'/src/js/b.2.js'</span>],</span><br><span class=\"line\">                tasks: [<span class=\"string\">'concat'</span>, <span class=\"string\">'jshint'</span>, <span class=\"string\">'uglify'</span>]</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            sass: &#123;</span><br><span class=\"line\">                files: [<span class=\"string\">'./src/scss/style.scss'</span>],</span><br><span class=\"line\">                tasks: [<span class=\"string\">'sass'</span>]</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            livereload: &#123;</span><br><span class=\"line\">                options: &#123;</span><br><span class=\"line\">                    liverelload: <span class=\"string\">'&lt;%= connect.options.livereload %&gt;'</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                files: [</span><br><span class=\"line\">                    <span class=\"string\">'./src/html/index.html'</span>,</span><br><span class=\"line\">                    <span class=\"string\">'./src/scss/style.scss'</span>,</span><br><span class=\"line\">                    <span class=\"string\">'./src/js/a.1.js'</span>,</span><br><span class=\"line\">                    <span class=\"string\">'./src/js/a.2.js'</span>,</span><br><span class=\"line\">                    <span class=\"string\">'./src/js/b.1.js'</span>,</span><br><span class=\"line\">                    <span class=\"string\">'./src/js/b.2.js'</span></span><br><span class=\"line\">                ]</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        connect: &#123;</span><br><span class=\"line\">            options: &#123;</span><br><span class=\"line\">                port: <span class=\"number\">9000</span>,</span><br><span class=\"line\">                open: <span class=\"literal\">true</span>,</span><br><span class=\"line\">                livareload: <span class=\"number\">35729</span>,</span><br><span class=\"line\">                <span class=\"comment\">//change this to '0.0.0.0' to access the server from outside</span></span><br><span class=\"line\">                hostname: <span class=\"string\">'localhost'</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            server: &#123;</span><br><span class=\"line\">                options: &#123;</span><br><span class=\"line\">                    port: <span class=\"number\">9001</span>,</span><br><span class=\"line\">                    base: <span class=\"string\">'./'</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//2.加载插件</span></span><br><span class=\"line\">    grunt.loadNpmTasks(<span class=\"string\">'grunt-contrib-copy'</span>);</span><br><span class=\"line\">    grunt.loadNpmTasks(<span class=\"string\">'grunt-contrib-concat'</span>);</span><br><span class=\"line\">    grunt.loadNpmTasks(<span class=\"string\">'grunt-contrib-sass'</span>);</span><br><span class=\"line\">    grunt.loadNpmTasks(<span class=\"string\">'grunt-contrib-jshint'</span>);</span><br><span class=\"line\">    grunt.loadNpmTasks(<span class=\"string\">'grunt-contrib-uglify'</span>);</span><br><span class=\"line\">    grunt.loadNpmTasks(<span class=\"string\">'grunt-contrib-watch'</span>);</span><br><span class=\"line\">    grunt.loadNpmTasks(<span class=\"string\">'grunt-contrib-connect'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//3.注册任务</span></span><br><span class=\"line\">    grunt.registerTask(<span class=\"string\">'copyhtml'</span>, [<span class=\"string\">'copy:html'</span>]); <span class=\"comment\">//可以用task：target的方法分别注册</span></span><br><span class=\"line\">    grunt.registerTask(<span class=\"string\">'concatjs'</span>, [<span class=\"string\">'concat'</span>]); <span class=\"comment\">//也可以只用task名称注册，默认执行task下全部target</span></span><br><span class=\"line\">    grunt.registerTask(<span class=\"string\">'outputcss'</span>, [<span class=\"string\">'sass'</span>]);</span><br><span class=\"line\">    grunt.registerTask(<span class=\"string\">'watchit'</span>, [<span class=\"string\">'concat'</span>, <span class=\"string\">'sass'</span>, <span class=\"string\">'jshint'</span>, <span class=\"string\">'uglify'</span>, <span class=\"string\">'connect'</span>, <span class=\"string\">'watch'</span>]);</span><br><span class=\"line\">    grunt.registerTask(<span class=\"string\">'default'</span>, [<span class=\"string\">'copy'</span>, <span class=\"string\">'concat'</span>, <span class=\"string\">'sass'</span>, <span class=\"string\">'jshint'</span>, <span class=\"string\">'uglify'</span>]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>执行定义好的命令<code>grunt default</code>：<br><img src=\"/images/grunt/grunt03.png\" alt=\"执行命令\"></p>\n</li>\n<li><p>执行后的项目目录结构：<br><img src=\"/images/grunt/grunt04.png\" alt=\"执行后目录结构\"></p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"是什么-amp-用途-amp-场景\"><a href=\"#是什么-amp-用途-amp-场景\" class=\"headerlink\" title=\"是什么 &amp; 用途 &amp; 场景\"></a>是什么 &amp; 用途 &amp; 场景</h1><p>grunt本身是一种自动化任务处理工具，它是一个工具框架，有很多插件扩展它的功能。</p>\n<p>通过丰富的grunt插件可以实现以下功能：</p>\n<ul>\n<li>jshint代码检查</li>\n<li>代码合并</li>\n<li>代码压缩–js/css/html都可以</li>\n<li>SASS/LESS编译css</li>\n<li>watch监听—文件发生改变自动执行任务</li>\n</ul>\n<h1 id=\"相关\"><a href=\"#相关\" class=\"headerlink\" title=\"相关\"></a>相关</h1><ul>\n<li><a href=\"https://github.com/gruntjs\" target=\"_blank\" rel=\"noopener\">官方github</a></li>\n<li><a href=\"https://gruntjs.com/\" target=\"_blank\" rel=\"noopener\">官方网址（文档）</a></li>\n<li><a href=\"http://www.gruntjs.net/\" target=\"_blank\" rel=\"noopener\">中文文档</a></li>\n<li><a href=\"https://gruntjs.com/plugins\" target=\"_blank\" rel=\"noopener\">插件列表</a></li>\n</ul>\n<h1 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h1><p>grunt依赖Nodejs和npm环境</p>\n<p>使用npm安装全局grunt-cli命令行工具：<code>npm install -g grunt-cli</code></p>\n<h1 id=\"demo\"><a href=\"#demo\" class=\"headerlink\" title=\"demo\"></a>demo</h1><ol>\n<li>需求</li>\n</ol>\n<p>假设你手上有一个项目，叫gruntlearn，项目文件中你的源码存储在src目录下，包含四个模块的js文件，还没编译的scss文件，html文件，图片文件：</p>\n<p><img src=\"/images/grunt/grunt01.png\" alt=\"demo src 目录结构\"></p>\n<p>现在你想用grunt，自动给你的源代码执行几个任务：</p>\n<ul>\n<li>将images/html和复制到 发布文件夹build下</li>\n<li>用jshint检查js语法</li>\n<li>合并四个js文件（分别合并，因为a,b用于不同的页面）</li>\n<li>编译scss文件</li>\n<li>压缩合并后的js文件，存储到build下</li>\n<li>调试：新建一个本地服务器监听文件改变自动刷新HTML文件</li>\n</ul>\n<ol start=\"2\">\n<li>搭建环境</li>\n</ol>\n<ul>\n<li>在命令行里打开到gruntlearn的目录下，执行<code>npm init</code></li>\n<li><p>安装 grunt 和 grunt-cli</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install grunt-cli --global</span><br><span class=\"line\">npm install grunt --save-dev</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在项目中安装grunt和相关插件,根据第1步中的需求，需要用到一下插件：</p>\n<ul>\n<li>复制文件：grunt-contrib-copy</li>\n<li>合并文件：grunt-contrib-concat</li>\n<li>语法检查：grunt-contrib-jshint</li>\n<li>Scss 编译：grunt-contrib-sass</li>\n<li>压缩文件：grunt-contrib-uglify</li>\n<li>监听文件变动：grunt-contrib-watch</li>\n<li>建立本地服务器：grunt-contrib-connect</li>\n</ul>\n</li>\n<li><p>安装插件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save-dev grunt-contrib-copy grunt-contrib-concat grunt-contrib-jshint grunt-contrib-sass grunt-contrib-uglify grunt-contrib-watch grunt-contrib-connect</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建gruntfile.js文件，代码结构：<br><img src=\"/images/grunt/grunt02.png\" alt=\"gruntfile.js 代码结构\"></p>\n</li>\n<li><p>根据demo需求配置gruntfile：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//wrapper函数</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">grunt</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//你可以像普通的js文件一样添加自己的代码</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> sassStyle = <span class=\"string\">'expanded'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//1.配置任务 tasks--根据插件的文档来定义任务</span></span><br><span class=\"line\">    grunt.initConfig(&#123;</span><br><span class=\"line\">        pkg: grunt.file.readJSON(<span class=\"string\">'package.json'</span>),</span><br><span class=\"line\">        <span class=\"comment\">//将html和图片从src复制到build</span></span><br><span class=\"line\">        copy: &#123; <span class=\"comment\">//task</span></span><br><span class=\"line\">            html: &#123; <span class=\"comment\">//target</span></span><br><span class=\"line\">                files: [</span><br><span class=\"line\">                    &#123; <span class=\"attr\">expand</span>: <span class=\"literal\">true</span>, <span class=\"attr\">cwd</span>: <span class=\"string\">'./src/html'</span>, <span class=\"attr\">src</span>: <span class=\"string\">'*'</span>, <span class=\"attr\">dest</span>: <span class=\"string\">'./build/html/'</span> &#125;</span><br><span class=\"line\">                ]</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            images: &#123; <span class=\"comment\">//target</span></span><br><span class=\"line\">                files: [</span><br><span class=\"line\">                    &#123; <span class=\"attr\">expand</span>: <span class=\"literal\">true</span>, <span class=\"attr\">cwd</span>: <span class=\"string\">'./src/images'</span>, <span class=\"attr\">src</span>: <span class=\"string\">'*'</span>, <span class=\"attr\">dest</span>: <span class=\"string\">'./build/images/'</span> &#125;</span><br><span class=\"line\">                ]</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"comment\">//合并js</span></span><br><span class=\"line\">        concat: &#123;</span><br><span class=\"line\">            <span class=\"comment\">/* options: &#123;</span></span><br><span class=\"line\"><span class=\"comment\">                separator: ';',//合并分隔符</span></span><br><span class=\"line\"><span class=\"comment\">            &#125;, */</span></span><br><span class=\"line\">            dist: &#123;</span><br><span class=\"line\">                files: &#123; <span class=\"comment\">//文件路径</span></span><br><span class=\"line\">                    <span class=\"string\">'./src/js/a.all.js'</span>: [<span class=\"string\">'./src/js/a.1.js'</span>, <span class=\"string\">'./src/js/a.2.js'</span>],</span><br><span class=\"line\">                    <span class=\"string\">'./src/js/b.all.js'</span>: [<span class=\"string\">'./src/js/b.1.js'</span>, <span class=\"string\">'./src/js/b.2.js'</span>]</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"comment\">//task:编译sass</span></span><br><span class=\"line\">        sass: &#123;</span><br><span class=\"line\">            output: &#123; <span class=\"comment\">//target</span></span><br><span class=\"line\">                options: &#123; <span class=\"comment\">//target options</span></span><br><span class=\"line\">                    style: sassStyle</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                files: &#123;</span><br><span class=\"line\">                    <span class=\"string\">'./build/css/style.css'</span>: <span class=\"string\">'./src/scss/style.scss'</span> <span class=\"comment\">//'目标文件':'源文件'</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"comment\">//代码检查</span></span><br><span class=\"line\">        jshint: &#123;</span><br><span class=\"line\">            all: [<span class=\"string\">'./src/js/a.all.js'</span>, <span class=\"string\">'./src/js/b.all.js'</span>]</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"comment\">//压缩</span></span><br><span class=\"line\">        uglify: &#123;</span><br><span class=\"line\">            uglifyjs: &#123;</span><br><span class=\"line\">                files: &#123;</span><br><span class=\"line\">                    <span class=\"string\">'./build/js/a.min.js'</span>: [<span class=\"string\">'./src/js/a.all.js'</span>],</span><br><span class=\"line\">                    <span class=\"string\">'./build/js/b.min.js'</span>: [<span class=\"string\">'./src/js/b.all.js'</span>]</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"comment\">//监听</span></span><br><span class=\"line\">        watch: &#123;</span><br><span class=\"line\">            scripts: &#123;</span><br><span class=\"line\">                files: [<span class=\"string\">'./src/js/a.1.js'</span>, <span class=\"string\">'./src/js/a.2.js'</span>, <span class=\"string\">'./src/js/b.1.js'</span>, <span class=\"string\">'/src/js/b.2.js'</span>],</span><br><span class=\"line\">                tasks: [<span class=\"string\">'concat'</span>, <span class=\"string\">'jshint'</span>, <span class=\"string\">'uglify'</span>]</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            sass: &#123;</span><br><span class=\"line\">                files: [<span class=\"string\">'./src/scss/style.scss'</span>],</span><br><span class=\"line\">                tasks: [<span class=\"string\">'sass'</span>]</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            livereload: &#123;</span><br><span class=\"line\">                options: &#123;</span><br><span class=\"line\">                    liverelload: <span class=\"string\">'&lt;%= connect.options.livereload %&gt;'</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                files: [</span><br><span class=\"line\">                    <span class=\"string\">'./src/html/index.html'</span>,</span><br><span class=\"line\">                    <span class=\"string\">'./src/scss/style.scss'</span>,</span><br><span class=\"line\">                    <span class=\"string\">'./src/js/a.1.js'</span>,</span><br><span class=\"line\">                    <span class=\"string\">'./src/js/a.2.js'</span>,</span><br><span class=\"line\">                    <span class=\"string\">'./src/js/b.1.js'</span>,</span><br><span class=\"line\">                    <span class=\"string\">'./src/js/b.2.js'</span></span><br><span class=\"line\">                ]</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        connect: &#123;</span><br><span class=\"line\">            options: &#123;</span><br><span class=\"line\">                port: <span class=\"number\">9000</span>,</span><br><span class=\"line\">                open: <span class=\"literal\">true</span>,</span><br><span class=\"line\">                livareload: <span class=\"number\">35729</span>,</span><br><span class=\"line\">                <span class=\"comment\">//change this to '0.0.0.0' to access the server from outside</span></span><br><span class=\"line\">                hostname: <span class=\"string\">'localhost'</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            server: &#123;</span><br><span class=\"line\">                options: &#123;</span><br><span class=\"line\">                    port: <span class=\"number\">9001</span>,</span><br><span class=\"line\">                    base: <span class=\"string\">'./'</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//2.加载插件</span></span><br><span class=\"line\">    grunt.loadNpmTasks(<span class=\"string\">'grunt-contrib-copy'</span>);</span><br><span class=\"line\">    grunt.loadNpmTasks(<span class=\"string\">'grunt-contrib-concat'</span>);</span><br><span class=\"line\">    grunt.loadNpmTasks(<span class=\"string\">'grunt-contrib-sass'</span>);</span><br><span class=\"line\">    grunt.loadNpmTasks(<span class=\"string\">'grunt-contrib-jshint'</span>);</span><br><span class=\"line\">    grunt.loadNpmTasks(<span class=\"string\">'grunt-contrib-uglify'</span>);</span><br><span class=\"line\">    grunt.loadNpmTasks(<span class=\"string\">'grunt-contrib-watch'</span>);</span><br><span class=\"line\">    grunt.loadNpmTasks(<span class=\"string\">'grunt-contrib-connect'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//3.注册任务</span></span><br><span class=\"line\">    grunt.registerTask(<span class=\"string\">'copyhtml'</span>, [<span class=\"string\">'copy:html'</span>]); <span class=\"comment\">//可以用task：target的方法分别注册</span></span><br><span class=\"line\">    grunt.registerTask(<span class=\"string\">'concatjs'</span>, [<span class=\"string\">'concat'</span>]); <span class=\"comment\">//也可以只用task名称注册，默认执行task下全部target</span></span><br><span class=\"line\">    grunt.registerTask(<span class=\"string\">'outputcss'</span>, [<span class=\"string\">'sass'</span>]);</span><br><span class=\"line\">    grunt.registerTask(<span class=\"string\">'watchit'</span>, [<span class=\"string\">'concat'</span>, <span class=\"string\">'sass'</span>, <span class=\"string\">'jshint'</span>, <span class=\"string\">'uglify'</span>, <span class=\"string\">'connect'</span>, <span class=\"string\">'watch'</span>]);</span><br><span class=\"line\">    grunt.registerTask(<span class=\"string\">'default'</span>, [<span class=\"string\">'copy'</span>, <span class=\"string\">'concat'</span>, <span class=\"string\">'sass'</span>, <span class=\"string\">'jshint'</span>, <span class=\"string\">'uglify'</span>]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>执行定义好的命令<code>grunt default</code>：<br><img src=\"/images/grunt/grunt03.png\" alt=\"执行命令\"></p>\n</li>\n<li><p>执行后的项目目录结构：<br><img src=\"/images/grunt/grunt04.png\" alt=\"执行后目录结构\"></p>\n</li>\n</ul>\n"},{"title":"JavaScript开发者应懂的33个概念","date":"2019-06-30T16:00:00.000Z","description":"基本都是面试考点了","toc":1,"top":0,"_content":"\n## 简介\n[原文链接](https://github.com/stephentian/33-js-concepts)\n> 本篇文章是参照 @leonardomso 创立，英文版项目地址在[这里](https://github.com/leonardomso/33-js-concepts)。\n\n---\n\n## 目录\n\n1. **[调用堆栈](#1-调用堆栈)**\n2. **[原始类型](#2-原始类型)**\n3. **[值类型和引用类型](#3-值类型和引用类型)**\n4. **[隐式, 显式, 名义和鸭子类型](#4-隐式-显式-名义和鸭子类型)**\n5. **[== 与 ===, typeof 与 instanceof](#5--vs--typeof-vs-instanceof)**\n6. **[this, call, apply 和 bind](#6-this-call-apply-和-bind)**\n7. **[函数作用域, 块级作用域和词法作用域](#7-函数作用域-块级作用域和词法作用域)**\n8. **[闭包](#8-闭包)**\n9. **[map, reduce, filter 等高阶函数](#9-map-reduce-filter-等高阶函数)**\n10. **[表达式和语句](#10-表达式和语句)**\n11. **[变量提升](#11-变量提升)**\n12. **[Promise](#12-promise)**\n13. **[立即执行函数, 模块化, 命名空间](#13-立即执行函数-模块化-命名空间)**\n14. **[递归](#14-递归)**\n15. **[算法](#15-算法)**\n16. **[数据结构](#16-数据结构)**\n17. **[消息队列和事件循环](#17-消息队列和事件循环)**\n18. **[setTimeout, setInterval 和 requestAnimationFrame](#18-settimeout-setinterval-和-requestanimationframe)**\n19. **[继承, 多态和代码复用](#19-继承-多态和代码复用)**\n20. **[按位操作符, 类数组对象和类型化数组](#20-按位操作符-类数组对象和类型化数组)**\n21. **[DOM 树和渲染过程](#21-dom-树和渲染过程)**\n22. **[new 与构造函数, instanceof 与实例](#22-new-与构造函数-instanceof-与实例)**\n23. **[原型继承与原型链](#23-原型继承与原型链)**\n24. **[Object.create 和 Object.assign](#24-objectcreate-和-objectassign)**\n25. **[工厂函数和类](#25-工厂函数和类)**\n26. **[设计模式](#26-设计模式)**\n27. **[Memoization](#27-memoization)**\n28. **[纯函数, 函数副作用和状态变化](#28-纯函数-函数副作用和状态变化)**\n29. **[耗性能操作和时间复杂度](#29-耗性能操作和时间复杂度)**\n30. **[JavaScript 引擎](#30-javascript-引擎)**\n31. **[二进制, 十进制, 十六进制, 科学记数法](#31-二进制-十六进制-十进制-科学记数法)**\n32. **[偏函数, 柯里化, Compose 和 Pipe](#32-偏函数-柯里化-compose-和-pipe)**\n33. **[代码整洁之道](#33-代码整洁之道)**\n\n---\n\n## 1. 调用堆栈\n\n### 文章\n\n- :book: [Call Stack — MDN](https://developer.mozilla.org/zh-CN/docs/Glossary/Call_stack)\n- :book: [[译] JavaScript 如何工作：对引擎、运行时、调用堆栈的概述 —— 掘金](https://juejin.im/post/5a05b4576fb9a04519690d42)\n- :book: [[译] 理解 JavaScript 中的执行上下文和执行栈 —— 掘金](https://juejin.im/post/5ba32171f265da0ab719a6d7)\n- :book: [这一次，彻底弄懂 JavaScript 执行机制 —— 掘金](https://juejin.im/post/59e85eebf265da430d571f89)\n- :book: [解读 JavaScript 之引擎、运行时和堆栈调用 —— 开源中国](https://www.oschina.net/translate/how-does-javascript-actually-work-part-1)\n- :book: [Tasks, microtasks, queues and schedules —— Jake Archibald](https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/)\n- :book: [Tasks, microtasks, queues and schedules（译） —— 掘金](https://juejin.im/entry/55dbd51a60b2f3a92a8f5bff)\n\n### 视频\n\n- :tv: [What is the event loop anyway? —— 腾讯视频(英文字幕)](https://v.qq.com/x/page/h0372bld8re.html?ptag=qqbrowser)\n- :tv: [Understanding The JavaScript Call Stack, Event Queue, Event Table, & Event Loop —— Bilibili](https://www.bilibili.com/video/av33824933/)\n- :tv: [JS 中的变量提升、堆栈内存及闭包详解 —— Acfun](http://www.acfun.cn/v/ac4495641)\n- :tv: [事件循环模型 —— PHP 中文网](http://www.php.cn/code/21194.html)\n- :tv: [Javascript: the Call Stack explained — Coding Blocks India](https://www.youtube.com/watch?v=w6QGEiQceOM)\n- :tv: [The JS Call Stack Explained In 9 Minutes — Colt Steele](https://www.youtube.com/watch?v=W8AeMrVtFLY)\n- :tv: [JavaScript Execution Stack — Codecademy](https://www.youtube.com/watch?v=jT0USJeNFEA)\n- :tv: [What is the Call Stack? — Eric Traub](https://www.youtube.com/watch?v=w7QWQlkLY_s)\n- :tv: [The Call Stack — Kevin Drumm](https://www.youtube.com/watch?v=Q2sFmqvpBe0)\n- :tv: [Understanding JavaScript Execution — Codesmith](https://www.youtube.com/watch?v=Z6a1cLyq7Ac&list=PLWrQZnG8l0E4kd1T_nyuVoxQUaYEWFgcD)\n- :tv: [Call Stack & Event Loop — movies com](https://www.youtube.com/watch?v=mk0lu9MKBto)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 2. 原始类型\n\n### 文章\n\n- :book: [原始数据 —— MDN](https://developer.mozilla.org/zh-CN/docs/Glossary/Primitive)\n- :book: [[译]JavaScript 是怎样编码数字的 —— SegmentFault](https://segmentfault.com/a/1190000017090272)\n- :book: [每一个 JavaScript 开发者应该了解的浮点知识 —— 颜海镜](https://yanhaijing.com/javascript/2014/03/14/what-every-javascript-developer-should-know-about-floating-points/)\n- :book: [JavaScript 标准参考教程(基本语法之数值) —— 阮一峰](https://wangdoc.com/javascript/types/number.html)\n- :book: [The Secret Life of JavaScript Primitives —— Angus Croll](https://javascriptweblog.wordpress.com/2010/09/27/the-secret-life-of-javascript-primitives/)\n\n### 视频\n\n- :tv: [javascript 六种数据类型 —— 慕课网](https://www.imooc.com/video/5674)\n- :tv: [javascript 视频教程(数据类型) —— PHP 中文网](http://www.php.cn/code/5808.html)\n- :tv: [JavaScript Reference vs Primitive Types — Academind](https://www.youtube.com/watch?v=9ooYYRLdg_g)\n- :tv: [JavaScript Primitive Types — Simon Sez IT](https://www.youtube.com/watch?v=HsbWQsSCE5Y)\n- :tv: [Javascript Primitive and Reference Types — Baljeet Singh](https://www.youtube.com/watch?v=F7YbhKbpFic)\n- :tv: [Value Types and Reference Types in JavaScript — Programming with Mosh](https://www.youtube.com/watch?v=e-_mDyqm2oU)\n- :tv: [JavaScript Primitive Data Types — Avelx](https://www.youtube.com/watch?v=qw3j0A3DIzQ)\n- :tv: [Everything you never wanted to know about JavaScript numbers — Bartek Szopka](https://www.youtube.com/watch?v=MqHDDtVYJRI)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 3. 值类型和引用类型\n\n### 文章\n\n- :book: [ECMAScript 引用类型 —— W3school](http://www.w3school.com.cn/js/pro_js_referencetypes.asp)\n- :book: [js 中的值类型和引用类型的区别 —— 博客园](https://www.cnblogs.com/leiting/p/8081413.html)\n- :book: [JavaScript 的值传递和引用传递 —— FunDebug](https://blog.fundebug.com/2017/08/09/explain_value_reference_in_js/)\n- :book: [Primitive Types & Reference Types in JavaScript —— Bran van der Meer](https://docstore.mik.ua/orelly/webprog/jscript/ch04_04.htm)\n- :book: [JavaScript: Passing by Value or by Reference —— CSDN](https://blog.csdn.net/xiaojia_boke/article/details/54906509)\n- :book: [js 值引用和值复制 —— SegmentFault](https://segmentfault.com/a/1190000015411195)\n- :book: [js- 引用和复制(传值和传址) —— CSDN](https://blog.csdn.net/zzzaquarius/article/details/4902235)\n\n### 视频\n\n- :tv: [Javascript Pass by Value vs Pass by Reference — techsith](https://www.youtube.com/watch?v=E-dAnFdq8k8)\n- :tv: [JavaScript Value vs Reference Types — Programming with Mosh](https://www.youtube.com/watch?v=fD0t_DKREbE)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 4. 隐式, 显式, 名义和鸭子类型\n\n### 文章\n\n- :book: [ECMAScript 类型转换 —— W3school](http://www.w3school.com.cn/js/pro_js_typeconversion.asp)\n- :book: [JavaScript 的怪癖 1：隐式类型转换 —— justjavac](http://justjavac.com/javascript/2013/04/08/javascript-quirk-1-implicit-conversion-of-values.html)\n- :book: [JavaScript 运算符规则与隐式类型转换详解 —— 掘金](https://juejin.im/post/59ad2585f265da246a20e026)\n- :book: [聊一聊 JS 中的隐式类型转换 —— SegmentFault](https://segmentfault.com/a/1190000004482388)\n- :book: [有趣的 JavaScript 隐式类型转换 —— 博客园](https://www.cnblogs.com/yugege/p/5277883.html)\n- :book: [JavaScript 显式类型转换与隐式类型转换 —— CSDN](https://blog.csdn.net/yangjvn/article/details/48284163)\n- :book: [你不知道的 JavaScript（中卷）强制类型转换 —— 简书](https://www.jianshu.com/p/777a89b4ed9a)\n- :book: [你懂 JavaScript 嗎？#8 強制轉型 —— cythilya](https://ithelp.ithome.com.tw/articles/10201512)\n- :book: [动态类型语言和鸭子类型 —— 曾探](http://book.51cto.com/art/201505/475153.htm)\n- :book: [Nominal & Structural Typing —— flow](https://flow.org/en/docs/lang/nominal-structural/)\n- :book: [What exactly is Type Coercion in Javascript? —— stackoverflow](https://stackoverflow.com/questions/19915688/what-exactly-is-type-coercion-in-javascript)\n- :book: [You Don't Know JS: Types & Grammar —— github](https://github.com/getify/You-Dont-Know-JS/blob/master/types%20&%20grammar/ch4.md)\n\n### 视频\n\n- :tv: [javascript 隐式转换 —— 慕课网](https://www.imooc.com/video/5675)\n- :tv: [Javascript 基础加强-类型转换 —— 黑马程序员](http://www.le.com/ptv/vplay/27767009.html)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n<div id=\"5--vs--typeof-vs-instanceof\"></div>\n\n## 5. == vs ===, typeof vs instanceof\n\n### 文章\n\n- :book: [JavaScript 中的相等性判断 —— MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Equality_comparisons_and_sameness)\n- :book: [js 中 == 和 === 的区别 —— 掘金](https://juejin.im/entry/584918612f301e005716add6)\n- :book: [== vs === in Javascript —— CSDN](https://blog.csdn.net/w97531/article/details/82255225)\n- :book: [深入理解 javascript 之 typeof 和 instanceof —— CSDN](https://blog.csdn.net/mevicky/article/details/50353881)\n- :book: [JavaScript 的 typeof 的用途 —— justjavac](http://justjavac.com/javascript/2012/12/23/what-is-javascripts-typeof-operator-used-for.html)\n- :book: [一张图看懂 Function 和 Object 的关系及简述 instanceof 运算符 —— 掘金](https://juejin.im/post/58358606570c35005e4142bd)\n- :book: [浅谈 instanceof 和 typeof 的实现原理 —— 掘金](https://juejin.im/post/5b0b9b9051882515773ae714)\n- :book: [typeof 和 instanceOf 的区别](https://segmentfault.com/a/1190000000730982)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 6. this, call, apply 和 bind\n\n### 文章\n\n- :book: [Javascript 的 this 用法 —— 阮一峰](http://www.ruanyifeng.com/blog/2010/04/using_this_keyword_in_javascript.html)\n- :book: [学会 JS 的 this 这一篇就够了，根本不用记 —— 简书](https://www.jianshu.com/p/6b4333e78bf5)\n- :book: [[译] this（他喵的）到底是什么 — 理解 JavaScript 中的 this、call、apply 和 bind —— 掘金](https://juejin.im/post/5b9f176b6fb9a05d3827d03f)\n- :book: [this、apply、call、bind —— 掘金](https://juejin.im/post/59bfe84351882531b730bac2)\n- :book: [使用 call、apply 和 bind 解决 js 中烦人的 this，事件绑定时的 this 和传参问题 —— 博客园](https://www.cnblogs.com/tingyu-blog/p/6212392.html)\n- :book: [call、apply 和 bind 的原生实现 —— github](https://github.com/Abiel1024/blog/issues/16)\n\n### 视频\n\n- :tv: [JavaScript 关于 this 关键字解释 —— 爱奇艺](https://www.iqiyi.com/w_19rr1augsd.html)\n- :tv: [JS 关于作用域闭包和 this 的综合面试题 —— 百度视频](http://baidu.iqiyi.com/watch/845335533383874688.html?page=videoMultiNeed)\n- :tv: [js 面向对象闭包数组 12.函数中的 this —— 乐视视频](http://www.le.com/ptv/vplay/27478413.html?ch=baidu_s)\n- :tv: [1.3.10-this 指向及 this 应用 —— 乐视视频](http://www.le.com/ptv/vplay/24835911.html?ch=baidu_s)\n- :tv: [珠峰培训 JavaScript 开发课程：关于 this 关键字、闭包作用域 —— 网易云课堂](https://study.163.com/course/introduction/590005.htm)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 7. 函数作用域, 块级作用域和词法作用域\n\n### 文章\n\n- :book: [变量作用域与解构赋值 —— 廖雪峰](https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/0014344993159773a464f34e1724700a6d5dd9e235ceb7c000)\n- :book: [学习 Javascript 闭包（Closure） —— 阮一峰](http://www.ruanyifeng.com/blog/2009/08/learning_javascript_closures.html)\n- :book: [JavaScript 中词法作用域、闭包与跳出闭包 —— SegmentFault](https://segmentfault.com/a/1190000006671020)\n- :book: [JavaScript 深入之词法作用域和动态作用域 —— 掘金](https://juejin.im/entry/58e70077b123db15eb88dc7e)\n- :book: [深入理解闭包之前置知识 → 作用域与词法作用域 —— 掘金](https://juejin.im/post/5afb0ae56fb9a07aa2138425)\n- :book: [What is lexical scope? —— stackoverflow](https://stackoverflow.com/questions/1047454/what-is-lexical-scope)\n- :book: [You Don't Know JS: Scope & Closures —— Kyle Simpson](https://github.com/fishenal/You-Dont-Know-JS/blob/master/scope%20&%20closures/ch2.md)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 8. 闭包\n\n### 文章\n\n- :book: [闭包 —— MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Closures)\n- :book: [ECMAScript 闭包（closure）—— w3school](http://www.w3school.com.cn/js/pro_js_functions_closures.asp)\n- :book: [学习 Javascript 闭包（Closure） —— 阮一峰](http://www.ruanyifeng.com/blog/2009/08/learning_javascript_closures.html)\n- :book: [闭包 —— 廖雪峰](https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/00143449934543461c9d5dfeeb848f5b72bd012e1113d15000)\n- :book: [一次性搞懂 JavaScript 闭包 —— 简书](https://www.jianshu.com/p/796e903754f1)\n- :book: [JavaScript 闭包 —— SegmentFault](https://segmentfault.com/a/1190000006875662)\n- :book: [js 匿名自执行函数中闭包的高级使用 —— 掘金](https://juejin.im/entry/5800eb7da22b9d005b36156e)\n- :book: [高效使用 JavaScript 闭包 —— 掘金](https://juejin.im/entry/59df405251882551bf7e58c6)\n- :book: [深入理解 JavaScript 原型与闭包 —— 王福朋](https://www.cnblogs.com/wangfupeng1988/p/3977924.html)\n\n### 视频\n\n- :tv: [JavaScript 闭包和闭包面试题 —— 爱奇艺](http://www.iqiyi.com/w_19rr1amael.html)\n- :tv: [js 面向对象闭包数组 11.闭包 —— 乐视](http://www.le.com/ptv/vplay/27478410.html)\n- :tv: [白贺翔\\_函数(闭包) —— 乐视](http://www.le.com/ptv/vplay/30505852.html)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 9. map, reduce, filter 等高阶函数\n\n### 文章\n\n- :book: [高阶函数 —— 廖雪峰](https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/001434499355829ead974e550644e2ebd9fd8bb1b0dd721000)\n- :book: [ES5 中新增的 Array 方法详细说明 —— 张鑫旭](https://www.zhangxinxu.com/wordpress/2013/04/es5%e6%96%b0%e5%a2%9e%e6%95%b0%e7%bb%84%e6%96%b9%e6%b3%95/)\n- :book: [一张图看懂 JavaScript 中数组的迭代方法：forEach、map、filter、reduce、every、some —— 掘金](https://juejin.im/post/5835808067f3560065ed4ab2)\n- :book: [Transducing（上）－《JavaScript 轻量级函数式编程》 —— SegmentFault](https://segmentfault.com/a/1190000012127329)\n- :book: [JavaScript 函数式编程（三） —— @BuptStEve](https://github.com/BuptStEve/blog/issues/15)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 10. 表达式和语句\n\n### 文章\n\n- :book: [js 表达式与语句 —— 博客园](https://www.cnblogs.com/xianshenglu/p/8386918.html)\n- :book: [JS 表达式和语句的区别 —— SegmentFault](https://segmentfault.com/q/1010000004102804)\n- :book: [JavaScript 中的表达式（expression）和语句/声明（statement） —— CSDN](https://blog.csdn.net/mett_smith/article/details/78761247)\n- :book: [重讀 Axel 的 Javascript 中的 Expression vs Statement 一文 —— SegmentFault](https://segmentfault.com/a/1190000004565693)\n- :book: [Expressions versus statements in JavaScript —— Dr. Axel](http://2ality.com/2012/09/expressions-vs-statements.html)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 11. 变量提升\n\n### 文章\n\n- :book: [JavaScript 变量提升 —— 菜鸟教程](http://www.runoob.com/js/js-hoisting.html)\n- :book: [ES6 变量作用域与提升：变量的生命周期详解 —— 掘金](https://juejin.im/post/59905bea6fb9a03c34192c51)\n- :book: [[翻译] JavaScript Scoping and Hoisting —— SegmentFault](https://segmentfault.com/a/1190000004345355#articleHeader5)\n- :book: [JavaScript Scoping and Hoisting —— Ben Cherry](http://www.adequatelygood.com/JavaScript-Scoping-and-Hoisting.html)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 12. Promise\n\n### 文章\n\n- :book: [使用 promises —— MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Using_promises)\n- :book: [Promise —— MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise)\n- :book: [Promise — 廖雪峰](https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/0014345008539155e93fc16046d4bb7854943814c4f9dc2000)\n- :book: [JavaScript Promise：去而复返 —— 司徒正美](https://www.cnblogs.com/rubylouvre/p/3495286.html)\n- :book: [(上面的原文)JavaScript Promise：简介 —— Web Fundamentals](https://developers.google.com/web/fundamentals/primers/promises#_1)\n- :book: [1 分钟读完《10 分钟学会 JavaScript 的 Async/Await》 —— justjavac](https://segmentfault.com/a/1190000011813934)\n- :book: [JavaScript Promise 迷你书（中文版）](https://juejin.im/entry/56499ae160b2d1404c4f8834)\n- :book: [JavaScript 进阶之路——认识和使用 Promise，重构你的 Js 代码 —— 博客园](https://www.cnblogs.com/yunfeifei/p/4453690.html)\n\n### 视频\n\n- :tv: [Promise 入门 —— 慕课网](https://www.imooc.com/learn/949)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 13. 立即执行函数, 模块化, 命名空间\n\n### 文章\n\n- :book: [Javascript 模块化编程（一）：模块的写法 —— 阮一峰](http://www.ruanyifeng.com/blog/2012/10/javascript_module.html)\n- :book: [javascript 模块化编程-详解立即执行函数表达式 —— 简书](https://www.jianshu.com/p/4dbf4a4c8ebb)\n- :book: [Javascript 的匿名函数与自执行 —— 掘金](https://juejin.im/entry/57fee360a22b9d005b1d9ae3)\n- :book: [前端模块化——技术选型 —— SegmentFault](https://segmentfault.com/a/1190000006966358)\n- :book: [谈谈 Js 前端模块化规范 —— SegmentFault](https://segmentfault.com/a/1190000015991869#articleHeader8)\n- :book: [函数声明与函数表达式的区别 —— 伯乐在线](http://web.jobbole.com/87534/)\n\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 14. 递归\n\n### 文章\n\n- :book: [求解释 js 递归 —— SegmentFault](https://segmentfault.com/q/1010000003942347)\n- :book: [JavaScript 中的递归 —— 掘金](https://juejin.im/post/5948c0d8fe88c2006a939e2a)\n- :book: [递归（上）－《JavaScript 轻量级函数式编程》 —— 掘金](https://juejin.im/post/59c1d91d6fb9a00a53275f79)\n- :book: [递归（下）－《JavaScript 轻量级函数式编程》 —— 掘金](https://juejin.im/post/59c87fb46fb9a00a437b1a2e)\n- :book: [尾调用和尾递归 —— 掘金](https://juejin.im/post/5acdd7486fb9a028ca53547c)\n- :book: [几个经典递归问题用 js 实现 —— CSDN](https://blog.csdn.net/qianqianstd/article/details/75807462)\n- :book: [递归函数的几个例子 —— CSDN](https://blog.csdn.net/x_i_xw/article/details/72026868)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 15. 算法\n\n### 文章\n\n- :book: [十大经典排序算法总结（JavaScript 描述） —— 掘金](https://juejin.im/post/57dcd394a22b9d00610c5ec8)\n- :book: [在 JavaScript 中学习数据结构与算法 —— 掘金](https://juejin.im/post/594dfe795188250d725a220a#comment)\n- :book: [JS 中可能用得到的全部的排序算法 —— 掘金](https://juejin.im/post/58c9d5fb1b69e6006b686bce)\n- :book: [JS 家的排序算法 —— 简书](https://www.jianshu.com/p/1b4068ccd505)\n- :book: [前端常见算法的 JS 实现 —— SegmentFault](https://segmentfault.com/a/1190000008593715)\n- :book: [前端面试中的常见的算法问题 ——蒲小花的博客](https://www.jackpu.com/qian-duan-mian-shi-zhong-de-chang-jian-de-suan-fa-wen-ti/)\n\n### 视频\n\n- :tv: [Javascript 实现二叉树算法 —— 慕课网](https://www.imooc.com/learn/888)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 16. 数据结构\n\n### 文章\n\n- :book: [来我们浅谈一下 js 的数据结构 —— 简书](https://www.jianshu.com/p/5e0e8d183102)\n- :book: [JavaScript 中的算法与数据结构 —— 简书](https://www.jianshu.com/nb/16835496)\n- :book: [学 JS 必看-JavaScript 数据结构深度剖析 —— 大道至简的博客](http://blog.sina.com.cn/s/blog_7b9c5e4101017mjt.html)\n- :book: [js 中基础数据结构数组去重问题 —— 掘金](https://juejin.im/entry/586effe0da2f600053d85a9a)\n\n### 视频\n\n- :tv: :tv: [JavaScript 数据结构-运算符 —— 乐视](http://www.le.com/ptv/vplay/27606964.html)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 17. 消息队列和事件循环\n\n### 文章\n\n- :book: [并发模型与事件循环 —— MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/EventLoop)\n- :book: [JavaScript 运行机制详解：再谈 Event Loop —— 阮一峰](http://www.ruanyifeng.com/blog/2014/10/event-loop.html)\n- :book: [深入理解 JavaScript 事件循环 —— 博客园](https://www.cnblogs.com/dong-xu/p/7000163.html)\n- :book: [深入浅出 Javascript 事件循环机制 —— 知乎](https://zhuanlan.zhihu.com/p/26229293)\n- :book: [JS 事件循环机制（event loop）之宏任务、微任务 —— SegmentFault](https://segmentfault.com/a/1190000014940904#articleHeader7)\n- :book: [JavaScript：彻底理解同步、异步和事件循环 —— SegmentFault](https://segmentfault.com/a/1190000004322358)\n- :book: [从浏览器多进程到 JS 单线程，JS 运行机制最全面的一次梳理 —— 掘金](https://juejin.im/post/5a6547d0f265da3e283a1df7)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 18. setTimeout, setInterval 和 requestAnimationFrame\n\n### 文章\n\n- :book: [Window setTimeout() 方法 —— 菜鸟教程](http://www.runoob.com/jsref/met-win-settimeout.html)\n- :book: [Window setInterval() 方法 —— 菜鸟教程](http://www.runoob.com/jsref/met-win-setinterval.html)\n- :book: [关于 setTimeout —— 掘金](https://juejin.im/post/5aa4c47af265da239866e236)\n- :book: [你不知道的 Javascript：有趣的 setTimeout —— 掘金](https://juejin.im/post/5a77f8ce5188257a6d635d76)\n- :book: [原来你是这样的 setTimeout —— 掘金](https://juejin.im/entry/5861ebf01b69e6006ce61d38)\n- :book: [setTimeout() 和 setInterval() 本质区别在哪里？ —— SegmentFault](https://segmentfault.com/q/1010000005989491)\n- book: [window.requestAnimationFrame —— MDN](https://developer.mozilla.org/zh-CN/docs/Web/API/Window/requestAnimationFrame)\n- :book: [requestAnimationFrame 知多少？ —— 博客园](http://www.cnblogs.com/onepixel/p/7078617.html)\n- :book: [CSS3 动画那么强，requestAnimationFrame 还有毛线用？ —— 张鑫旭](https://www.zhangxinxu.com/wordpress/2013/09/css3-animation-requestanimationframe-tween-%e5%8a%a8%e7%94%bb%e7%ae%97%e6%b3%95/)\n- :book: [「JavaScript 定时器」setInterval、setTimeout 和 requestAnimationFrame 浅析 —— SegmentFault](https://segmentfault.com/a/1190000014661035)\n- :book: [翻译：setInterval 与 requestAnimationFrame 的时间间隔测试 —— SegmentFault](https://segmentfault.com/a/1190000000386368)\n- :book: [阿里前端面试题：requestAnimationFrame 实现类似 setInterval 的计时器 —— SegmentFault](https://segmentfault.com/q/1010000013909430)\n\n### 视频\n\n- :tv: [setTimeout 和 setInterval —— 优酷](http://v.youku.com/v_show/id_XNTA4OTQ0NzA0.html)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 19. 继承, 多态和代码复用\n\n### 文章\n\n- :book: [JS 面向对象编程之：封装、继承、多态 —— 博客园](https://www.cnblogs.com/Leo_wl/p/5734794.html)\n- :book: [Javascript 的继承与多态 —— 简书](https://www.jianshu.com/p/5cb692658704)\n- :book: [js:面向对象编程，带你认识封装、继承和多态 —— 掘金](https://juejin.im/post/59396c96fe88c2006afc2707)\n- :book: [JavaScript 中的“多继承” —— 掘金](https://zhuanlan.zhihu.com/p/34693209)\n- :book: [代码复用模式 —— github](https://github.com/TooBug/javascript.patterns/blob/master/chapter6.markdown)\n- :book: [深入理解 JavaScript：代码复用模式(推荐篇) —— 汤姆大叔](http://www.cnblogs.com/TomXu/archive/2012/04/24/2438050.html)\n- :book: [深入理解 JavaScript：代码复用模式(避免篇) —— 汤姆大叔](https://www.cnblogs.com/TomXu/archive/2012/04/23/2438005.html)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 20. 按位操作符, 类数组对象和类型化数组\n\n### 文章\n\n- :book: [按位操作符 —— MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators)\n- :book: [类数组对象 —— MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Typed_arrays)\n- :book: [类型化数组 —— MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer)\n- :book: [JavaScript ArrayBuffer 浅析 —— 博客园](https://www.cnblogs.com/gradolabs/p/4762134.html)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 21. DOM 树和渲染过程\n\n### 文章\n\n- :book: [如何创建一个 DOM 树 —— MDN](https://developer.mozilla.org/zh-CN/docs/Web/API/Document_Object_Model/How_to_create_a_DOM_tree)\n- :book: [HTML DOM 节点 —— W3school](http://www.w3school.com.cn/htmldom/dom_nodes.asp)\n- :book: [DOM 概述 —— 阮一峰](http://javascript.ruanyifeng.com/dom/node.html)\n- :book: [《JavaScript 闯关记》之 DOM（上）—— 掘金](https://juejin.im/post/583cbbfa61ff4b006ccc41fe)\n- :book: [《JavaScript 闯关记》之 DOM（下）—— 掘金](https://juejin.im/post/583cbc4961ff4b006ccc44fb)\n- :book: [掌握 DOM 操作 —— 掘金](https://juejin.im/entry/58314efd8ac2470061bb30fd)\n- :book: [操作 DOM —— 廖雪峰](https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/001434500494451273e6b3dec9d411d9ba841dee8caec45000)\n- :book: [原来 CSS 与 JS 是这样阻塞 DOM 解析和渲染的 —— 掘金](https://juejin.im/post/59c60691518825396f4f71a1)\n\n### 视频\n\n- :tv: [DOM 探索之基础详解篇 —— 慕课网](https://www.imooc.com/learn/488)\n- :tv: [DOM 事件探秘 —— 慕课网](https://www.imooc.com/learn/138)\n- :tv: [jQuery 基础(二)DOM 篇 —— 慕课网](https://www.imooc.com/learn/530)\n- :tv: [JS 操作 DOM 对象属性和方法 —— 爱奇艺](http://www.iqiyi.com/w_19rr19s08l.html)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 22. new 与构造函数, instanceof 与实例\n\n### 文章\n\n- :book: [构造函数与 new 命令 —— 阮一峰](http://javascript.ruanyifeng.com/oop/basic.html)\n- :book: [Javascript 面向对象编程（二）：构造函数的继承 —— 阮一峰](http://www.ruanyifeng.com/blog/2010/05/object-oriented_javascript_inheritance.html)\n- :book: [完整原型链详细图解(构造函数、原型、实例化对象) —— CSDN](https://blog.csdn.net/SpicyBoiledFish/article/details/71123162)\n- :book: [JavaScript 中构造函数与 new 操作符的实例详解 —— PHP 中文网](http://www.php.cn/js-tutorial-376246.html)\n- :book: [构造函数、实例、原型、原型链之间的关系 —— CSDN](https://blog.csdn.net/yin_991/article/details/80954453)\n- :book: [深入理解 JS—instanceof 和原型链 —— CSDN](https://blog.csdn.net/cecilia620/article/details/71158048)\n- :book: [前端基础进阶（九）：详解面向对象、构造函数、原型与原型链 —— 简书](https://www.jianshu.com/p/15ac7393bc1f)\n- :book: [js 用 new 实例化对象与直接调用的 this 的区别 —— 简书](https://www.jianshu.com/p/60ffc4831bff)\n- :book: [JavaScript 并非所有的东西都是对象 —— justjavac](http://justjavac.com/javascript/2012/12/22/javascript-values-not-everything-is-an-object.html)\n- :book: [JavaScript instanceof 运算符深入剖析 —— IBM](https://www.ibm.com/developerworks/cn/web/1306_jiangjj_jsinstanceof/)\n\n### 视频\n\n- :tv: [改良版的构造函数 —— 乐视](http://www.le.com/ptv/vplay/27766889.html)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 23. 原型继承与原型链\n\n### 文章\n\n- :book: [继承与原型链 —— MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Inheritance_and_the_prototype_chain)\n- :book: [构造函数、原型与原型链 —— github](https://github.com/bigdots/blog/issues/1)\n- :book: [原型及原型链 —— github(1269 Star)](https://github.com/stone0090/javascript-lessons/tree/master/2.5-Prototype)\n- :book: [理清 javascript 中的面向对象(一) 原型继承 —— SegmentFault](https://segmentfault.com/a/1190000004282206)\n- :book: [JavaScript：继承和原型链(译) —— justjavac](http://justjavac.com/2015/12/09/inheritance-and-the-prototype-chain.html)\n- :book: [三张图搞懂 JavaScript 的原型对象与原型链 —— 博客园](http://www.cnblogs.com/shuiyi/p/5305435.html)\n- :book: [一张图让你搞懂 JavaScript 的继承与原型链 —— CSDN](https://blog.csdn.net/the__apollo/article/details/76774698)\n- :book: [JS 高级--原型链(一看就懂，但 18 岁以下请绕道) —— CSDN](https://blog.csdn.net/xiaotao_css/article/details/72782416)\n- :book: [原型继承 —— 廖雪峰](https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/0014344997013405abfb7f0e1904a04ba6898a384b1e925000)\n- :book: [JS 原型链与继承别再被问倒了 —— 掘金](https://juejin.im/post/58f94c9bb123db411953691b)\n- :book: [征服 JavaScript 面试系列：类继承和原型继承的区别 —— 掘金](https://juejin.im/entry/5885db221b69e600592253e7)\n- :book: [JavaScript 深入之从原型到原型链 —— 冴羽](https://github.com/mqyqingfeng/Blog/issues/2)\n- :book: [深入理解 JavaScript 原型与闭包 —— 王福朋](https://www.cnblogs.com/wangfupeng1988/p/3977924.html)\n\n### 视频\n\n- :tv: [JS 高级-07-原型链继承 —— 乐视](http://www.le.com/ptv/vplay/27552753.html)\n- :tv: [JS 原型对象和原型链简介 —— 腾讯视频](https://v.qq.com/x/page/b0511nwa7d3.html)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 24. Object.create 和 Object.assign\n\n### 文章\n\n- :book: [Object.create —— MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/create)\n- :book: [Object.assign —— MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n- :book: [Object.create vs Object.assign —— 慕课网手记](https://www.imooc.com/article/17591)\n- :book: [JS 中的 Object.assign()、Object.create()、Object.defineProperty() —— CSDN](https://blog.csdn.net/DeepLies/article/details/52915143)\n- :book: [es6 中 object.create()和 object.assign() —— 风信子博客](http://www.onlyfordream.cn/2018/03/19/es6%E4%B8%ADobject-create%E5%92%8Cobject-assign/)\n- :book: [Object-Assign-Deep —— github](https://github.com/saikojosh/Object-Assign-Deep)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 25. 工厂函数和类\n\n### 文章\n\n- :book: [类 —— MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Classes)\n- :book: [类和实例 —— 廖雪峰](https://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/00138682004077376d2d7f8cc8a4e2c9982f92788588322000)\n- :book: [Javascript 定义类（class）的三种方法 —— 阮一峰](http://www.ruanyifeng.com/blog/2012/07/three_ways_to_define_a_javascript_class.html)\n- :book: [【译】ES6 的工厂函数 —— 掘金](https://juejin.im/post/59c8c8756fb9a00a681ae5bd)\n- :book: [JavaScript 创建对象之单例、工厂、构造函数模式 —— 掘金](https://juejin.im/entry/587992c961ff4b0065edf1ff)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 26. 设计模式\n\n### 文章\n\n- :book: [JavaScript 设计模式 —— 掘金](https://juejin.im/post/59df4f74f265da430f311909)\n- :book: [学用 JavaScript 设计模式 —— 极客学院](http://wiki.jikexueyuan.com/project/javascript-design-patterns/)\n- :book: [[面试专题]JS 设计模式 —— SegmentFault](https://segmentfault.com/a/1190000010914032)\n- :book: [JavaScript Patterns 中译本 —— github](https://github.com/lxj/javascript.patterns)\n\n### 视频\n\n- :tv: [HTML5 课程大纲 2-11JS 设计模式](https://tv.sohu.com/v/dXMvMjQwNzYwNzQ4Lzg5NzM2MDA3LnNodG1s.html)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 27. Memoization\n\n### 文章\n\n- :book: [JavaScript Memoization —— 司徒正美](https://www.cnblogs.com/rubylouvre/archive/2009/08/06/1540678.html)\n- :book: [memoization 提升递归效率 —— 博客园](https://www.cnblogs.com/yingshuizy/p/4517102.html)\n- :book: [如何提升 JavaScript 的递归效率 —— 51CTO](http://developer.51cto.com/art/201010/231513.htm)\n- :book: [JavaScript 高级技巧 Memoization —— SegmentFaut](https://segmentfault.com/a/1190000016703106)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 28. 纯函数, 函数副作用和状态变化\n\n### 文章\n\n- :book: [纯函数(Pure Function) —— React.js 小书](http://huziketang.mangojuice.top/books/react/lesson32)\n- :book: [JavaScript Functional Programming：纯函数 —— 宁皓网](https://ninghao.net/blog/4634)\n- :book: [js 函数的副作用分析 —— 脚本之家](https://www.jb51.net/article/28079.htm)\n- :book: [如何使用纯函数式 JavaScript 处理脏副作用 —— 掘金](https://juejin.im/post/5b82bdb351882542e241ed32?utm_medium=hao.caibaojian.com&utm_source=hao.caibaojian.com)\n- :book: [原生 JavaScript 实现 state 状态管理系统 —— 博客园](http://www.cnblogs.com/zhangycun/p/9403335.html)\n- :book: [JavaScript 函数式编程 —— @BuptStEve](https://github.com/BuptStEve/blog/issues/10)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 29. 耗性能操作和时间复杂度\n\n### 文章\n\n- :book: [时间复杂度 O(log n) 意味着什么？ —— 掘金](https://juejin.im/entry/593f56528d6d810058a355f4)\n- :book: [算法的时间复杂度和空间复杂度 —— 掘金](https://juejin.im/entry/5a49f7d36fb9a0450a67b269)\n- :book: [算法（一）时间复杂度 —— 掘金](https://juejin.im/post/58d15f1044d90400691834d4)\n- :book: [Big O Search Algorithms in JavaScript —— Bradley Braithwaite](http://www.bradoncode.com/blog/2012/04/big-o-algorithm-examples-in-javascript.html)\n- :book: [Time Complexity Analysis in JavaScript — Jennifer Bland](https://www.jenniferbland.com/time-complexity-analysis-in-javascript/)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 30. JavaScript 引擎\n\n### 文章\n\n- :book: [javascript 引擎 —— 百度百科](https://baike.baidu.com/item/javascript引擎/5356108)\n- :book: [V8(JavaScript 引擎) —— 百度百科](https://baike.baidu.com/item/V8/6178125)\n- :book: [图解搞懂 JavaScript 引擎 Event Loop —— 掘金](https://juejin.im/post/5a6309f76fb9a01cab2858b1)3\n- :book: [V8 JavaScript 引擎：高性能的 ES2015+ —— justjavac](https://segmentfault.com/a/1190000010819020)\n- :book: [10 分钟理解 JS 引擎的执行机制 —— SegmentFaut](https://segmentfault.com/a/1190000012806637)\n- :book: [V8 javascript 引擎 —— 博客园](https://www.cnblogs.com/weirdoQi/p/6609811.html)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 31. 二进制, 十六进制, 十进制, 科学记数法\n\n### 文章\n\n- :book: [二、八、十、十六进制转换(图解篇) —— 博客园](http://www.cnblogs.com/gaizai/p/4233780.html)\n- :book: [JavaScript 读写二进制数据 —— 掘金](https://juejin.im/post/5b93dadaf265da0a857a58a3)\n\n### 视频\n\n- :tv: [二进制、十进制、十六进制互相转化很难吗？ —— 百度视频](http://baishi.baidu.com/watch/7873060963471478456.html)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 32. 偏函数, 柯里化, Compose 和 Pipe\n\n### 文章\n\n- :book: [Javascript 函数式编程之偏函数 —— CSDN](https://blog.csdn.net/qq_42129063/article/details/81874314)\n- :book: [JavaScript 专题之偏函数 —— SegmentFault](https://segmentfault.com/a/1190000010686144)\n- :book: [柯里化和偏函数有什么区别？ —— SegmentFault](https://segmentfault.com/q/1010000008626058)\n- :book: [Javascript 偏函数与柯里化 —— CSDN](https://blog.csdn.net/neweastsun/article/details/75947785)\n- :book: [柯里化(curry) —— JS 函数式编程指南](https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch4.html)\n- :book: [代码组合(compose) —— JS 函数式编程指南](https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch5.html)\n- :book: [关于 javascript 函数式编程中 compose 的实现 —— SegmentFault](https://segmentfault.com/a/1190000008394749)\n- :book: [实现 compose 的五种思路 —— SegmentFault](https://segmentfault.com/a/1190000011447164)\n- :book: [JavaScript 函数式编程之函数组合函数 compose 和 pipe 的实现 —— SegmentFault](https://segmentfault.com/a/1190000015102804)\n- :book: [JavaScript 轻量级函数式编程-第 4 章:组合函数 ——掘金](https://juejin.im/post/59a62f3d6fb9a0248363fd9d#comment)\n- :book: [JavaScript 函数式编程（二） —— @BuptStEve](https://github.com/BuptStEve/blog/issues/11)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 33. 代码整洁之道\n\n### 文章\n\n- :book: [[译] JavaScript 代码整洁之道 —— 边城](https://www.zcfy.cc/article/clean-code-javascript-readme-md-at-master-ryanmcdermott-clean-code-javascript-github-2273.html)\n- :book: [Javascript 编程风格 —— 阮一峰](http://www.ruanyifeng.com/blog/2012/04/javascript_programming_style.html)\n- :book: [重构 - 代码整洁之道 —— 掘金](https://juejin.im/post/5a5b2a5c6fb9a01cbc6e59f9)\n- :book: [让你的代码更简短，更整洁，更易读的 ES6 小技巧 —— 掘金](https://juejin.im/post/5a7d71836fb9a063435ecf51)\n- :book: [Web 前端：11 个让你代码整洁的原则 —— 伯乐在线](http://blog.jobbole.com/23617/)\n- :book: [Clean Code concepts adapted for JavaScript —— ryanmcdermott](https://github.com/ryanmcdermott/clean-code-javascript)\n\n<br>\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n","source":"_posts/33_js_concepts.md","raw":"---\ntitle: JavaScript开发者应懂的33个概念\ncategories:\n    - js # 一级分类\ntags:\n    - js\ndate: 2019-07-01\ndescription: 基本都是面试考点了\ntoc: 1\ntop: 0\n---\n\n## 简介\n[原文链接](https://github.com/stephentian/33-js-concepts)\n> 本篇文章是参照 @leonardomso 创立，英文版项目地址在[这里](https://github.com/leonardomso/33-js-concepts)。\n\n---\n\n## 目录\n\n1. **[调用堆栈](#1-调用堆栈)**\n2. **[原始类型](#2-原始类型)**\n3. **[值类型和引用类型](#3-值类型和引用类型)**\n4. **[隐式, 显式, 名义和鸭子类型](#4-隐式-显式-名义和鸭子类型)**\n5. **[== 与 ===, typeof 与 instanceof](#5--vs--typeof-vs-instanceof)**\n6. **[this, call, apply 和 bind](#6-this-call-apply-和-bind)**\n7. **[函数作用域, 块级作用域和词法作用域](#7-函数作用域-块级作用域和词法作用域)**\n8. **[闭包](#8-闭包)**\n9. **[map, reduce, filter 等高阶函数](#9-map-reduce-filter-等高阶函数)**\n10. **[表达式和语句](#10-表达式和语句)**\n11. **[变量提升](#11-变量提升)**\n12. **[Promise](#12-promise)**\n13. **[立即执行函数, 模块化, 命名空间](#13-立即执行函数-模块化-命名空间)**\n14. **[递归](#14-递归)**\n15. **[算法](#15-算法)**\n16. **[数据结构](#16-数据结构)**\n17. **[消息队列和事件循环](#17-消息队列和事件循环)**\n18. **[setTimeout, setInterval 和 requestAnimationFrame](#18-settimeout-setinterval-和-requestanimationframe)**\n19. **[继承, 多态和代码复用](#19-继承-多态和代码复用)**\n20. **[按位操作符, 类数组对象和类型化数组](#20-按位操作符-类数组对象和类型化数组)**\n21. **[DOM 树和渲染过程](#21-dom-树和渲染过程)**\n22. **[new 与构造函数, instanceof 与实例](#22-new-与构造函数-instanceof-与实例)**\n23. **[原型继承与原型链](#23-原型继承与原型链)**\n24. **[Object.create 和 Object.assign](#24-objectcreate-和-objectassign)**\n25. **[工厂函数和类](#25-工厂函数和类)**\n26. **[设计模式](#26-设计模式)**\n27. **[Memoization](#27-memoization)**\n28. **[纯函数, 函数副作用和状态变化](#28-纯函数-函数副作用和状态变化)**\n29. **[耗性能操作和时间复杂度](#29-耗性能操作和时间复杂度)**\n30. **[JavaScript 引擎](#30-javascript-引擎)**\n31. **[二进制, 十进制, 十六进制, 科学记数法](#31-二进制-十六进制-十进制-科学记数法)**\n32. **[偏函数, 柯里化, Compose 和 Pipe](#32-偏函数-柯里化-compose-和-pipe)**\n33. **[代码整洁之道](#33-代码整洁之道)**\n\n---\n\n## 1. 调用堆栈\n\n### 文章\n\n- :book: [Call Stack — MDN](https://developer.mozilla.org/zh-CN/docs/Glossary/Call_stack)\n- :book: [[译] JavaScript 如何工作：对引擎、运行时、调用堆栈的概述 —— 掘金](https://juejin.im/post/5a05b4576fb9a04519690d42)\n- :book: [[译] 理解 JavaScript 中的执行上下文和执行栈 —— 掘金](https://juejin.im/post/5ba32171f265da0ab719a6d7)\n- :book: [这一次，彻底弄懂 JavaScript 执行机制 —— 掘金](https://juejin.im/post/59e85eebf265da430d571f89)\n- :book: [解读 JavaScript 之引擎、运行时和堆栈调用 —— 开源中国](https://www.oschina.net/translate/how-does-javascript-actually-work-part-1)\n- :book: [Tasks, microtasks, queues and schedules —— Jake Archibald](https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/)\n- :book: [Tasks, microtasks, queues and schedules（译） —— 掘金](https://juejin.im/entry/55dbd51a60b2f3a92a8f5bff)\n\n### 视频\n\n- :tv: [What is the event loop anyway? —— 腾讯视频(英文字幕)](https://v.qq.com/x/page/h0372bld8re.html?ptag=qqbrowser)\n- :tv: [Understanding The JavaScript Call Stack, Event Queue, Event Table, & Event Loop —— Bilibili](https://www.bilibili.com/video/av33824933/)\n- :tv: [JS 中的变量提升、堆栈内存及闭包详解 —— Acfun](http://www.acfun.cn/v/ac4495641)\n- :tv: [事件循环模型 —— PHP 中文网](http://www.php.cn/code/21194.html)\n- :tv: [Javascript: the Call Stack explained — Coding Blocks India](https://www.youtube.com/watch?v=w6QGEiQceOM)\n- :tv: [The JS Call Stack Explained In 9 Minutes — Colt Steele](https://www.youtube.com/watch?v=W8AeMrVtFLY)\n- :tv: [JavaScript Execution Stack — Codecademy](https://www.youtube.com/watch?v=jT0USJeNFEA)\n- :tv: [What is the Call Stack? — Eric Traub](https://www.youtube.com/watch?v=w7QWQlkLY_s)\n- :tv: [The Call Stack — Kevin Drumm](https://www.youtube.com/watch?v=Q2sFmqvpBe0)\n- :tv: [Understanding JavaScript Execution — Codesmith](https://www.youtube.com/watch?v=Z6a1cLyq7Ac&list=PLWrQZnG8l0E4kd1T_nyuVoxQUaYEWFgcD)\n- :tv: [Call Stack & Event Loop — movies com](https://www.youtube.com/watch?v=mk0lu9MKBto)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 2. 原始类型\n\n### 文章\n\n- :book: [原始数据 —— MDN](https://developer.mozilla.org/zh-CN/docs/Glossary/Primitive)\n- :book: [[译]JavaScript 是怎样编码数字的 —— SegmentFault](https://segmentfault.com/a/1190000017090272)\n- :book: [每一个 JavaScript 开发者应该了解的浮点知识 —— 颜海镜](https://yanhaijing.com/javascript/2014/03/14/what-every-javascript-developer-should-know-about-floating-points/)\n- :book: [JavaScript 标准参考教程(基本语法之数值) —— 阮一峰](https://wangdoc.com/javascript/types/number.html)\n- :book: [The Secret Life of JavaScript Primitives —— Angus Croll](https://javascriptweblog.wordpress.com/2010/09/27/the-secret-life-of-javascript-primitives/)\n\n### 视频\n\n- :tv: [javascript 六种数据类型 —— 慕课网](https://www.imooc.com/video/5674)\n- :tv: [javascript 视频教程(数据类型) —— PHP 中文网](http://www.php.cn/code/5808.html)\n- :tv: [JavaScript Reference vs Primitive Types — Academind](https://www.youtube.com/watch?v=9ooYYRLdg_g)\n- :tv: [JavaScript Primitive Types — Simon Sez IT](https://www.youtube.com/watch?v=HsbWQsSCE5Y)\n- :tv: [Javascript Primitive and Reference Types — Baljeet Singh](https://www.youtube.com/watch?v=F7YbhKbpFic)\n- :tv: [Value Types and Reference Types in JavaScript — Programming with Mosh](https://www.youtube.com/watch?v=e-_mDyqm2oU)\n- :tv: [JavaScript Primitive Data Types — Avelx](https://www.youtube.com/watch?v=qw3j0A3DIzQ)\n- :tv: [Everything you never wanted to know about JavaScript numbers — Bartek Szopka](https://www.youtube.com/watch?v=MqHDDtVYJRI)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 3. 值类型和引用类型\n\n### 文章\n\n- :book: [ECMAScript 引用类型 —— W3school](http://www.w3school.com.cn/js/pro_js_referencetypes.asp)\n- :book: [js 中的值类型和引用类型的区别 —— 博客园](https://www.cnblogs.com/leiting/p/8081413.html)\n- :book: [JavaScript 的值传递和引用传递 —— FunDebug](https://blog.fundebug.com/2017/08/09/explain_value_reference_in_js/)\n- :book: [Primitive Types & Reference Types in JavaScript —— Bran van der Meer](https://docstore.mik.ua/orelly/webprog/jscript/ch04_04.htm)\n- :book: [JavaScript: Passing by Value or by Reference —— CSDN](https://blog.csdn.net/xiaojia_boke/article/details/54906509)\n- :book: [js 值引用和值复制 —— SegmentFault](https://segmentfault.com/a/1190000015411195)\n- :book: [js- 引用和复制(传值和传址) —— CSDN](https://blog.csdn.net/zzzaquarius/article/details/4902235)\n\n### 视频\n\n- :tv: [Javascript Pass by Value vs Pass by Reference — techsith](https://www.youtube.com/watch?v=E-dAnFdq8k8)\n- :tv: [JavaScript Value vs Reference Types — Programming with Mosh](https://www.youtube.com/watch?v=fD0t_DKREbE)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 4. 隐式, 显式, 名义和鸭子类型\n\n### 文章\n\n- :book: [ECMAScript 类型转换 —— W3school](http://www.w3school.com.cn/js/pro_js_typeconversion.asp)\n- :book: [JavaScript 的怪癖 1：隐式类型转换 —— justjavac](http://justjavac.com/javascript/2013/04/08/javascript-quirk-1-implicit-conversion-of-values.html)\n- :book: [JavaScript 运算符规则与隐式类型转换详解 —— 掘金](https://juejin.im/post/59ad2585f265da246a20e026)\n- :book: [聊一聊 JS 中的隐式类型转换 —— SegmentFault](https://segmentfault.com/a/1190000004482388)\n- :book: [有趣的 JavaScript 隐式类型转换 —— 博客园](https://www.cnblogs.com/yugege/p/5277883.html)\n- :book: [JavaScript 显式类型转换与隐式类型转换 —— CSDN](https://blog.csdn.net/yangjvn/article/details/48284163)\n- :book: [你不知道的 JavaScript（中卷）强制类型转换 —— 简书](https://www.jianshu.com/p/777a89b4ed9a)\n- :book: [你懂 JavaScript 嗎？#8 強制轉型 —— cythilya](https://ithelp.ithome.com.tw/articles/10201512)\n- :book: [动态类型语言和鸭子类型 —— 曾探](http://book.51cto.com/art/201505/475153.htm)\n- :book: [Nominal & Structural Typing —— flow](https://flow.org/en/docs/lang/nominal-structural/)\n- :book: [What exactly is Type Coercion in Javascript? —— stackoverflow](https://stackoverflow.com/questions/19915688/what-exactly-is-type-coercion-in-javascript)\n- :book: [You Don't Know JS: Types & Grammar —— github](https://github.com/getify/You-Dont-Know-JS/blob/master/types%20&%20grammar/ch4.md)\n\n### 视频\n\n- :tv: [javascript 隐式转换 —— 慕课网](https://www.imooc.com/video/5675)\n- :tv: [Javascript 基础加强-类型转换 —— 黑马程序员](http://www.le.com/ptv/vplay/27767009.html)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n<div id=\"5--vs--typeof-vs-instanceof\"></div>\n\n## 5. == vs ===, typeof vs instanceof\n\n### 文章\n\n- :book: [JavaScript 中的相等性判断 —— MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Equality_comparisons_and_sameness)\n- :book: [js 中 == 和 === 的区别 —— 掘金](https://juejin.im/entry/584918612f301e005716add6)\n- :book: [== vs === in Javascript —— CSDN](https://blog.csdn.net/w97531/article/details/82255225)\n- :book: [深入理解 javascript 之 typeof 和 instanceof —— CSDN](https://blog.csdn.net/mevicky/article/details/50353881)\n- :book: [JavaScript 的 typeof 的用途 —— justjavac](http://justjavac.com/javascript/2012/12/23/what-is-javascripts-typeof-operator-used-for.html)\n- :book: [一张图看懂 Function 和 Object 的关系及简述 instanceof 运算符 —— 掘金](https://juejin.im/post/58358606570c35005e4142bd)\n- :book: [浅谈 instanceof 和 typeof 的实现原理 —— 掘金](https://juejin.im/post/5b0b9b9051882515773ae714)\n- :book: [typeof 和 instanceOf 的区别](https://segmentfault.com/a/1190000000730982)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 6. this, call, apply 和 bind\n\n### 文章\n\n- :book: [Javascript 的 this 用法 —— 阮一峰](http://www.ruanyifeng.com/blog/2010/04/using_this_keyword_in_javascript.html)\n- :book: [学会 JS 的 this 这一篇就够了，根本不用记 —— 简书](https://www.jianshu.com/p/6b4333e78bf5)\n- :book: [[译] this（他喵的）到底是什么 — 理解 JavaScript 中的 this、call、apply 和 bind —— 掘金](https://juejin.im/post/5b9f176b6fb9a05d3827d03f)\n- :book: [this、apply、call、bind —— 掘金](https://juejin.im/post/59bfe84351882531b730bac2)\n- :book: [使用 call、apply 和 bind 解决 js 中烦人的 this，事件绑定时的 this 和传参问题 —— 博客园](https://www.cnblogs.com/tingyu-blog/p/6212392.html)\n- :book: [call、apply 和 bind 的原生实现 —— github](https://github.com/Abiel1024/blog/issues/16)\n\n### 视频\n\n- :tv: [JavaScript 关于 this 关键字解释 —— 爱奇艺](https://www.iqiyi.com/w_19rr1augsd.html)\n- :tv: [JS 关于作用域闭包和 this 的综合面试题 —— 百度视频](http://baidu.iqiyi.com/watch/845335533383874688.html?page=videoMultiNeed)\n- :tv: [js 面向对象闭包数组 12.函数中的 this —— 乐视视频](http://www.le.com/ptv/vplay/27478413.html?ch=baidu_s)\n- :tv: [1.3.10-this 指向及 this 应用 —— 乐视视频](http://www.le.com/ptv/vplay/24835911.html?ch=baidu_s)\n- :tv: [珠峰培训 JavaScript 开发课程：关于 this 关键字、闭包作用域 —— 网易云课堂](https://study.163.com/course/introduction/590005.htm)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 7. 函数作用域, 块级作用域和词法作用域\n\n### 文章\n\n- :book: [变量作用域与解构赋值 —— 廖雪峰](https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/0014344993159773a464f34e1724700a6d5dd9e235ceb7c000)\n- :book: [学习 Javascript 闭包（Closure） —— 阮一峰](http://www.ruanyifeng.com/blog/2009/08/learning_javascript_closures.html)\n- :book: [JavaScript 中词法作用域、闭包与跳出闭包 —— SegmentFault](https://segmentfault.com/a/1190000006671020)\n- :book: [JavaScript 深入之词法作用域和动态作用域 —— 掘金](https://juejin.im/entry/58e70077b123db15eb88dc7e)\n- :book: [深入理解闭包之前置知识 → 作用域与词法作用域 —— 掘金](https://juejin.im/post/5afb0ae56fb9a07aa2138425)\n- :book: [What is lexical scope? —— stackoverflow](https://stackoverflow.com/questions/1047454/what-is-lexical-scope)\n- :book: [You Don't Know JS: Scope & Closures —— Kyle Simpson](https://github.com/fishenal/You-Dont-Know-JS/blob/master/scope%20&%20closures/ch2.md)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 8. 闭包\n\n### 文章\n\n- :book: [闭包 —— MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Closures)\n- :book: [ECMAScript 闭包（closure）—— w3school](http://www.w3school.com.cn/js/pro_js_functions_closures.asp)\n- :book: [学习 Javascript 闭包（Closure） —— 阮一峰](http://www.ruanyifeng.com/blog/2009/08/learning_javascript_closures.html)\n- :book: [闭包 —— 廖雪峰](https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/00143449934543461c9d5dfeeb848f5b72bd012e1113d15000)\n- :book: [一次性搞懂 JavaScript 闭包 —— 简书](https://www.jianshu.com/p/796e903754f1)\n- :book: [JavaScript 闭包 —— SegmentFault](https://segmentfault.com/a/1190000006875662)\n- :book: [js 匿名自执行函数中闭包的高级使用 —— 掘金](https://juejin.im/entry/5800eb7da22b9d005b36156e)\n- :book: [高效使用 JavaScript 闭包 —— 掘金](https://juejin.im/entry/59df405251882551bf7e58c6)\n- :book: [深入理解 JavaScript 原型与闭包 —— 王福朋](https://www.cnblogs.com/wangfupeng1988/p/3977924.html)\n\n### 视频\n\n- :tv: [JavaScript 闭包和闭包面试题 —— 爱奇艺](http://www.iqiyi.com/w_19rr1amael.html)\n- :tv: [js 面向对象闭包数组 11.闭包 —— 乐视](http://www.le.com/ptv/vplay/27478410.html)\n- :tv: [白贺翔\\_函数(闭包) —— 乐视](http://www.le.com/ptv/vplay/30505852.html)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 9. map, reduce, filter 等高阶函数\n\n### 文章\n\n- :book: [高阶函数 —— 廖雪峰](https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/001434499355829ead974e550644e2ebd9fd8bb1b0dd721000)\n- :book: [ES5 中新增的 Array 方法详细说明 —— 张鑫旭](https://www.zhangxinxu.com/wordpress/2013/04/es5%e6%96%b0%e5%a2%9e%e6%95%b0%e7%bb%84%e6%96%b9%e6%b3%95/)\n- :book: [一张图看懂 JavaScript 中数组的迭代方法：forEach、map、filter、reduce、every、some —— 掘金](https://juejin.im/post/5835808067f3560065ed4ab2)\n- :book: [Transducing（上）－《JavaScript 轻量级函数式编程》 —— SegmentFault](https://segmentfault.com/a/1190000012127329)\n- :book: [JavaScript 函数式编程（三） —— @BuptStEve](https://github.com/BuptStEve/blog/issues/15)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 10. 表达式和语句\n\n### 文章\n\n- :book: [js 表达式与语句 —— 博客园](https://www.cnblogs.com/xianshenglu/p/8386918.html)\n- :book: [JS 表达式和语句的区别 —— SegmentFault](https://segmentfault.com/q/1010000004102804)\n- :book: [JavaScript 中的表达式（expression）和语句/声明（statement） —— CSDN](https://blog.csdn.net/mett_smith/article/details/78761247)\n- :book: [重讀 Axel 的 Javascript 中的 Expression vs Statement 一文 —— SegmentFault](https://segmentfault.com/a/1190000004565693)\n- :book: [Expressions versus statements in JavaScript —— Dr. Axel](http://2ality.com/2012/09/expressions-vs-statements.html)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 11. 变量提升\n\n### 文章\n\n- :book: [JavaScript 变量提升 —— 菜鸟教程](http://www.runoob.com/js/js-hoisting.html)\n- :book: [ES6 变量作用域与提升：变量的生命周期详解 —— 掘金](https://juejin.im/post/59905bea6fb9a03c34192c51)\n- :book: [[翻译] JavaScript Scoping and Hoisting —— SegmentFault](https://segmentfault.com/a/1190000004345355#articleHeader5)\n- :book: [JavaScript Scoping and Hoisting —— Ben Cherry](http://www.adequatelygood.com/JavaScript-Scoping-and-Hoisting.html)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 12. Promise\n\n### 文章\n\n- :book: [使用 promises —— MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Using_promises)\n- :book: [Promise —— MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise)\n- :book: [Promise — 廖雪峰](https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/0014345008539155e93fc16046d4bb7854943814c4f9dc2000)\n- :book: [JavaScript Promise：去而复返 —— 司徒正美](https://www.cnblogs.com/rubylouvre/p/3495286.html)\n- :book: [(上面的原文)JavaScript Promise：简介 —— Web Fundamentals](https://developers.google.com/web/fundamentals/primers/promises#_1)\n- :book: [1 分钟读完《10 分钟学会 JavaScript 的 Async/Await》 —— justjavac](https://segmentfault.com/a/1190000011813934)\n- :book: [JavaScript Promise 迷你书（中文版）](https://juejin.im/entry/56499ae160b2d1404c4f8834)\n- :book: [JavaScript 进阶之路——认识和使用 Promise，重构你的 Js 代码 —— 博客园](https://www.cnblogs.com/yunfeifei/p/4453690.html)\n\n### 视频\n\n- :tv: [Promise 入门 —— 慕课网](https://www.imooc.com/learn/949)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 13. 立即执行函数, 模块化, 命名空间\n\n### 文章\n\n- :book: [Javascript 模块化编程（一）：模块的写法 —— 阮一峰](http://www.ruanyifeng.com/blog/2012/10/javascript_module.html)\n- :book: [javascript 模块化编程-详解立即执行函数表达式 —— 简书](https://www.jianshu.com/p/4dbf4a4c8ebb)\n- :book: [Javascript 的匿名函数与自执行 —— 掘金](https://juejin.im/entry/57fee360a22b9d005b1d9ae3)\n- :book: [前端模块化——技术选型 —— SegmentFault](https://segmentfault.com/a/1190000006966358)\n- :book: [谈谈 Js 前端模块化规范 —— SegmentFault](https://segmentfault.com/a/1190000015991869#articleHeader8)\n- :book: [函数声明与函数表达式的区别 —— 伯乐在线](http://web.jobbole.com/87534/)\n\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 14. 递归\n\n### 文章\n\n- :book: [求解释 js 递归 —— SegmentFault](https://segmentfault.com/q/1010000003942347)\n- :book: [JavaScript 中的递归 —— 掘金](https://juejin.im/post/5948c0d8fe88c2006a939e2a)\n- :book: [递归（上）－《JavaScript 轻量级函数式编程》 —— 掘金](https://juejin.im/post/59c1d91d6fb9a00a53275f79)\n- :book: [递归（下）－《JavaScript 轻量级函数式编程》 —— 掘金](https://juejin.im/post/59c87fb46fb9a00a437b1a2e)\n- :book: [尾调用和尾递归 —— 掘金](https://juejin.im/post/5acdd7486fb9a028ca53547c)\n- :book: [几个经典递归问题用 js 实现 —— CSDN](https://blog.csdn.net/qianqianstd/article/details/75807462)\n- :book: [递归函数的几个例子 —— CSDN](https://blog.csdn.net/x_i_xw/article/details/72026868)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 15. 算法\n\n### 文章\n\n- :book: [十大经典排序算法总结（JavaScript 描述） —— 掘金](https://juejin.im/post/57dcd394a22b9d00610c5ec8)\n- :book: [在 JavaScript 中学习数据结构与算法 —— 掘金](https://juejin.im/post/594dfe795188250d725a220a#comment)\n- :book: [JS 中可能用得到的全部的排序算法 —— 掘金](https://juejin.im/post/58c9d5fb1b69e6006b686bce)\n- :book: [JS 家的排序算法 —— 简书](https://www.jianshu.com/p/1b4068ccd505)\n- :book: [前端常见算法的 JS 实现 —— SegmentFault](https://segmentfault.com/a/1190000008593715)\n- :book: [前端面试中的常见的算法问题 ——蒲小花的博客](https://www.jackpu.com/qian-duan-mian-shi-zhong-de-chang-jian-de-suan-fa-wen-ti/)\n\n### 视频\n\n- :tv: [Javascript 实现二叉树算法 —— 慕课网](https://www.imooc.com/learn/888)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 16. 数据结构\n\n### 文章\n\n- :book: [来我们浅谈一下 js 的数据结构 —— 简书](https://www.jianshu.com/p/5e0e8d183102)\n- :book: [JavaScript 中的算法与数据结构 —— 简书](https://www.jianshu.com/nb/16835496)\n- :book: [学 JS 必看-JavaScript 数据结构深度剖析 —— 大道至简的博客](http://blog.sina.com.cn/s/blog_7b9c5e4101017mjt.html)\n- :book: [js 中基础数据结构数组去重问题 —— 掘金](https://juejin.im/entry/586effe0da2f600053d85a9a)\n\n### 视频\n\n- :tv: :tv: [JavaScript 数据结构-运算符 —— 乐视](http://www.le.com/ptv/vplay/27606964.html)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 17. 消息队列和事件循环\n\n### 文章\n\n- :book: [并发模型与事件循环 —— MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/EventLoop)\n- :book: [JavaScript 运行机制详解：再谈 Event Loop —— 阮一峰](http://www.ruanyifeng.com/blog/2014/10/event-loop.html)\n- :book: [深入理解 JavaScript 事件循环 —— 博客园](https://www.cnblogs.com/dong-xu/p/7000163.html)\n- :book: [深入浅出 Javascript 事件循环机制 —— 知乎](https://zhuanlan.zhihu.com/p/26229293)\n- :book: [JS 事件循环机制（event loop）之宏任务、微任务 —— SegmentFault](https://segmentfault.com/a/1190000014940904#articleHeader7)\n- :book: [JavaScript：彻底理解同步、异步和事件循环 —— SegmentFault](https://segmentfault.com/a/1190000004322358)\n- :book: [从浏览器多进程到 JS 单线程，JS 运行机制最全面的一次梳理 —— 掘金](https://juejin.im/post/5a6547d0f265da3e283a1df7)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 18. setTimeout, setInterval 和 requestAnimationFrame\n\n### 文章\n\n- :book: [Window setTimeout() 方法 —— 菜鸟教程](http://www.runoob.com/jsref/met-win-settimeout.html)\n- :book: [Window setInterval() 方法 —— 菜鸟教程](http://www.runoob.com/jsref/met-win-setinterval.html)\n- :book: [关于 setTimeout —— 掘金](https://juejin.im/post/5aa4c47af265da239866e236)\n- :book: [你不知道的 Javascript：有趣的 setTimeout —— 掘金](https://juejin.im/post/5a77f8ce5188257a6d635d76)\n- :book: [原来你是这样的 setTimeout —— 掘金](https://juejin.im/entry/5861ebf01b69e6006ce61d38)\n- :book: [setTimeout() 和 setInterval() 本质区别在哪里？ —— SegmentFault](https://segmentfault.com/q/1010000005989491)\n- book: [window.requestAnimationFrame —— MDN](https://developer.mozilla.org/zh-CN/docs/Web/API/Window/requestAnimationFrame)\n- :book: [requestAnimationFrame 知多少？ —— 博客园](http://www.cnblogs.com/onepixel/p/7078617.html)\n- :book: [CSS3 动画那么强，requestAnimationFrame 还有毛线用？ —— 张鑫旭](https://www.zhangxinxu.com/wordpress/2013/09/css3-animation-requestanimationframe-tween-%e5%8a%a8%e7%94%bb%e7%ae%97%e6%b3%95/)\n- :book: [「JavaScript 定时器」setInterval、setTimeout 和 requestAnimationFrame 浅析 —— SegmentFault](https://segmentfault.com/a/1190000014661035)\n- :book: [翻译：setInterval 与 requestAnimationFrame 的时间间隔测试 —— SegmentFault](https://segmentfault.com/a/1190000000386368)\n- :book: [阿里前端面试题：requestAnimationFrame 实现类似 setInterval 的计时器 —— SegmentFault](https://segmentfault.com/q/1010000013909430)\n\n### 视频\n\n- :tv: [setTimeout 和 setInterval —— 优酷](http://v.youku.com/v_show/id_XNTA4OTQ0NzA0.html)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 19. 继承, 多态和代码复用\n\n### 文章\n\n- :book: [JS 面向对象编程之：封装、继承、多态 —— 博客园](https://www.cnblogs.com/Leo_wl/p/5734794.html)\n- :book: [Javascript 的继承与多态 —— 简书](https://www.jianshu.com/p/5cb692658704)\n- :book: [js:面向对象编程，带你认识封装、继承和多态 —— 掘金](https://juejin.im/post/59396c96fe88c2006afc2707)\n- :book: [JavaScript 中的“多继承” —— 掘金](https://zhuanlan.zhihu.com/p/34693209)\n- :book: [代码复用模式 —— github](https://github.com/TooBug/javascript.patterns/blob/master/chapter6.markdown)\n- :book: [深入理解 JavaScript：代码复用模式(推荐篇) —— 汤姆大叔](http://www.cnblogs.com/TomXu/archive/2012/04/24/2438050.html)\n- :book: [深入理解 JavaScript：代码复用模式(避免篇) —— 汤姆大叔](https://www.cnblogs.com/TomXu/archive/2012/04/23/2438005.html)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 20. 按位操作符, 类数组对象和类型化数组\n\n### 文章\n\n- :book: [按位操作符 —— MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators)\n- :book: [类数组对象 —— MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Typed_arrays)\n- :book: [类型化数组 —— MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer)\n- :book: [JavaScript ArrayBuffer 浅析 —— 博客园](https://www.cnblogs.com/gradolabs/p/4762134.html)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 21. DOM 树和渲染过程\n\n### 文章\n\n- :book: [如何创建一个 DOM 树 —— MDN](https://developer.mozilla.org/zh-CN/docs/Web/API/Document_Object_Model/How_to_create_a_DOM_tree)\n- :book: [HTML DOM 节点 —— W3school](http://www.w3school.com.cn/htmldom/dom_nodes.asp)\n- :book: [DOM 概述 —— 阮一峰](http://javascript.ruanyifeng.com/dom/node.html)\n- :book: [《JavaScript 闯关记》之 DOM（上）—— 掘金](https://juejin.im/post/583cbbfa61ff4b006ccc41fe)\n- :book: [《JavaScript 闯关记》之 DOM（下）—— 掘金](https://juejin.im/post/583cbc4961ff4b006ccc44fb)\n- :book: [掌握 DOM 操作 —— 掘金](https://juejin.im/entry/58314efd8ac2470061bb30fd)\n- :book: [操作 DOM —— 廖雪峰](https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/001434500494451273e6b3dec9d411d9ba841dee8caec45000)\n- :book: [原来 CSS 与 JS 是这样阻塞 DOM 解析和渲染的 —— 掘金](https://juejin.im/post/59c60691518825396f4f71a1)\n\n### 视频\n\n- :tv: [DOM 探索之基础详解篇 —— 慕课网](https://www.imooc.com/learn/488)\n- :tv: [DOM 事件探秘 —— 慕课网](https://www.imooc.com/learn/138)\n- :tv: [jQuery 基础(二)DOM 篇 —— 慕课网](https://www.imooc.com/learn/530)\n- :tv: [JS 操作 DOM 对象属性和方法 —— 爱奇艺](http://www.iqiyi.com/w_19rr19s08l.html)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 22. new 与构造函数, instanceof 与实例\n\n### 文章\n\n- :book: [构造函数与 new 命令 —— 阮一峰](http://javascript.ruanyifeng.com/oop/basic.html)\n- :book: [Javascript 面向对象编程（二）：构造函数的继承 —— 阮一峰](http://www.ruanyifeng.com/blog/2010/05/object-oriented_javascript_inheritance.html)\n- :book: [完整原型链详细图解(构造函数、原型、实例化对象) —— CSDN](https://blog.csdn.net/SpicyBoiledFish/article/details/71123162)\n- :book: [JavaScript 中构造函数与 new 操作符的实例详解 —— PHP 中文网](http://www.php.cn/js-tutorial-376246.html)\n- :book: [构造函数、实例、原型、原型链之间的关系 —— CSDN](https://blog.csdn.net/yin_991/article/details/80954453)\n- :book: [深入理解 JS—instanceof 和原型链 —— CSDN](https://blog.csdn.net/cecilia620/article/details/71158048)\n- :book: [前端基础进阶（九）：详解面向对象、构造函数、原型与原型链 —— 简书](https://www.jianshu.com/p/15ac7393bc1f)\n- :book: [js 用 new 实例化对象与直接调用的 this 的区别 —— 简书](https://www.jianshu.com/p/60ffc4831bff)\n- :book: [JavaScript 并非所有的东西都是对象 —— justjavac](http://justjavac.com/javascript/2012/12/22/javascript-values-not-everything-is-an-object.html)\n- :book: [JavaScript instanceof 运算符深入剖析 —— IBM](https://www.ibm.com/developerworks/cn/web/1306_jiangjj_jsinstanceof/)\n\n### 视频\n\n- :tv: [改良版的构造函数 —— 乐视](http://www.le.com/ptv/vplay/27766889.html)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 23. 原型继承与原型链\n\n### 文章\n\n- :book: [继承与原型链 —— MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Inheritance_and_the_prototype_chain)\n- :book: [构造函数、原型与原型链 —— github](https://github.com/bigdots/blog/issues/1)\n- :book: [原型及原型链 —— github(1269 Star)](https://github.com/stone0090/javascript-lessons/tree/master/2.5-Prototype)\n- :book: [理清 javascript 中的面向对象(一) 原型继承 —— SegmentFault](https://segmentfault.com/a/1190000004282206)\n- :book: [JavaScript：继承和原型链(译) —— justjavac](http://justjavac.com/2015/12/09/inheritance-and-the-prototype-chain.html)\n- :book: [三张图搞懂 JavaScript 的原型对象与原型链 —— 博客园](http://www.cnblogs.com/shuiyi/p/5305435.html)\n- :book: [一张图让你搞懂 JavaScript 的继承与原型链 —— CSDN](https://blog.csdn.net/the__apollo/article/details/76774698)\n- :book: [JS 高级--原型链(一看就懂，但 18 岁以下请绕道) —— CSDN](https://blog.csdn.net/xiaotao_css/article/details/72782416)\n- :book: [原型继承 —— 廖雪峰](https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/0014344997013405abfb7f0e1904a04ba6898a384b1e925000)\n- :book: [JS 原型链与继承别再被问倒了 —— 掘金](https://juejin.im/post/58f94c9bb123db411953691b)\n- :book: [征服 JavaScript 面试系列：类继承和原型继承的区别 —— 掘金](https://juejin.im/entry/5885db221b69e600592253e7)\n- :book: [JavaScript 深入之从原型到原型链 —— 冴羽](https://github.com/mqyqingfeng/Blog/issues/2)\n- :book: [深入理解 JavaScript 原型与闭包 —— 王福朋](https://www.cnblogs.com/wangfupeng1988/p/3977924.html)\n\n### 视频\n\n- :tv: [JS 高级-07-原型链继承 —— 乐视](http://www.le.com/ptv/vplay/27552753.html)\n- :tv: [JS 原型对象和原型链简介 —— 腾讯视频](https://v.qq.com/x/page/b0511nwa7d3.html)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 24. Object.create 和 Object.assign\n\n### 文章\n\n- :book: [Object.create —— MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/create)\n- :book: [Object.assign —— MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n- :book: [Object.create vs Object.assign —— 慕课网手记](https://www.imooc.com/article/17591)\n- :book: [JS 中的 Object.assign()、Object.create()、Object.defineProperty() —— CSDN](https://blog.csdn.net/DeepLies/article/details/52915143)\n- :book: [es6 中 object.create()和 object.assign() —— 风信子博客](http://www.onlyfordream.cn/2018/03/19/es6%E4%B8%ADobject-create%E5%92%8Cobject-assign/)\n- :book: [Object-Assign-Deep —— github](https://github.com/saikojosh/Object-Assign-Deep)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 25. 工厂函数和类\n\n### 文章\n\n- :book: [类 —— MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Classes)\n- :book: [类和实例 —— 廖雪峰](https://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/00138682004077376d2d7f8cc8a4e2c9982f92788588322000)\n- :book: [Javascript 定义类（class）的三种方法 —— 阮一峰](http://www.ruanyifeng.com/blog/2012/07/three_ways_to_define_a_javascript_class.html)\n- :book: [【译】ES6 的工厂函数 —— 掘金](https://juejin.im/post/59c8c8756fb9a00a681ae5bd)\n- :book: [JavaScript 创建对象之单例、工厂、构造函数模式 —— 掘金](https://juejin.im/entry/587992c961ff4b0065edf1ff)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 26. 设计模式\n\n### 文章\n\n- :book: [JavaScript 设计模式 —— 掘金](https://juejin.im/post/59df4f74f265da430f311909)\n- :book: [学用 JavaScript 设计模式 —— 极客学院](http://wiki.jikexueyuan.com/project/javascript-design-patterns/)\n- :book: [[面试专题]JS 设计模式 —— SegmentFault](https://segmentfault.com/a/1190000010914032)\n- :book: [JavaScript Patterns 中译本 —— github](https://github.com/lxj/javascript.patterns)\n\n### 视频\n\n- :tv: [HTML5 课程大纲 2-11JS 设计模式](https://tv.sohu.com/v/dXMvMjQwNzYwNzQ4Lzg5NzM2MDA3LnNodG1s.html)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 27. Memoization\n\n### 文章\n\n- :book: [JavaScript Memoization —— 司徒正美](https://www.cnblogs.com/rubylouvre/archive/2009/08/06/1540678.html)\n- :book: [memoization 提升递归效率 —— 博客园](https://www.cnblogs.com/yingshuizy/p/4517102.html)\n- :book: [如何提升 JavaScript 的递归效率 —— 51CTO](http://developer.51cto.com/art/201010/231513.htm)\n- :book: [JavaScript 高级技巧 Memoization —— SegmentFaut](https://segmentfault.com/a/1190000016703106)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 28. 纯函数, 函数副作用和状态变化\n\n### 文章\n\n- :book: [纯函数(Pure Function) —— React.js 小书](http://huziketang.mangojuice.top/books/react/lesson32)\n- :book: [JavaScript Functional Programming：纯函数 —— 宁皓网](https://ninghao.net/blog/4634)\n- :book: [js 函数的副作用分析 —— 脚本之家](https://www.jb51.net/article/28079.htm)\n- :book: [如何使用纯函数式 JavaScript 处理脏副作用 —— 掘金](https://juejin.im/post/5b82bdb351882542e241ed32?utm_medium=hao.caibaojian.com&utm_source=hao.caibaojian.com)\n- :book: [原生 JavaScript 实现 state 状态管理系统 —— 博客园](http://www.cnblogs.com/zhangycun/p/9403335.html)\n- :book: [JavaScript 函数式编程 —— @BuptStEve](https://github.com/BuptStEve/blog/issues/10)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 29. 耗性能操作和时间复杂度\n\n### 文章\n\n- :book: [时间复杂度 O(log n) 意味着什么？ —— 掘金](https://juejin.im/entry/593f56528d6d810058a355f4)\n- :book: [算法的时间复杂度和空间复杂度 —— 掘金](https://juejin.im/entry/5a49f7d36fb9a0450a67b269)\n- :book: [算法（一）时间复杂度 —— 掘金](https://juejin.im/post/58d15f1044d90400691834d4)\n- :book: [Big O Search Algorithms in JavaScript —— Bradley Braithwaite](http://www.bradoncode.com/blog/2012/04/big-o-algorithm-examples-in-javascript.html)\n- :book: [Time Complexity Analysis in JavaScript — Jennifer Bland](https://www.jenniferbland.com/time-complexity-analysis-in-javascript/)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 30. JavaScript 引擎\n\n### 文章\n\n- :book: [javascript 引擎 —— 百度百科](https://baike.baidu.com/item/javascript引擎/5356108)\n- :book: [V8(JavaScript 引擎) —— 百度百科](https://baike.baidu.com/item/V8/6178125)\n- :book: [图解搞懂 JavaScript 引擎 Event Loop —— 掘金](https://juejin.im/post/5a6309f76fb9a01cab2858b1)3\n- :book: [V8 JavaScript 引擎：高性能的 ES2015+ —— justjavac](https://segmentfault.com/a/1190000010819020)\n- :book: [10 分钟理解 JS 引擎的执行机制 —— SegmentFaut](https://segmentfault.com/a/1190000012806637)\n- :book: [V8 javascript 引擎 —— 博客园](https://www.cnblogs.com/weirdoQi/p/6609811.html)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 31. 二进制, 十六进制, 十进制, 科学记数法\n\n### 文章\n\n- :book: [二、八、十、十六进制转换(图解篇) —— 博客园](http://www.cnblogs.com/gaizai/p/4233780.html)\n- :book: [JavaScript 读写二进制数据 —— 掘金](https://juejin.im/post/5b93dadaf265da0a857a58a3)\n\n### 视频\n\n- :tv: [二进制、十进制、十六进制互相转化很难吗？ —— 百度视频](http://baishi.baidu.com/watch/7873060963471478456.html)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 32. 偏函数, 柯里化, Compose 和 Pipe\n\n### 文章\n\n- :book: [Javascript 函数式编程之偏函数 —— CSDN](https://blog.csdn.net/qq_42129063/article/details/81874314)\n- :book: [JavaScript 专题之偏函数 —— SegmentFault](https://segmentfault.com/a/1190000010686144)\n- :book: [柯里化和偏函数有什么区别？ —— SegmentFault](https://segmentfault.com/q/1010000008626058)\n- :book: [Javascript 偏函数与柯里化 —— CSDN](https://blog.csdn.net/neweastsun/article/details/75947785)\n- :book: [柯里化(curry) —— JS 函数式编程指南](https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch4.html)\n- :book: [代码组合(compose) —— JS 函数式编程指南](https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch5.html)\n- :book: [关于 javascript 函数式编程中 compose 的实现 —— SegmentFault](https://segmentfault.com/a/1190000008394749)\n- :book: [实现 compose 的五种思路 —— SegmentFault](https://segmentfault.com/a/1190000011447164)\n- :book: [JavaScript 函数式编程之函数组合函数 compose 和 pipe 的实现 —— SegmentFault](https://segmentfault.com/a/1190000015102804)\n- :book: [JavaScript 轻量级函数式编程-第 4 章:组合函数 ——掘金](https://juejin.im/post/59a62f3d6fb9a0248363fd9d#comment)\n- :book: [JavaScript 函数式编程（二） —— @BuptStEve](https://github.com/BuptStEve/blog/issues/11)\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n\n## 33. 代码整洁之道\n\n### 文章\n\n- :book: [[译] JavaScript 代码整洁之道 —— 边城](https://www.zcfy.cc/article/clean-code-javascript-readme-md-at-master-ryanmcdermott-clean-code-javascript-github-2273.html)\n- :book: [Javascript 编程风格 —— 阮一峰](http://www.ruanyifeng.com/blog/2012/04/javascript_programming_style.html)\n- :book: [重构 - 代码整洁之道 —— 掘金](https://juejin.im/post/5a5b2a5c6fb9a01cbc6e59f9)\n- :book: [让你的代码更简短，更整洁，更易读的 ES6 小技巧 —— 掘金](https://juejin.im/post/5a7d71836fb9a063435ecf51)\n- :book: [Web 前端：11 个让你代码整洁的原则 —— 伯乐在线](http://blog.jobbole.com/23617/)\n- :book: [Clean Code concepts adapted for JavaScript —— ryanmcdermott](https://github.com/ryanmcdermott/clean-code-javascript)\n\n<br>\n\n**[:arrow_up: 返回目录](#目录)**\n\n---\n","slug":"33_js_concepts","published":1,"updated":"2019-07-10T17:16:02.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxxjgc5c0005akghllrnhaoe","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p><a href=\"https://github.com/stephentian/33-js-concepts\" target=\"_blank\" rel=\"noopener\">原文链接</a></p>\n<blockquote>\n<p>本篇文章是参照 @leonardomso 创立，英文版项目地址在<a href=\"https://github.com/leonardomso/33-js-concepts\" target=\"_blank\" rel=\"noopener\">这里</a>。</p>\n</blockquote>\n<hr>\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ol>\n<li><strong><a href=\"#1-调用堆栈\">调用堆栈</a></strong></li>\n<li><strong><a href=\"#2-原始类型\">原始类型</a></strong></li>\n<li><strong><a href=\"#3-值类型和引用类型\">值类型和引用类型</a></strong></li>\n<li><strong><a href=\"#4-隐式-显式-名义和鸭子类型\">隐式, 显式, 名义和鸭子类型</a></strong></li>\n<li><strong><a href=\"#5--vs--typeof-vs-instanceof\">== 与 ===, typeof 与 instanceof</a></strong></li>\n<li><strong><a href=\"#6-this-call-apply-和-bind\">this, call, apply 和 bind</a></strong></li>\n<li><strong><a href=\"#7-函数作用域-块级作用域和词法作用域\">函数作用域, 块级作用域和词法作用域</a></strong></li>\n<li><strong><a href=\"#8-闭包\">闭包</a></strong></li>\n<li><strong><a href=\"#9-map-reduce-filter-等高阶函数\">map, reduce, filter 等高阶函数</a></strong></li>\n<li><strong><a href=\"#10-表达式和语句\">表达式和语句</a></strong></li>\n<li><strong><a href=\"#11-变量提升\">变量提升</a></strong></li>\n<li><strong><a href=\"#12-promise\">Promise</a></strong></li>\n<li><strong><a href=\"#13-立即执行函数-模块化-命名空间\">立即执行函数, 模块化, 命名空间</a></strong></li>\n<li><strong><a href=\"#14-递归\">递归</a></strong></li>\n<li><strong><a href=\"#15-算法\">算法</a></strong></li>\n<li><strong><a href=\"#16-数据结构\">数据结构</a></strong></li>\n<li><strong><a href=\"#17-消息队列和事件循环\">消息队列和事件循环</a></strong></li>\n<li><strong><a href=\"#18-settimeout-setinterval-和-requestanimationframe\">setTimeout, setInterval 和 requestAnimationFrame</a></strong></li>\n<li><strong><a href=\"#19-继承-多态和代码复用\">继承, 多态和代码复用</a></strong></li>\n<li><strong><a href=\"#20-按位操作符-类数组对象和类型化数组\">按位操作符, 类数组对象和类型化数组</a></strong></li>\n<li><strong><a href=\"#21-dom-树和渲染过程\">DOM 树和渲染过程</a></strong></li>\n<li><strong><a href=\"#22-new-与构造函数-instanceof-与实例\">new 与构造函数, instanceof 与实例</a></strong></li>\n<li><strong><a href=\"#23-原型继承与原型链\">原型继承与原型链</a></strong></li>\n<li><strong><a href=\"#24-objectcreate-和-objectassign\">Object.create 和 Object.assign</a></strong></li>\n<li><strong><a href=\"#25-工厂函数和类\">工厂函数和类</a></strong></li>\n<li><strong><a href=\"#26-设计模式\">设计模式</a></strong></li>\n<li><strong><a href=\"#27-memoization\">Memoization</a></strong></li>\n<li><strong><a href=\"#28-纯函数-函数副作用和状态变化\">纯函数, 函数副作用和状态变化</a></strong></li>\n<li><strong><a href=\"#29-耗性能操作和时间复杂度\">耗性能操作和时间复杂度</a></strong></li>\n<li><strong><a href=\"#30-javascript-引擎\">JavaScript 引擎</a></strong></li>\n<li><strong><a href=\"#31-二进制-十六进制-十进制-科学记数法\">二进制, 十进制, 十六进制, 科学记数法</a></strong></li>\n<li><strong><a href=\"#32-偏函数-柯里化-compose-和-pipe\">偏函数, 柯里化, Compose 和 Pipe</a></strong></li>\n<li><strong><a href=\"#33-代码整洁之道\">代码整洁之道</a></strong></li>\n</ol>\n<hr>\n<h2 id=\"1-调用堆栈\"><a href=\"#1-调用堆栈\" class=\"headerlink\" title=\"1. 调用堆栈\"></a>1. 调用堆栈</h2><h3 id=\"文章\"><a href=\"#文章\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/Call_stack\" target=\"_blank\" rel=\"noopener\">Call Stack — MDN</a></li>\n<li>:book: <a href=\"https://juejin.im/post/5a05b4576fb9a04519690d42\" target=\"_blank\" rel=\"noopener\">[译] JavaScript 如何工作：对引擎、运行时、调用堆栈的概述 —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/post/5ba32171f265da0ab719a6d7\" target=\"_blank\" rel=\"noopener\">[译] 理解 JavaScript 中的执行上下文和执行栈 —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/post/59e85eebf265da430d571f89\" target=\"_blank\" rel=\"noopener\">这一次，彻底弄懂 JavaScript 执行机制 —— 掘金</a></li>\n<li>:book: <a href=\"https://www.oschina.net/translate/how-does-javascript-actually-work-part-1\" target=\"_blank\" rel=\"noopener\">解读 JavaScript 之引擎、运行时和堆栈调用 —— 开源中国</a></li>\n<li>:book: <a href=\"https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/\" target=\"_blank\" rel=\"noopener\">Tasks, microtasks, queues and schedules —— Jake Archibald</a></li>\n<li>:book: <a href=\"https://juejin.im/entry/55dbd51a60b2f3a92a8f5bff\" target=\"_blank\" rel=\"noopener\">Tasks, microtasks, queues and schedules（译） —— 掘金</a></li>\n</ul>\n<h3 id=\"视频\"><a href=\"#视频\" class=\"headerlink\" title=\"视频\"></a>视频</h3><ul>\n<li>:tv: <a href=\"https://v.qq.com/x/page/h0372bld8re.html?ptag=qqbrowser\" target=\"_blank\" rel=\"noopener\">What is the event loop anyway? —— 腾讯视频(英文字幕)</a></li>\n<li>:tv: <a href=\"https://www.bilibili.com/video/av33824933/\" target=\"_blank\" rel=\"noopener\">Understanding The JavaScript Call Stack, Event Queue, Event Table, &amp; Event Loop —— Bilibili</a></li>\n<li>:tv: <a href=\"http://www.acfun.cn/v/ac4495641\" target=\"_blank\" rel=\"noopener\">JS 中的变量提升、堆栈内存及闭包详解 —— Acfun</a></li>\n<li>:tv: <a href=\"http://www.php.cn/code/21194.html\" target=\"_blank\" rel=\"noopener\">事件循环模型 —— PHP 中文网</a></li>\n<li>:tv: <a href=\"https://www.youtube.com/watch?v=w6QGEiQceOM\" target=\"_blank\" rel=\"noopener\">Javascript: the Call Stack explained — Coding Blocks India</a></li>\n<li>:tv: <a href=\"https://www.youtube.com/watch?v=W8AeMrVtFLY\" target=\"_blank\" rel=\"noopener\">The JS Call Stack Explained In 9 Minutes — Colt Steele</a></li>\n<li>:tv: <a href=\"https://www.youtube.com/watch?v=jT0USJeNFEA\" target=\"_blank\" rel=\"noopener\">JavaScript Execution Stack — Codecademy</a></li>\n<li>:tv: <a href=\"https://www.youtube.com/watch?v=w7QWQlkLY_s\" target=\"_blank\" rel=\"noopener\">What is the Call Stack? — Eric Traub</a></li>\n<li>:tv: <a href=\"https://www.youtube.com/watch?v=Q2sFmqvpBe0\" target=\"_blank\" rel=\"noopener\">The Call Stack — Kevin Drumm</a></li>\n<li>:tv: <a href=\"https://www.youtube.com/watch?v=Z6a1cLyq7Ac&amp;list=PLWrQZnG8l0E4kd1T_nyuVoxQUaYEWFgcD\" target=\"_blank\" rel=\"noopener\">Understanding JavaScript Execution — Codesmith</a></li>\n<li>:tv: <a href=\"https://www.youtube.com/watch?v=mk0lu9MKBto\" target=\"_blank\" rel=\"noopener\">Call Stack &amp; Event Loop — movies com</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"2-原始类型\"><a href=\"#2-原始类型\" class=\"headerlink\" title=\"2. 原始类型\"></a>2. 原始类型</h2><h3 id=\"文章-1\"><a href=\"#文章-1\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/Primitive\" target=\"_blank\" rel=\"noopener\">原始数据 —— MDN</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000017090272\" target=\"_blank\" rel=\"noopener\">[译]JavaScript 是怎样编码数字的 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://yanhaijing.com/javascript/2014/03/14/what-every-javascript-developer-should-know-about-floating-points/\" target=\"_blank\" rel=\"noopener\">每一个 JavaScript 开发者应该了解的浮点知识 —— 颜海镜</a></li>\n<li>:book: <a href=\"https://wangdoc.com/javascript/types/number.html\" target=\"_blank\" rel=\"noopener\">JavaScript 标准参考教程(基本语法之数值) —— 阮一峰</a></li>\n<li>:book: <a href=\"https://javascriptweblog.wordpress.com/2010/09/27/the-secret-life-of-javascript-primitives/\" target=\"_blank\" rel=\"noopener\">The Secret Life of JavaScript Primitives —— Angus Croll</a></li>\n</ul>\n<h3 id=\"视频-1\"><a href=\"#视频-1\" class=\"headerlink\" title=\"视频\"></a>视频</h3><ul>\n<li>:tv: <a href=\"https://www.imooc.com/video/5674\" target=\"_blank\" rel=\"noopener\">javascript 六种数据类型 —— 慕课网</a></li>\n<li>:tv: <a href=\"http://www.php.cn/code/5808.html\" target=\"_blank\" rel=\"noopener\">javascript 视频教程(数据类型) —— PHP 中文网</a></li>\n<li>:tv: <a href=\"https://www.youtube.com/watch?v=9ooYYRLdg_g\" target=\"_blank\" rel=\"noopener\">JavaScript Reference vs Primitive Types — Academind</a></li>\n<li>:tv: <a href=\"https://www.youtube.com/watch?v=HsbWQsSCE5Y\" target=\"_blank\" rel=\"noopener\">JavaScript Primitive Types — Simon Sez IT</a></li>\n<li>:tv: <a href=\"https://www.youtube.com/watch?v=F7YbhKbpFic\" target=\"_blank\" rel=\"noopener\">Javascript Primitive and Reference Types — Baljeet Singh</a></li>\n<li>:tv: <a href=\"https://www.youtube.com/watch?v=e-_mDyqm2oU\" target=\"_blank\" rel=\"noopener\">Value Types and Reference Types in JavaScript — Programming with Mosh</a></li>\n<li>:tv: <a href=\"https://www.youtube.com/watch?v=qw3j0A3DIzQ\" target=\"_blank\" rel=\"noopener\">JavaScript Primitive Data Types — Avelx</a></li>\n<li>:tv: <a href=\"https://www.youtube.com/watch?v=MqHDDtVYJRI\" target=\"_blank\" rel=\"noopener\">Everything you never wanted to know about JavaScript numbers — Bartek Szopka</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"3-值类型和引用类型\"><a href=\"#3-值类型和引用类型\" class=\"headerlink\" title=\"3. 值类型和引用类型\"></a>3. 值类型和引用类型</h2><h3 id=\"文章-2\"><a href=\"#文章-2\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"http://www.w3school.com.cn/js/pro_js_referencetypes.asp\" target=\"_blank\" rel=\"noopener\">ECMAScript 引用类型 —— W3school</a></li>\n<li>:book: <a href=\"https://www.cnblogs.com/leiting/p/8081413.html\" target=\"_blank\" rel=\"noopener\">js 中的值类型和引用类型的区别 —— 博客园</a></li>\n<li>:book: <a href=\"https://blog.fundebug.com/2017/08/09/explain_value_reference_in_js/\" target=\"_blank\" rel=\"noopener\">JavaScript 的值传递和引用传递 —— FunDebug</a></li>\n<li>:book: <a href=\"https://docstore.mik.ua/orelly/webprog/jscript/ch04_04.htm\" target=\"_blank\" rel=\"noopener\">Primitive Types &amp; Reference Types in JavaScript —— Bran van der Meer</a></li>\n<li>:book: <a href=\"https://blog.csdn.net/xiaojia_boke/article/details/54906509\" target=\"_blank\" rel=\"noopener\">JavaScript: Passing by Value or by Reference —— CSDN</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000015411195\" target=\"_blank\" rel=\"noopener\">js 值引用和值复制 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://blog.csdn.net/zzzaquarius/article/details/4902235\" target=\"_blank\" rel=\"noopener\">js- 引用和复制(传值和传址) —— CSDN</a></li>\n</ul>\n<h3 id=\"视频-2\"><a href=\"#视频-2\" class=\"headerlink\" title=\"视频\"></a>视频</h3><ul>\n<li>:tv: <a href=\"https://www.youtube.com/watch?v=E-dAnFdq8k8\" target=\"_blank\" rel=\"noopener\">Javascript Pass by Value vs Pass by Reference — techsith</a></li>\n<li>:tv: <a href=\"https://www.youtube.com/watch?v=fD0t_DKREbE\" target=\"_blank\" rel=\"noopener\">JavaScript Value vs Reference Types — Programming with Mosh</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"4-隐式-显式-名义和鸭子类型\"><a href=\"#4-隐式-显式-名义和鸭子类型\" class=\"headerlink\" title=\"4. 隐式, 显式, 名义和鸭子类型\"></a>4. 隐式, 显式, 名义和鸭子类型</h2><h3 id=\"文章-3\"><a href=\"#文章-3\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"http://www.w3school.com.cn/js/pro_js_typeconversion.asp\" target=\"_blank\" rel=\"noopener\">ECMAScript 类型转换 —— W3school</a></li>\n<li>:book: <a href=\"http://justjavac.com/javascript/2013/04/08/javascript-quirk-1-implicit-conversion-of-values.html\" target=\"_blank\" rel=\"noopener\">JavaScript 的怪癖 1：隐式类型转换 —— justjavac</a></li>\n<li>:book: <a href=\"https://juejin.im/post/59ad2585f265da246a20e026\" target=\"_blank\" rel=\"noopener\">JavaScript 运算符规则与隐式类型转换详解 —— 掘金</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000004482388\" target=\"_blank\" rel=\"noopener\">聊一聊 JS 中的隐式类型转换 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://www.cnblogs.com/yugege/p/5277883.html\" target=\"_blank\" rel=\"noopener\">有趣的 JavaScript 隐式类型转换 —— 博客园</a></li>\n<li>:book: <a href=\"https://blog.csdn.net/yangjvn/article/details/48284163\" target=\"_blank\" rel=\"noopener\">JavaScript 显式类型转换与隐式类型转换 —— CSDN</a></li>\n<li>:book: <a href=\"https://www.jianshu.com/p/777a89b4ed9a\" target=\"_blank\" rel=\"noopener\">你不知道的 JavaScript（中卷）强制类型转换 —— 简书</a></li>\n<li>:book: <a href=\"https://ithelp.ithome.com.tw/articles/10201512\" target=\"_blank\" rel=\"noopener\">你懂 JavaScript 嗎？#8 強制轉型 —— cythilya</a></li>\n<li>:book: <a href=\"http://book.51cto.com/art/201505/475153.htm\" target=\"_blank\" rel=\"noopener\">动态类型语言和鸭子类型 —— 曾探</a></li>\n<li>:book: <a href=\"https://flow.org/en/docs/lang/nominal-structural/\" target=\"_blank\" rel=\"noopener\">Nominal &amp; Structural Typing —— flow</a></li>\n<li>:book: <a href=\"https://stackoverflow.com/questions/19915688/what-exactly-is-type-coercion-in-javascript\" target=\"_blank\" rel=\"noopener\">What exactly is Type Coercion in Javascript? —— stackoverflow</a></li>\n<li>:book: <a href=\"https://github.com/getify/You-Dont-Know-JS/blob/master/types%20&amp;%20grammar/ch4.md\" target=\"_blank\" rel=\"noopener\">You Don’t Know JS: Types &amp; Grammar —— github</a></li>\n</ul>\n<h3 id=\"视频-3\"><a href=\"#视频-3\" class=\"headerlink\" title=\"视频\"></a>视频</h3><ul>\n<li>:tv: <a href=\"https://www.imooc.com/video/5675\" target=\"_blank\" rel=\"noopener\">javascript 隐式转换 —— 慕课网</a></li>\n<li>:tv: <a href=\"http://www.le.com/ptv/vplay/27767009.html\" target=\"_blank\" rel=\"noopener\">Javascript 基础加强-类型转换 —— 黑马程序员</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<div id=\"5--vs--typeof-vs-instanceof\"></div>\n\n<h2 id=\"5-vs-typeof-vs-instanceof\"><a href=\"#5-vs-typeof-vs-instanceof\" class=\"headerlink\" title=\"5. == vs ===, typeof vs instanceof\"></a>5. == vs ===, typeof vs instanceof</h2><h3 id=\"文章-4\"><a href=\"#文章-4\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Equality_comparisons_and_sameness\" target=\"_blank\" rel=\"noopener\">JavaScript 中的相等性判断 —— MDN</a></li>\n<li>:book: <a href=\"https://juejin.im/entry/584918612f301e005716add6\" target=\"_blank\" rel=\"noopener\">js 中 == 和 === 的区别 —— 掘金</a></li>\n<li>:book: <a href=\"https://blog.csdn.net/w97531/article/details/82255225\" target=\"_blank\" rel=\"noopener\">== vs === in Javascript —— CSDN</a></li>\n<li>:book: <a href=\"https://blog.csdn.net/mevicky/article/details/50353881\" target=\"_blank\" rel=\"noopener\">深入理解 javascript 之 typeof 和 instanceof —— CSDN</a></li>\n<li>:book: <a href=\"http://justjavac.com/javascript/2012/12/23/what-is-javascripts-typeof-operator-used-for.html\" target=\"_blank\" rel=\"noopener\">JavaScript 的 typeof 的用途 —— justjavac</a></li>\n<li>:book: <a href=\"https://juejin.im/post/58358606570c35005e4142bd\" target=\"_blank\" rel=\"noopener\">一张图看懂 Function 和 Object 的关系及简述 instanceof 运算符 —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/post/5b0b9b9051882515773ae714\" target=\"_blank\" rel=\"noopener\">浅谈 instanceof 和 typeof 的实现原理 —— 掘金</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000000730982\" target=\"_blank\" rel=\"noopener\">typeof 和 instanceOf 的区别</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"6-this-call-apply-和-bind\"><a href=\"#6-this-call-apply-和-bind\" class=\"headerlink\" title=\"6. this, call, apply 和 bind\"></a>6. this, call, apply 和 bind</h2><h3 id=\"文章-5\"><a href=\"#文章-5\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"http://www.ruanyifeng.com/blog/2010/04/using_this_keyword_in_javascript.html\" target=\"_blank\" rel=\"noopener\">Javascript 的 this 用法 —— 阮一峰</a></li>\n<li>:book: <a href=\"https://www.jianshu.com/p/6b4333e78bf5\" target=\"_blank\" rel=\"noopener\">学会 JS 的 this 这一篇就够了，根本不用记 —— 简书</a></li>\n<li>:book: <a href=\"https://juejin.im/post/5b9f176b6fb9a05d3827d03f\" target=\"_blank\" rel=\"noopener\">[译] this（他喵的）到底是什么 — 理解 JavaScript 中的 this、call、apply 和 bind —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/post/59bfe84351882531b730bac2\" target=\"_blank\" rel=\"noopener\">this、apply、call、bind —— 掘金</a></li>\n<li>:book: <a href=\"https://www.cnblogs.com/tingyu-blog/p/6212392.html\" target=\"_blank\" rel=\"noopener\">使用 call、apply 和 bind 解决 js 中烦人的 this，事件绑定时的 this 和传参问题 —— 博客园</a></li>\n<li>:book: <a href=\"https://github.com/Abiel1024/blog/issues/16\" target=\"_blank\" rel=\"noopener\">call、apply 和 bind 的原生实现 —— github</a></li>\n</ul>\n<h3 id=\"视频-4\"><a href=\"#视频-4\" class=\"headerlink\" title=\"视频\"></a>视频</h3><ul>\n<li>:tv: <a href=\"https://www.iqiyi.com/w_19rr1augsd.html\" target=\"_blank\" rel=\"noopener\">JavaScript 关于 this 关键字解释 —— 爱奇艺</a></li>\n<li>:tv: <a href=\"http://baidu.iqiyi.com/watch/845335533383874688.html?page=videoMultiNeed\" target=\"_blank\" rel=\"noopener\">JS 关于作用域闭包和 this 的综合面试题 —— 百度视频</a></li>\n<li>:tv: <a href=\"http://www.le.com/ptv/vplay/27478413.html?ch=baidu_s\" target=\"_blank\" rel=\"noopener\">js 面向对象闭包数组 12.函数中的 this —— 乐视视频</a></li>\n<li>:tv: <a href=\"http://www.le.com/ptv/vplay/24835911.html?ch=baidu_s\" target=\"_blank\" rel=\"noopener\">1.3.10-this 指向及 this 应用 —— 乐视视频</a></li>\n<li>:tv: <a href=\"https://study.163.com/course/introduction/590005.htm\" target=\"_blank\" rel=\"noopener\">珠峰培训 JavaScript 开发课程：关于 this 关键字、闭包作用域 —— 网易云课堂</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"7-函数作用域-块级作用域和词法作用域\"><a href=\"#7-函数作用域-块级作用域和词法作用域\" class=\"headerlink\" title=\"7. 函数作用域, 块级作用域和词法作用域\"></a>7. 函数作用域, 块级作用域和词法作用域</h2><h3 id=\"文章-6\"><a href=\"#文章-6\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/0014344993159773a464f34e1724700a6d5dd9e235ceb7c000\" target=\"_blank\" rel=\"noopener\">变量作用域与解构赋值 —— 廖雪峰</a></li>\n<li>:book: <a href=\"http://www.ruanyifeng.com/blog/2009/08/learning_javascript_closures.html\" target=\"_blank\" rel=\"noopener\">学习 Javascript 闭包（Closure） —— 阮一峰</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000006671020\" target=\"_blank\" rel=\"noopener\">JavaScript 中词法作用域、闭包与跳出闭包 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://juejin.im/entry/58e70077b123db15eb88dc7e\" target=\"_blank\" rel=\"noopener\">JavaScript 深入之词法作用域和动态作用域 —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/post/5afb0ae56fb9a07aa2138425\" target=\"_blank\" rel=\"noopener\">深入理解闭包之前置知识 → 作用域与词法作用域 —— 掘金</a></li>\n<li>:book: <a href=\"https://stackoverflow.com/questions/1047454/what-is-lexical-scope\" target=\"_blank\" rel=\"noopener\">What is lexical scope? —— stackoverflow</a></li>\n<li>:book: <a href=\"https://github.com/fishenal/You-Dont-Know-JS/blob/master/scope%20&amp;%20closures/ch2.md\" target=\"_blank\" rel=\"noopener\">You Don’t Know JS: Scope &amp; Closures —— Kyle Simpson</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"8-闭包\"><a href=\"#8-闭包\" class=\"headerlink\" title=\"8. 闭包\"></a>8. 闭包</h2><h3 id=\"文章-7\"><a href=\"#文章-7\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Closures\" target=\"_blank\" rel=\"noopener\">闭包 —— MDN</a></li>\n<li>:book: <a href=\"http://www.w3school.com.cn/js/pro_js_functions_closures.asp\" target=\"_blank\" rel=\"noopener\">ECMAScript 闭包（closure）—— w3school</a></li>\n<li>:book: <a href=\"http://www.ruanyifeng.com/blog/2009/08/learning_javascript_closures.html\" target=\"_blank\" rel=\"noopener\">学习 Javascript 闭包（Closure） —— 阮一峰</a></li>\n<li>:book: <a href=\"https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/00143449934543461c9d5dfeeb848f5b72bd012e1113d15000\" target=\"_blank\" rel=\"noopener\">闭包 —— 廖雪峰</a></li>\n<li>:book: <a href=\"https://www.jianshu.com/p/796e903754f1\" target=\"_blank\" rel=\"noopener\">一次性搞懂 JavaScript 闭包 —— 简书</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000006875662\" target=\"_blank\" rel=\"noopener\">JavaScript 闭包 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://juejin.im/entry/5800eb7da22b9d005b36156e\" target=\"_blank\" rel=\"noopener\">js 匿名自执行函数中闭包的高级使用 —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/entry/59df405251882551bf7e58c6\" target=\"_blank\" rel=\"noopener\">高效使用 JavaScript 闭包 —— 掘金</a></li>\n<li>:book: <a href=\"https://www.cnblogs.com/wangfupeng1988/p/3977924.html\" target=\"_blank\" rel=\"noopener\">深入理解 JavaScript 原型与闭包 —— 王福朋</a></li>\n</ul>\n<h3 id=\"视频-5\"><a href=\"#视频-5\" class=\"headerlink\" title=\"视频\"></a>视频</h3><ul>\n<li>:tv: <a href=\"http://www.iqiyi.com/w_19rr1amael.html\" target=\"_blank\" rel=\"noopener\">JavaScript 闭包和闭包面试题 —— 爱奇艺</a></li>\n<li>:tv: <a href=\"http://www.le.com/ptv/vplay/27478410.html\" target=\"_blank\" rel=\"noopener\">js 面向对象闭包数组 11.闭包 —— 乐视</a></li>\n<li>:tv: <a href=\"http://www.le.com/ptv/vplay/30505852.html\" target=\"_blank\" rel=\"noopener\">白贺翔_函数(闭包) —— 乐视</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"9-map-reduce-filter-等高阶函数\"><a href=\"#9-map-reduce-filter-等高阶函数\" class=\"headerlink\" title=\"9. map, reduce, filter 等高阶函数\"></a>9. map, reduce, filter 等高阶函数</h2><h3 id=\"文章-8\"><a href=\"#文章-8\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/001434499355829ead974e550644e2ebd9fd8bb1b0dd721000\" target=\"_blank\" rel=\"noopener\">高阶函数 —— 廖雪峰</a></li>\n<li>:book: <a href=\"https://www.zhangxinxu.com/wordpress/2013/04/es5%e6%96%b0%e5%a2%9e%e6%95%b0%e7%bb%84%e6%96%b9%e6%b3%95/\" target=\"_blank\" rel=\"noopener\">ES5 中新增的 Array 方法详细说明 —— 张鑫旭</a></li>\n<li>:book: <a href=\"https://juejin.im/post/5835808067f3560065ed4ab2\" target=\"_blank\" rel=\"noopener\">一张图看懂 JavaScript 中数组的迭代方法：forEach、map、filter、reduce、every、some —— 掘金</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000012127329\" target=\"_blank\" rel=\"noopener\">Transducing（上）－《JavaScript 轻量级函数式编程》 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://github.com/BuptStEve/blog/issues/15\" target=\"_blank\" rel=\"noopener\">JavaScript 函数式编程（三） —— @BuptStEve</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"10-表达式和语句\"><a href=\"#10-表达式和语句\" class=\"headerlink\" title=\"10. 表达式和语句\"></a>10. 表达式和语句</h2><h3 id=\"文章-9\"><a href=\"#文章-9\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://www.cnblogs.com/xianshenglu/p/8386918.html\" target=\"_blank\" rel=\"noopener\">js 表达式与语句 —— 博客园</a></li>\n<li>:book: <a href=\"https://segmentfault.com/q/1010000004102804\" target=\"_blank\" rel=\"noopener\">JS 表达式和语句的区别 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://blog.csdn.net/mett_smith/article/details/78761247\" target=\"_blank\" rel=\"noopener\">JavaScript 中的表达式（expression）和语句/声明（statement） —— CSDN</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000004565693\" target=\"_blank\" rel=\"noopener\">重讀 Axel 的 Javascript 中的 Expression vs Statement 一文 —— SegmentFault</a></li>\n<li>:book: <a href=\"http://2ality.com/2012/09/expressions-vs-statements.html\" target=\"_blank\" rel=\"noopener\">Expressions versus statements in JavaScript —— Dr. Axel</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"11-变量提升\"><a href=\"#11-变量提升\" class=\"headerlink\" title=\"11. 变量提升\"></a>11. 变量提升</h2><h3 id=\"文章-10\"><a href=\"#文章-10\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"http://www.runoob.com/js/js-hoisting.html\" target=\"_blank\" rel=\"noopener\">JavaScript 变量提升 —— 菜鸟教程</a></li>\n<li>:book: <a href=\"https://juejin.im/post/59905bea6fb9a03c34192c51\" target=\"_blank\" rel=\"noopener\">ES6 变量作用域与提升：变量的生命周期详解 —— 掘金</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000004345355#articleHeader5\" target=\"_blank\" rel=\"noopener\">[翻译] JavaScript Scoping and Hoisting —— SegmentFault</a></li>\n<li>:book: <a href=\"http://www.adequatelygood.com/JavaScript-Scoping-and-Hoisting.html\" target=\"_blank\" rel=\"noopener\">JavaScript Scoping and Hoisting —— Ben Cherry</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"12-Promise\"><a href=\"#12-Promise\" class=\"headerlink\" title=\"12. Promise\"></a>12. Promise</h2><h3 id=\"文章-11\"><a href=\"#文章-11\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Using_promises\" target=\"_blank\" rel=\"noopener\">使用 promises —— MDN</a></li>\n<li>:book: <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\" target=\"_blank\" rel=\"noopener\">Promise —— MDN</a></li>\n<li>:book: <a href=\"https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/0014345008539155e93fc16046d4bb7854943814c4f9dc2000\" target=\"_blank\" rel=\"noopener\">Promise — 廖雪峰</a></li>\n<li>:book: <a href=\"https://www.cnblogs.com/rubylouvre/p/3495286.html\" target=\"_blank\" rel=\"noopener\">JavaScript Promise：去而复返 —— 司徒正美</a></li>\n<li>:book: <a href=\"https://developers.google.com/web/fundamentals/primers/promises#_1\" target=\"_blank\" rel=\"noopener\">(上面的原文)JavaScript Promise：简介 —— Web Fundamentals</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000011813934\" target=\"_blank\" rel=\"noopener\">1 分钟读完《10 分钟学会 JavaScript 的 Async/Await》 —— justjavac</a></li>\n<li>:book: <a href=\"https://juejin.im/entry/56499ae160b2d1404c4f8834\" target=\"_blank\" rel=\"noopener\">JavaScript Promise 迷你书（中文版）</a></li>\n<li>:book: <a href=\"https://www.cnblogs.com/yunfeifei/p/4453690.html\" target=\"_blank\" rel=\"noopener\">JavaScript 进阶之路——认识和使用 Promise，重构你的 Js 代码 —— 博客园</a></li>\n</ul>\n<h3 id=\"视频-6\"><a href=\"#视频-6\" class=\"headerlink\" title=\"视频\"></a>视频</h3><ul>\n<li>:tv: <a href=\"https://www.imooc.com/learn/949\" target=\"_blank\" rel=\"noopener\">Promise 入门 —— 慕课网</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"13-立即执行函数-模块化-命名空间\"><a href=\"#13-立即执行函数-模块化-命名空间\" class=\"headerlink\" title=\"13. 立即执行函数, 模块化, 命名空间\"></a>13. 立即执行函数, 模块化, 命名空间</h2><h3 id=\"文章-12\"><a href=\"#文章-12\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"http://www.ruanyifeng.com/blog/2012/10/javascript_module.html\" target=\"_blank\" rel=\"noopener\">Javascript 模块化编程（一）：模块的写法 —— 阮一峰</a></li>\n<li>:book: <a href=\"https://www.jianshu.com/p/4dbf4a4c8ebb\" target=\"_blank\" rel=\"noopener\">javascript 模块化编程-详解立即执行函数表达式 —— 简书</a></li>\n<li>:book: <a href=\"https://juejin.im/entry/57fee360a22b9d005b1d9ae3\" target=\"_blank\" rel=\"noopener\">Javascript 的匿名函数与自执行 —— 掘金</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000006966358\" target=\"_blank\" rel=\"noopener\">前端模块化——技术选型 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000015991869#articleHeader8\" target=\"_blank\" rel=\"noopener\">谈谈 Js 前端模块化规范 —— SegmentFault</a></li>\n<li>:book: <a href=\"http://web.jobbole.com/87534/\" target=\"_blank\" rel=\"noopener\">函数声明与函数表达式的区别 —— 伯乐在线</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"14-递归\"><a href=\"#14-递归\" class=\"headerlink\" title=\"14. 递归\"></a>14. 递归</h2><h3 id=\"文章-13\"><a href=\"#文章-13\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://segmentfault.com/q/1010000003942347\" target=\"_blank\" rel=\"noopener\">求解释 js 递归 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://juejin.im/post/5948c0d8fe88c2006a939e2a\" target=\"_blank\" rel=\"noopener\">JavaScript 中的递归 —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/post/59c1d91d6fb9a00a53275f79\" target=\"_blank\" rel=\"noopener\">递归（上）－《JavaScript 轻量级函数式编程》 —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/post/59c87fb46fb9a00a437b1a2e\" target=\"_blank\" rel=\"noopener\">递归（下）－《JavaScript 轻量级函数式编程》 —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/post/5acdd7486fb9a028ca53547c\" target=\"_blank\" rel=\"noopener\">尾调用和尾递归 —— 掘金</a></li>\n<li>:book: <a href=\"https://blog.csdn.net/qianqianstd/article/details/75807462\" target=\"_blank\" rel=\"noopener\">几个经典递归问题用 js 实现 —— CSDN</a></li>\n<li>:book: <a href=\"https://blog.csdn.net/x_i_xw/article/details/72026868\" target=\"_blank\" rel=\"noopener\">递归函数的几个例子 —— CSDN</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"15-算法\"><a href=\"#15-算法\" class=\"headerlink\" title=\"15. 算法\"></a>15. 算法</h2><h3 id=\"文章-14\"><a href=\"#文章-14\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://juejin.im/post/57dcd394a22b9d00610c5ec8\" target=\"_blank\" rel=\"noopener\">十大经典排序算法总结（JavaScript 描述） —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/post/594dfe795188250d725a220a#comment\" target=\"_blank\" rel=\"noopener\">在 JavaScript 中学习数据结构与算法 —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/post/58c9d5fb1b69e6006b686bce\" target=\"_blank\" rel=\"noopener\">JS 中可能用得到的全部的排序算法 —— 掘金</a></li>\n<li>:book: <a href=\"https://www.jianshu.com/p/1b4068ccd505\" target=\"_blank\" rel=\"noopener\">JS 家的排序算法 —— 简书</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000008593715\" target=\"_blank\" rel=\"noopener\">前端常见算法的 JS 实现 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://www.jackpu.com/qian-duan-mian-shi-zhong-de-chang-jian-de-suan-fa-wen-ti/\" target=\"_blank\" rel=\"noopener\">前端面试中的常见的算法问题 ——蒲小花的博客</a></li>\n</ul>\n<h3 id=\"视频-7\"><a href=\"#视频-7\" class=\"headerlink\" title=\"视频\"></a>视频</h3><ul>\n<li>:tv: <a href=\"https://www.imooc.com/learn/888\" target=\"_blank\" rel=\"noopener\">Javascript 实现二叉树算法 —— 慕课网</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"16-数据结构\"><a href=\"#16-数据结构\" class=\"headerlink\" title=\"16. 数据结构\"></a>16. 数据结构</h2><h3 id=\"文章-15\"><a href=\"#文章-15\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://www.jianshu.com/p/5e0e8d183102\" target=\"_blank\" rel=\"noopener\">来我们浅谈一下 js 的数据结构 —— 简书</a></li>\n<li>:book: <a href=\"https://www.jianshu.com/nb/16835496\" target=\"_blank\" rel=\"noopener\">JavaScript 中的算法与数据结构 —— 简书</a></li>\n<li>:book: <a href=\"http://blog.sina.com.cn/s/blog_7b9c5e4101017mjt.html\" target=\"_blank\" rel=\"noopener\">学 JS 必看-JavaScript 数据结构深度剖析 —— 大道至简的博客</a></li>\n<li>:book: <a href=\"https://juejin.im/entry/586effe0da2f600053d85a9a\" target=\"_blank\" rel=\"noopener\">js 中基础数据结构数组去重问题 —— 掘金</a></li>\n</ul>\n<h3 id=\"视频-8\"><a href=\"#视频-8\" class=\"headerlink\" title=\"视频\"></a>视频</h3><ul>\n<li>:tv: :tv: <a href=\"http://www.le.com/ptv/vplay/27606964.html\" target=\"_blank\" rel=\"noopener\">JavaScript 数据结构-运算符 —— 乐视</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"17-消息队列和事件循环\"><a href=\"#17-消息队列和事件循环\" class=\"headerlink\" title=\"17. 消息队列和事件循环\"></a>17. 消息队列和事件循环</h2><h3 id=\"文章-16\"><a href=\"#文章-16\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/EventLoop\" target=\"_blank\" rel=\"noopener\">并发模型与事件循环 —— MDN</a></li>\n<li>:book: <a href=\"http://www.ruanyifeng.com/blog/2014/10/event-loop.html\" target=\"_blank\" rel=\"noopener\">JavaScript 运行机制详解：再谈 Event Loop —— 阮一峰</a></li>\n<li>:book: <a href=\"https://www.cnblogs.com/dong-xu/p/7000163.html\" target=\"_blank\" rel=\"noopener\">深入理解 JavaScript 事件循环 —— 博客园</a></li>\n<li>:book: <a href=\"https://zhuanlan.zhihu.com/p/26229293\" target=\"_blank\" rel=\"noopener\">深入浅出 Javascript 事件循环机制 —— 知乎</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000014940904#articleHeader7\" target=\"_blank\" rel=\"noopener\">JS 事件循环机制（event loop）之宏任务、微任务 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000004322358\" target=\"_blank\" rel=\"noopener\">JavaScript：彻底理解同步、异步和事件循环 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://juejin.im/post/5a6547d0f265da3e283a1df7\" target=\"_blank\" rel=\"noopener\">从浏览器多进程到 JS 单线程，JS 运行机制最全面的一次梳理 —— 掘金</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"18-setTimeout-setInterval-和-requestAnimationFrame\"><a href=\"#18-setTimeout-setInterval-和-requestAnimationFrame\" class=\"headerlink\" title=\"18. setTimeout, setInterval 和 requestAnimationFrame\"></a>18. setTimeout, setInterval 和 requestAnimationFrame</h2><h3 id=\"文章-17\"><a href=\"#文章-17\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"http://www.runoob.com/jsref/met-win-settimeout.html\" target=\"_blank\" rel=\"noopener\">Window setTimeout() 方法 —— 菜鸟教程</a></li>\n<li>:book: <a href=\"http://www.runoob.com/jsref/met-win-setinterval.html\" target=\"_blank\" rel=\"noopener\">Window setInterval() 方法 —— 菜鸟教程</a></li>\n<li>:book: <a href=\"https://juejin.im/post/5aa4c47af265da239866e236\" target=\"_blank\" rel=\"noopener\">关于 setTimeout —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/post/5a77f8ce5188257a6d635d76\" target=\"_blank\" rel=\"noopener\">你不知道的 Javascript：有趣的 setTimeout —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/entry/5861ebf01b69e6006ce61d38\" target=\"_blank\" rel=\"noopener\">原来你是这样的 setTimeout —— 掘金</a></li>\n<li>:book: <a href=\"https://segmentfault.com/q/1010000005989491\" target=\"_blank\" rel=\"noopener\">setTimeout() 和 setInterval() 本质区别在哪里？ —— SegmentFault</a></li>\n<li>book: <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/requestAnimationFrame\" target=\"_blank\" rel=\"noopener\">window.requestAnimationFrame —— MDN</a></li>\n<li>:book: <a href=\"http://www.cnblogs.com/onepixel/p/7078617.html\" target=\"_blank\" rel=\"noopener\">requestAnimationFrame 知多少？ —— 博客园</a></li>\n<li>:book: <a href=\"https://www.zhangxinxu.com/wordpress/2013/09/css3-animation-requestanimationframe-tween-%e5%8a%a8%e7%94%bb%e7%ae%97%e6%b3%95/\" target=\"_blank\" rel=\"noopener\">CSS3 动画那么强，requestAnimationFrame 还有毛线用？ —— 张鑫旭</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000014661035\" target=\"_blank\" rel=\"noopener\">「JavaScript 定时器」setInterval、setTimeout 和 requestAnimationFrame 浅析 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000000386368\" target=\"_blank\" rel=\"noopener\">翻译：setInterval 与 requestAnimationFrame 的时间间隔测试 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://segmentfault.com/q/1010000013909430\" target=\"_blank\" rel=\"noopener\">阿里前端面试题：requestAnimationFrame 实现类似 setInterval 的计时器 —— SegmentFault</a></li>\n</ul>\n<h3 id=\"视频-9\"><a href=\"#视频-9\" class=\"headerlink\" title=\"视频\"></a>视频</h3><ul>\n<li>:tv: <a href=\"http://v.youku.com/v_show/id_XNTA4OTQ0NzA0.html\" target=\"_blank\" rel=\"noopener\">setTimeout 和 setInterval —— 优酷</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"19-继承-多态和代码复用\"><a href=\"#19-继承-多态和代码复用\" class=\"headerlink\" title=\"19. 继承, 多态和代码复用\"></a>19. 继承, 多态和代码复用</h2><h3 id=\"文章-18\"><a href=\"#文章-18\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://www.cnblogs.com/Leo_wl/p/5734794.html\" target=\"_blank\" rel=\"noopener\">JS 面向对象编程之：封装、继承、多态 —— 博客园</a></li>\n<li>:book: <a href=\"https://www.jianshu.com/p/5cb692658704\" target=\"_blank\" rel=\"noopener\">Javascript 的继承与多态 —— 简书</a></li>\n<li>:book: <a href=\"https://juejin.im/post/59396c96fe88c2006afc2707\" target=\"_blank\" rel=\"noopener\">js:面向对象编程，带你认识封装、继承和多态 —— 掘金</a></li>\n<li>:book: <a href=\"https://zhuanlan.zhihu.com/p/34693209\" target=\"_blank\" rel=\"noopener\">JavaScript 中的“多继承” —— 掘金</a></li>\n<li>:book: <a href=\"https://github.com/TooBug/javascript.patterns/blob/master/chapter6.markdown\" target=\"_blank\" rel=\"noopener\">代码复用模式 —— github</a></li>\n<li>:book: <a href=\"http://www.cnblogs.com/TomXu/archive/2012/04/24/2438050.html\" target=\"_blank\" rel=\"noopener\">深入理解 JavaScript：代码复用模式(推荐篇) —— 汤姆大叔</a></li>\n<li>:book: <a href=\"https://www.cnblogs.com/TomXu/archive/2012/04/23/2438005.html\" target=\"_blank\" rel=\"noopener\">深入理解 JavaScript：代码复用模式(避免篇) —— 汤姆大叔</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"20-按位操作符-类数组对象和类型化数组\"><a href=\"#20-按位操作符-类数组对象和类型化数组\" class=\"headerlink\" title=\"20. 按位操作符, 类数组对象和类型化数组\"></a>20. 按位操作符, 类数组对象和类型化数组</h2><h3 id=\"文章-19\"><a href=\"#文章-19\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators\" target=\"_blank\" rel=\"noopener\">按位操作符 —— MDN</a></li>\n<li>:book: <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Typed_arrays\" target=\"_blank\" rel=\"noopener\">类数组对象 —— MDN</a></li>\n<li>:book: <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\" target=\"_blank\" rel=\"noopener\">类型化数组 —— MDN</a></li>\n<li>:book: <a href=\"https://www.cnblogs.com/gradolabs/p/4762134.html\" target=\"_blank\" rel=\"noopener\">JavaScript ArrayBuffer 浅析 —— 博客园</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"21-DOM-树和渲染过程\"><a href=\"#21-DOM-树和渲染过程\" class=\"headerlink\" title=\"21. DOM 树和渲染过程\"></a>21. DOM 树和渲染过程</h2><h3 id=\"文章-20\"><a href=\"#文章-20\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Document_Object_Model/How_to_create_a_DOM_tree\" target=\"_blank\" rel=\"noopener\">如何创建一个 DOM 树 —— MDN</a></li>\n<li>:book: <a href=\"http://www.w3school.com.cn/htmldom/dom_nodes.asp\" target=\"_blank\" rel=\"noopener\">HTML DOM 节点 —— W3school</a></li>\n<li>:book: <a href=\"http://javascript.ruanyifeng.com/dom/node.html\" target=\"_blank\" rel=\"noopener\">DOM 概述 —— 阮一峰</a></li>\n<li>:book: <a href=\"https://juejin.im/post/583cbbfa61ff4b006ccc41fe\" target=\"_blank\" rel=\"noopener\">《JavaScript 闯关记》之 DOM（上）—— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/post/583cbc4961ff4b006ccc44fb\" target=\"_blank\" rel=\"noopener\">《JavaScript 闯关记》之 DOM（下）—— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/entry/58314efd8ac2470061bb30fd\" target=\"_blank\" rel=\"noopener\">掌握 DOM 操作 —— 掘金</a></li>\n<li>:book: <a href=\"https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/001434500494451273e6b3dec9d411d9ba841dee8caec45000\" target=\"_blank\" rel=\"noopener\">操作 DOM —— 廖雪峰</a></li>\n<li>:book: <a href=\"https://juejin.im/post/59c60691518825396f4f71a1\" target=\"_blank\" rel=\"noopener\">原来 CSS 与 JS 是这样阻塞 DOM 解析和渲染的 —— 掘金</a></li>\n</ul>\n<h3 id=\"视频-10\"><a href=\"#视频-10\" class=\"headerlink\" title=\"视频\"></a>视频</h3><ul>\n<li>:tv: <a href=\"https://www.imooc.com/learn/488\" target=\"_blank\" rel=\"noopener\">DOM 探索之基础详解篇 —— 慕课网</a></li>\n<li>:tv: <a href=\"https://www.imooc.com/learn/138\" target=\"_blank\" rel=\"noopener\">DOM 事件探秘 —— 慕课网</a></li>\n<li>:tv: <a href=\"https://www.imooc.com/learn/530\" target=\"_blank\" rel=\"noopener\">jQuery 基础(二)DOM 篇 —— 慕课网</a></li>\n<li>:tv: <a href=\"http://www.iqiyi.com/w_19rr19s08l.html\" target=\"_blank\" rel=\"noopener\">JS 操作 DOM 对象属性和方法 —— 爱奇艺</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"22-new-与构造函数-instanceof-与实例\"><a href=\"#22-new-与构造函数-instanceof-与实例\" class=\"headerlink\" title=\"22. new 与构造函数, instanceof 与实例\"></a>22. new 与构造函数, instanceof 与实例</h2><h3 id=\"文章-21\"><a href=\"#文章-21\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"http://javascript.ruanyifeng.com/oop/basic.html\" target=\"_blank\" rel=\"noopener\">构造函数与 new 命令 —— 阮一峰</a></li>\n<li>:book: <a href=\"http://www.ruanyifeng.com/blog/2010/05/object-oriented_javascript_inheritance.html\" target=\"_blank\" rel=\"noopener\">Javascript 面向对象编程（二）：构造函数的继承 —— 阮一峰</a></li>\n<li>:book: <a href=\"https://blog.csdn.net/SpicyBoiledFish/article/details/71123162\" target=\"_blank\" rel=\"noopener\">完整原型链详细图解(构造函数、原型、实例化对象) —— CSDN</a></li>\n<li>:book: <a href=\"http://www.php.cn/js-tutorial-376246.html\" target=\"_blank\" rel=\"noopener\">JavaScript 中构造函数与 new 操作符的实例详解 —— PHP 中文网</a></li>\n<li>:book: <a href=\"https://blog.csdn.net/yin_991/article/details/80954453\" target=\"_blank\" rel=\"noopener\">构造函数、实例、原型、原型链之间的关系 —— CSDN</a></li>\n<li>:book: <a href=\"https://blog.csdn.net/cecilia620/article/details/71158048\" target=\"_blank\" rel=\"noopener\">深入理解 JS—instanceof 和原型链 —— CSDN</a></li>\n<li>:book: <a href=\"https://www.jianshu.com/p/15ac7393bc1f\" target=\"_blank\" rel=\"noopener\">前端基础进阶（九）：详解面向对象、构造函数、原型与原型链 —— 简书</a></li>\n<li>:book: <a href=\"https://www.jianshu.com/p/60ffc4831bff\" target=\"_blank\" rel=\"noopener\">js 用 new 实例化对象与直接调用的 this 的区别 —— 简书</a></li>\n<li>:book: <a href=\"http://justjavac.com/javascript/2012/12/22/javascript-values-not-everything-is-an-object.html\" target=\"_blank\" rel=\"noopener\">JavaScript 并非所有的东西都是对象 —— justjavac</a></li>\n<li>:book: <a href=\"https://www.ibm.com/developerworks/cn/web/1306_jiangjj_jsinstanceof/\" target=\"_blank\" rel=\"noopener\">JavaScript instanceof 运算符深入剖析 —— IBM</a></li>\n</ul>\n<h3 id=\"视频-11\"><a href=\"#视频-11\" class=\"headerlink\" title=\"视频\"></a>视频</h3><ul>\n<li>:tv: <a href=\"http://www.le.com/ptv/vplay/27766889.html\" target=\"_blank\" rel=\"noopener\">改良版的构造函数 —— 乐视</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"23-原型继承与原型链\"><a href=\"#23-原型继承与原型链\" class=\"headerlink\" title=\"23. 原型继承与原型链\"></a>23. 原型继承与原型链</h2><h3 id=\"文章-22\"><a href=\"#文章-22\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Inheritance_and_the_prototype_chain\" target=\"_blank\" rel=\"noopener\">继承与原型链 —— MDN</a></li>\n<li>:book: <a href=\"https://github.com/bigdots/blog/issues/1\" target=\"_blank\" rel=\"noopener\">构造函数、原型与原型链 —— github</a></li>\n<li>:book: <a href=\"https://github.com/stone0090/javascript-lessons/tree/master/2.5-Prototype\" target=\"_blank\" rel=\"noopener\">原型及原型链 —— github(1269 Star)</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000004282206\" target=\"_blank\" rel=\"noopener\">理清 javascript 中的面向对象(一) 原型继承 —— SegmentFault</a></li>\n<li>:book: <a href=\"http://justjavac.com/2015/12/09/inheritance-and-the-prototype-chain.html\" target=\"_blank\" rel=\"noopener\">JavaScript：继承和原型链(译) —— justjavac</a></li>\n<li>:book: <a href=\"http://www.cnblogs.com/shuiyi/p/5305435.html\" target=\"_blank\" rel=\"noopener\">三张图搞懂 JavaScript 的原型对象与原型链 —— 博客园</a></li>\n<li>:book: <a href=\"https://blog.csdn.net/the__apollo/article/details/76774698\" target=\"_blank\" rel=\"noopener\">一张图让你搞懂 JavaScript 的继承与原型链 —— CSDN</a></li>\n<li>:book: <a href=\"https://blog.csdn.net/xiaotao_css/article/details/72782416\" target=\"_blank\" rel=\"noopener\">JS 高级–原型链(一看就懂，但 18 岁以下请绕道) —— CSDN</a></li>\n<li>:book: <a href=\"https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/0014344997013405abfb7f0e1904a04ba6898a384b1e925000\" target=\"_blank\" rel=\"noopener\">原型继承 —— 廖雪峰</a></li>\n<li>:book: <a href=\"https://juejin.im/post/58f94c9bb123db411953691b\" target=\"_blank\" rel=\"noopener\">JS 原型链与继承别再被问倒了 —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/entry/5885db221b69e600592253e7\" target=\"_blank\" rel=\"noopener\">征服 JavaScript 面试系列：类继承和原型继承的区别 —— 掘金</a></li>\n<li>:book: <a href=\"https://github.com/mqyqingfeng/Blog/issues/2\" target=\"_blank\" rel=\"noopener\">JavaScript 深入之从原型到原型链 —— 冴羽</a></li>\n<li>:book: <a href=\"https://www.cnblogs.com/wangfupeng1988/p/3977924.html\" target=\"_blank\" rel=\"noopener\">深入理解 JavaScript 原型与闭包 —— 王福朋</a></li>\n</ul>\n<h3 id=\"视频-12\"><a href=\"#视频-12\" class=\"headerlink\" title=\"视频\"></a>视频</h3><ul>\n<li>:tv: <a href=\"http://www.le.com/ptv/vplay/27552753.html\" target=\"_blank\" rel=\"noopener\">JS 高级-07-原型链继承 —— 乐视</a></li>\n<li>:tv: <a href=\"https://v.qq.com/x/page/b0511nwa7d3.html\" target=\"_blank\" rel=\"noopener\">JS 原型对象和原型链简介 —— 腾讯视频</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"24-Object-create-和-Object-assign\"><a href=\"#24-Object-create-和-Object-assign\" class=\"headerlink\" title=\"24. Object.create 和 Object.assign\"></a>24. Object.create 和 Object.assign</h2><h3 id=\"文章-23\"><a href=\"#文章-23\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/create\" target=\"_blank\" rel=\"noopener\">Object.create —— MDN</a></li>\n<li>:book: <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\" target=\"_blank\" rel=\"noopener\">Object.assign —— MDN</a></li>\n<li>:book: <a href=\"https://www.imooc.com/article/17591\" target=\"_blank\" rel=\"noopener\">Object.create vs Object.assign —— 慕课网手记</a></li>\n<li>:book: <a href=\"https://blog.csdn.net/DeepLies/article/details/52915143\" target=\"_blank\" rel=\"noopener\">JS 中的 Object.assign()、Object.create()、Object.defineProperty() —— CSDN</a></li>\n<li>:book: <a href=\"http://www.onlyfordream.cn/2018/03/19/es6%E4%B8%ADobject-create%E5%92%8Cobject-assign/\" target=\"_blank\" rel=\"noopener\">es6 中 object.create()和 object.assign() —— 风信子博客</a></li>\n<li>:book: <a href=\"https://github.com/saikojosh/Object-Assign-Deep\" target=\"_blank\" rel=\"noopener\">Object-Assign-Deep —— github</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"25-工厂函数和类\"><a href=\"#25-工厂函数和类\" class=\"headerlink\" title=\"25. 工厂函数和类\"></a>25. 工厂函数和类</h2><h3 id=\"文章-24\"><a href=\"#文章-24\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Classes\" target=\"_blank\" rel=\"noopener\">类 —— MDN</a></li>\n<li>:book: <a href=\"https://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/00138682004077376d2d7f8cc8a4e2c9982f92788588322000\" target=\"_blank\" rel=\"noopener\">类和实例 —— 廖雪峰</a></li>\n<li>:book: <a href=\"http://www.ruanyifeng.com/blog/2012/07/three_ways_to_define_a_javascript_class.html\" target=\"_blank\" rel=\"noopener\">Javascript 定义类（class）的三种方法 —— 阮一峰</a></li>\n<li>:book: <a href=\"https://juejin.im/post/59c8c8756fb9a00a681ae5bd\" target=\"_blank\" rel=\"noopener\">【译】ES6 的工厂函数 —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/entry/587992c961ff4b0065edf1ff\" target=\"_blank\" rel=\"noopener\">JavaScript 创建对象之单例、工厂、构造函数模式 —— 掘金</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"26-设计模式\"><a href=\"#26-设计模式\" class=\"headerlink\" title=\"26. 设计模式\"></a>26. 设计模式</h2><h3 id=\"文章-25\"><a href=\"#文章-25\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://juejin.im/post/59df4f74f265da430f311909\" target=\"_blank\" rel=\"noopener\">JavaScript 设计模式 —— 掘金</a></li>\n<li>:book: <a href=\"http://wiki.jikexueyuan.com/project/javascript-design-patterns/\" target=\"_blank\" rel=\"noopener\">学用 JavaScript 设计模式 —— 极客学院</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000010914032\" target=\"_blank\" rel=\"noopener\">[面试专题]JS 设计模式 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://github.com/lxj/javascript.patterns\" target=\"_blank\" rel=\"noopener\">JavaScript Patterns 中译本 —— github</a></li>\n</ul>\n<h3 id=\"视频-13\"><a href=\"#视频-13\" class=\"headerlink\" title=\"视频\"></a>视频</h3><ul>\n<li>:tv: <a href=\"https://tv.sohu.com/v/dXMvMjQwNzYwNzQ4Lzg5NzM2MDA3LnNodG1s.html\" target=\"_blank\" rel=\"noopener\">HTML5 课程大纲 2-11JS 设计模式</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"27-Memoization\"><a href=\"#27-Memoization\" class=\"headerlink\" title=\"27. Memoization\"></a>27. Memoization</h2><h3 id=\"文章-26\"><a href=\"#文章-26\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://www.cnblogs.com/rubylouvre/archive/2009/08/06/1540678.html\" target=\"_blank\" rel=\"noopener\">JavaScript Memoization —— 司徒正美</a></li>\n<li>:book: <a href=\"https://www.cnblogs.com/yingshuizy/p/4517102.html\" target=\"_blank\" rel=\"noopener\">memoization 提升递归效率 —— 博客园</a></li>\n<li>:book: <a href=\"http://developer.51cto.com/art/201010/231513.htm\" target=\"_blank\" rel=\"noopener\">如何提升 JavaScript 的递归效率 —— 51CTO</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000016703106\" target=\"_blank\" rel=\"noopener\">JavaScript 高级技巧 Memoization —— SegmentFaut</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"28-纯函数-函数副作用和状态变化\"><a href=\"#28-纯函数-函数副作用和状态变化\" class=\"headerlink\" title=\"28. 纯函数, 函数副作用和状态变化\"></a>28. 纯函数, 函数副作用和状态变化</h2><h3 id=\"文章-27\"><a href=\"#文章-27\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"http://huziketang.mangojuice.top/books/react/lesson32\" target=\"_blank\" rel=\"noopener\">纯函数(Pure Function) —— React.js 小书</a></li>\n<li>:book: <a href=\"https://ninghao.net/blog/4634\" target=\"_blank\" rel=\"noopener\">JavaScript Functional Programming：纯函数 —— 宁皓网</a></li>\n<li>:book: <a href=\"https://www.jb51.net/article/28079.htm\" target=\"_blank\" rel=\"noopener\">js 函数的副作用分析 —— 脚本之家</a></li>\n<li>:book: <a href=\"https://juejin.im/post/5b82bdb351882542e241ed32?utm_medium=hao.caibaojian.com&amp;utm_source=hao.caibaojian.com\" target=\"_blank\" rel=\"noopener\">如何使用纯函数式 JavaScript 处理脏副作用 —— 掘金</a></li>\n<li>:book: <a href=\"http://www.cnblogs.com/zhangycun/p/9403335.html\" target=\"_blank\" rel=\"noopener\">原生 JavaScript 实现 state 状态管理系统 —— 博客园</a></li>\n<li>:book: <a href=\"https://github.com/BuptStEve/blog/issues/10\" target=\"_blank\" rel=\"noopener\">JavaScript 函数式编程 —— @BuptStEve</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"29-耗性能操作和时间复杂度\"><a href=\"#29-耗性能操作和时间复杂度\" class=\"headerlink\" title=\"29. 耗性能操作和时间复杂度\"></a>29. 耗性能操作和时间复杂度</h2><h3 id=\"文章-28\"><a href=\"#文章-28\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://juejin.im/entry/593f56528d6d810058a355f4\" target=\"_blank\" rel=\"noopener\">时间复杂度 O(log n) 意味着什么？ —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/entry/5a49f7d36fb9a0450a67b269\" target=\"_blank\" rel=\"noopener\">算法的时间复杂度和空间复杂度 —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/post/58d15f1044d90400691834d4\" target=\"_blank\" rel=\"noopener\">算法（一）时间复杂度 —— 掘金</a></li>\n<li>:book: <a href=\"http://www.bradoncode.com/blog/2012/04/big-o-algorithm-examples-in-javascript.html\" target=\"_blank\" rel=\"noopener\">Big O Search Algorithms in JavaScript —— Bradley Braithwaite</a></li>\n<li>:book: <a href=\"https://www.jenniferbland.com/time-complexity-analysis-in-javascript/\" target=\"_blank\" rel=\"noopener\">Time Complexity Analysis in JavaScript — Jennifer Bland</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"30-JavaScript-引擎\"><a href=\"#30-JavaScript-引擎\" class=\"headerlink\" title=\"30. JavaScript 引擎\"></a>30. JavaScript 引擎</h2><h3 id=\"文章-29\"><a href=\"#文章-29\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://baike.baidu.com/item/javascript引擎/5356108\" target=\"_blank\" rel=\"noopener\">javascript 引擎 —— 百度百科</a></li>\n<li>:book: <a href=\"https://baike.baidu.com/item/V8/6178125\" target=\"_blank\" rel=\"noopener\">V8(JavaScript 引擎) —— 百度百科</a></li>\n<li>:book: <a href=\"https://juejin.im/post/5a6309f76fb9a01cab2858b1\" target=\"_blank\" rel=\"noopener\">图解搞懂 JavaScript 引擎 Event Loop —— 掘金</a>3</li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000010819020\" target=\"_blank\" rel=\"noopener\">V8 JavaScript 引擎：高性能的 ES2015+ —— justjavac</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000012806637\" target=\"_blank\" rel=\"noopener\">10 分钟理解 JS 引擎的执行机制 —— SegmentFaut</a></li>\n<li>:book: <a href=\"https://www.cnblogs.com/weirdoQi/p/6609811.html\" target=\"_blank\" rel=\"noopener\">V8 javascript 引擎 —— 博客园</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"31-二进制-十六进制-十进制-科学记数法\"><a href=\"#31-二进制-十六进制-十进制-科学记数法\" class=\"headerlink\" title=\"31. 二进制, 十六进制, 十进制, 科学记数法\"></a>31. 二进制, 十六进制, 十进制, 科学记数法</h2><h3 id=\"文章-30\"><a href=\"#文章-30\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"http://www.cnblogs.com/gaizai/p/4233780.html\" target=\"_blank\" rel=\"noopener\">二、八、十、十六进制转换(图解篇) —— 博客园</a></li>\n<li>:book: <a href=\"https://juejin.im/post/5b93dadaf265da0a857a58a3\" target=\"_blank\" rel=\"noopener\">JavaScript 读写二进制数据 —— 掘金</a></li>\n</ul>\n<h3 id=\"视频-14\"><a href=\"#视频-14\" class=\"headerlink\" title=\"视频\"></a>视频</h3><ul>\n<li>:tv: <a href=\"http://baishi.baidu.com/watch/7873060963471478456.html\" target=\"_blank\" rel=\"noopener\">二进制、十进制、十六进制互相转化很难吗？ —— 百度视频</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"32-偏函数-柯里化-Compose-和-Pipe\"><a href=\"#32-偏函数-柯里化-Compose-和-Pipe\" class=\"headerlink\" title=\"32. 偏函数, 柯里化, Compose 和 Pipe\"></a>32. 偏函数, 柯里化, Compose 和 Pipe</h2><h3 id=\"文章-31\"><a href=\"#文章-31\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://blog.csdn.net/qq_42129063/article/details/81874314\" target=\"_blank\" rel=\"noopener\">Javascript 函数式编程之偏函数 —— CSDN</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000010686144\" target=\"_blank\" rel=\"noopener\">JavaScript 专题之偏函数 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://segmentfault.com/q/1010000008626058\" target=\"_blank\" rel=\"noopener\">柯里化和偏函数有什么区别？ —— SegmentFault</a></li>\n<li>:book: <a href=\"https://blog.csdn.net/neweastsun/article/details/75947785\" target=\"_blank\" rel=\"noopener\">Javascript 偏函数与柯里化 —— CSDN</a></li>\n<li>:book: <a href=\"https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch4.html\" target=\"_blank\" rel=\"noopener\">柯里化(curry) —— JS 函数式编程指南</a></li>\n<li>:book: <a href=\"https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch5.html\" target=\"_blank\" rel=\"noopener\">代码组合(compose) —— JS 函数式编程指南</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000008394749\" target=\"_blank\" rel=\"noopener\">关于 javascript 函数式编程中 compose 的实现 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000011447164\" target=\"_blank\" rel=\"noopener\">实现 compose 的五种思路 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000015102804\" target=\"_blank\" rel=\"noopener\">JavaScript 函数式编程之函数组合函数 compose 和 pipe 的实现 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://juejin.im/post/59a62f3d6fb9a0248363fd9d#comment\" target=\"_blank\" rel=\"noopener\">JavaScript 轻量级函数式编程-第 4 章:组合函数 ——掘金</a></li>\n<li>:book: <a href=\"https://github.com/BuptStEve/blog/issues/11\" target=\"_blank\" rel=\"noopener\">JavaScript 函数式编程（二） —— @BuptStEve</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"33-代码整洁之道\"><a href=\"#33-代码整洁之道\" class=\"headerlink\" title=\"33. 代码整洁之道\"></a>33. 代码整洁之道</h2><h3 id=\"文章-32\"><a href=\"#文章-32\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://www.zcfy.cc/article/clean-code-javascript-readme-md-at-master-ryanmcdermott-clean-code-javascript-github-2273.html\" target=\"_blank\" rel=\"noopener\">[译] JavaScript 代码整洁之道 —— 边城</a></li>\n<li>:book: <a href=\"http://www.ruanyifeng.com/blog/2012/04/javascript_programming_style.html\" target=\"_blank\" rel=\"noopener\">Javascript 编程风格 —— 阮一峰</a></li>\n<li>:book: <a href=\"https://juejin.im/post/5a5b2a5c6fb9a01cbc6e59f9\" target=\"_blank\" rel=\"noopener\">重构 - 代码整洁之道 —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/post/5a7d71836fb9a063435ecf51\" target=\"_blank\" rel=\"noopener\">让你的代码更简短，更整洁，更易读的 ES6 小技巧 —— 掘金</a></li>\n<li>:book: <a href=\"http://blog.jobbole.com/23617/\" target=\"_blank\" rel=\"noopener\">Web 前端：11 个让你代码整洁的原则 —— 伯乐在线</a></li>\n<li>:book: <a href=\"https://github.com/ryanmcdermott/clean-code-javascript\" target=\"_blank\" rel=\"noopener\">Clean Code concepts adapted for JavaScript —— ryanmcdermott</a></li>\n</ul>\n<p><br></p>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p><a href=\"https://github.com/stephentian/33-js-concepts\" target=\"_blank\" rel=\"noopener\">原文链接</a></p>\n<blockquote>\n<p>本篇文章是参照 @leonardomso 创立，英文版项目地址在<a href=\"https://github.com/leonardomso/33-js-concepts\" target=\"_blank\" rel=\"noopener\">这里</a>。</p>\n</blockquote>\n<hr>\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ol>\n<li><strong><a href=\"#1-调用堆栈\">调用堆栈</a></strong></li>\n<li><strong><a href=\"#2-原始类型\">原始类型</a></strong></li>\n<li><strong><a href=\"#3-值类型和引用类型\">值类型和引用类型</a></strong></li>\n<li><strong><a href=\"#4-隐式-显式-名义和鸭子类型\">隐式, 显式, 名义和鸭子类型</a></strong></li>\n<li><strong><a href=\"#5--vs--typeof-vs-instanceof\">== 与 ===, typeof 与 instanceof</a></strong></li>\n<li><strong><a href=\"#6-this-call-apply-和-bind\">this, call, apply 和 bind</a></strong></li>\n<li><strong><a href=\"#7-函数作用域-块级作用域和词法作用域\">函数作用域, 块级作用域和词法作用域</a></strong></li>\n<li><strong><a href=\"#8-闭包\">闭包</a></strong></li>\n<li><strong><a href=\"#9-map-reduce-filter-等高阶函数\">map, reduce, filter 等高阶函数</a></strong></li>\n<li><strong><a href=\"#10-表达式和语句\">表达式和语句</a></strong></li>\n<li><strong><a href=\"#11-变量提升\">变量提升</a></strong></li>\n<li><strong><a href=\"#12-promise\">Promise</a></strong></li>\n<li><strong><a href=\"#13-立即执行函数-模块化-命名空间\">立即执行函数, 模块化, 命名空间</a></strong></li>\n<li><strong><a href=\"#14-递归\">递归</a></strong></li>\n<li><strong><a href=\"#15-算法\">算法</a></strong></li>\n<li><strong><a href=\"#16-数据结构\">数据结构</a></strong></li>\n<li><strong><a href=\"#17-消息队列和事件循环\">消息队列和事件循环</a></strong></li>\n<li><strong><a href=\"#18-settimeout-setinterval-和-requestanimationframe\">setTimeout, setInterval 和 requestAnimationFrame</a></strong></li>\n<li><strong><a href=\"#19-继承-多态和代码复用\">继承, 多态和代码复用</a></strong></li>\n<li><strong><a href=\"#20-按位操作符-类数组对象和类型化数组\">按位操作符, 类数组对象和类型化数组</a></strong></li>\n<li><strong><a href=\"#21-dom-树和渲染过程\">DOM 树和渲染过程</a></strong></li>\n<li><strong><a href=\"#22-new-与构造函数-instanceof-与实例\">new 与构造函数, instanceof 与实例</a></strong></li>\n<li><strong><a href=\"#23-原型继承与原型链\">原型继承与原型链</a></strong></li>\n<li><strong><a href=\"#24-objectcreate-和-objectassign\">Object.create 和 Object.assign</a></strong></li>\n<li><strong><a href=\"#25-工厂函数和类\">工厂函数和类</a></strong></li>\n<li><strong><a href=\"#26-设计模式\">设计模式</a></strong></li>\n<li><strong><a href=\"#27-memoization\">Memoization</a></strong></li>\n<li><strong><a href=\"#28-纯函数-函数副作用和状态变化\">纯函数, 函数副作用和状态变化</a></strong></li>\n<li><strong><a href=\"#29-耗性能操作和时间复杂度\">耗性能操作和时间复杂度</a></strong></li>\n<li><strong><a href=\"#30-javascript-引擎\">JavaScript 引擎</a></strong></li>\n<li><strong><a href=\"#31-二进制-十六进制-十进制-科学记数法\">二进制, 十进制, 十六进制, 科学记数法</a></strong></li>\n<li><strong><a href=\"#32-偏函数-柯里化-compose-和-pipe\">偏函数, 柯里化, Compose 和 Pipe</a></strong></li>\n<li><strong><a href=\"#33-代码整洁之道\">代码整洁之道</a></strong></li>\n</ol>\n<hr>\n<h2 id=\"1-调用堆栈\"><a href=\"#1-调用堆栈\" class=\"headerlink\" title=\"1. 调用堆栈\"></a>1. 调用堆栈</h2><h3 id=\"文章\"><a href=\"#文章\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/Call_stack\" target=\"_blank\" rel=\"noopener\">Call Stack — MDN</a></li>\n<li>:book: <a href=\"https://juejin.im/post/5a05b4576fb9a04519690d42\" target=\"_blank\" rel=\"noopener\">[译] JavaScript 如何工作：对引擎、运行时、调用堆栈的概述 —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/post/5ba32171f265da0ab719a6d7\" target=\"_blank\" rel=\"noopener\">[译] 理解 JavaScript 中的执行上下文和执行栈 —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/post/59e85eebf265da430d571f89\" target=\"_blank\" rel=\"noopener\">这一次，彻底弄懂 JavaScript 执行机制 —— 掘金</a></li>\n<li>:book: <a href=\"https://www.oschina.net/translate/how-does-javascript-actually-work-part-1\" target=\"_blank\" rel=\"noopener\">解读 JavaScript 之引擎、运行时和堆栈调用 —— 开源中国</a></li>\n<li>:book: <a href=\"https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/\" target=\"_blank\" rel=\"noopener\">Tasks, microtasks, queues and schedules —— Jake Archibald</a></li>\n<li>:book: <a href=\"https://juejin.im/entry/55dbd51a60b2f3a92a8f5bff\" target=\"_blank\" rel=\"noopener\">Tasks, microtasks, queues and schedules（译） —— 掘金</a></li>\n</ul>\n<h3 id=\"视频\"><a href=\"#视频\" class=\"headerlink\" title=\"视频\"></a>视频</h3><ul>\n<li>:tv: <a href=\"https://v.qq.com/x/page/h0372bld8re.html?ptag=qqbrowser\" target=\"_blank\" rel=\"noopener\">What is the event loop anyway? —— 腾讯视频(英文字幕)</a></li>\n<li>:tv: <a href=\"https://www.bilibili.com/video/av33824933/\" target=\"_blank\" rel=\"noopener\">Understanding The JavaScript Call Stack, Event Queue, Event Table, &amp; Event Loop —— Bilibili</a></li>\n<li>:tv: <a href=\"http://www.acfun.cn/v/ac4495641\" target=\"_blank\" rel=\"noopener\">JS 中的变量提升、堆栈内存及闭包详解 —— Acfun</a></li>\n<li>:tv: <a href=\"http://www.php.cn/code/21194.html\" target=\"_blank\" rel=\"noopener\">事件循环模型 —— PHP 中文网</a></li>\n<li>:tv: <a href=\"https://www.youtube.com/watch?v=w6QGEiQceOM\" target=\"_blank\" rel=\"noopener\">Javascript: the Call Stack explained — Coding Blocks India</a></li>\n<li>:tv: <a href=\"https://www.youtube.com/watch?v=W8AeMrVtFLY\" target=\"_blank\" rel=\"noopener\">The JS Call Stack Explained In 9 Minutes — Colt Steele</a></li>\n<li>:tv: <a href=\"https://www.youtube.com/watch?v=jT0USJeNFEA\" target=\"_blank\" rel=\"noopener\">JavaScript Execution Stack — Codecademy</a></li>\n<li>:tv: <a href=\"https://www.youtube.com/watch?v=w7QWQlkLY_s\" target=\"_blank\" rel=\"noopener\">What is the Call Stack? — Eric Traub</a></li>\n<li>:tv: <a href=\"https://www.youtube.com/watch?v=Q2sFmqvpBe0\" target=\"_blank\" rel=\"noopener\">The Call Stack — Kevin Drumm</a></li>\n<li>:tv: <a href=\"https://www.youtube.com/watch?v=Z6a1cLyq7Ac&amp;list=PLWrQZnG8l0E4kd1T_nyuVoxQUaYEWFgcD\" target=\"_blank\" rel=\"noopener\">Understanding JavaScript Execution — Codesmith</a></li>\n<li>:tv: <a href=\"https://www.youtube.com/watch?v=mk0lu9MKBto\" target=\"_blank\" rel=\"noopener\">Call Stack &amp; Event Loop — movies com</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"2-原始类型\"><a href=\"#2-原始类型\" class=\"headerlink\" title=\"2. 原始类型\"></a>2. 原始类型</h2><h3 id=\"文章-1\"><a href=\"#文章-1\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://developer.mozilla.org/zh-CN/docs/Glossary/Primitive\" target=\"_blank\" rel=\"noopener\">原始数据 —— MDN</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000017090272\" target=\"_blank\" rel=\"noopener\">[译]JavaScript 是怎样编码数字的 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://yanhaijing.com/javascript/2014/03/14/what-every-javascript-developer-should-know-about-floating-points/\" target=\"_blank\" rel=\"noopener\">每一个 JavaScript 开发者应该了解的浮点知识 —— 颜海镜</a></li>\n<li>:book: <a href=\"https://wangdoc.com/javascript/types/number.html\" target=\"_blank\" rel=\"noopener\">JavaScript 标准参考教程(基本语法之数值) —— 阮一峰</a></li>\n<li>:book: <a href=\"https://javascriptweblog.wordpress.com/2010/09/27/the-secret-life-of-javascript-primitives/\" target=\"_blank\" rel=\"noopener\">The Secret Life of JavaScript Primitives —— Angus Croll</a></li>\n</ul>\n<h3 id=\"视频-1\"><a href=\"#视频-1\" class=\"headerlink\" title=\"视频\"></a>视频</h3><ul>\n<li>:tv: <a href=\"https://www.imooc.com/video/5674\" target=\"_blank\" rel=\"noopener\">javascript 六种数据类型 —— 慕课网</a></li>\n<li>:tv: <a href=\"http://www.php.cn/code/5808.html\" target=\"_blank\" rel=\"noopener\">javascript 视频教程(数据类型) —— PHP 中文网</a></li>\n<li>:tv: <a href=\"https://www.youtube.com/watch?v=9ooYYRLdg_g\" target=\"_blank\" rel=\"noopener\">JavaScript Reference vs Primitive Types — Academind</a></li>\n<li>:tv: <a href=\"https://www.youtube.com/watch?v=HsbWQsSCE5Y\" target=\"_blank\" rel=\"noopener\">JavaScript Primitive Types — Simon Sez IT</a></li>\n<li>:tv: <a href=\"https://www.youtube.com/watch?v=F7YbhKbpFic\" target=\"_blank\" rel=\"noopener\">Javascript Primitive and Reference Types — Baljeet Singh</a></li>\n<li>:tv: <a href=\"https://www.youtube.com/watch?v=e-_mDyqm2oU\" target=\"_blank\" rel=\"noopener\">Value Types and Reference Types in JavaScript — Programming with Mosh</a></li>\n<li>:tv: <a href=\"https://www.youtube.com/watch?v=qw3j0A3DIzQ\" target=\"_blank\" rel=\"noopener\">JavaScript Primitive Data Types — Avelx</a></li>\n<li>:tv: <a href=\"https://www.youtube.com/watch?v=MqHDDtVYJRI\" target=\"_blank\" rel=\"noopener\">Everything you never wanted to know about JavaScript numbers — Bartek Szopka</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"3-值类型和引用类型\"><a href=\"#3-值类型和引用类型\" class=\"headerlink\" title=\"3. 值类型和引用类型\"></a>3. 值类型和引用类型</h2><h3 id=\"文章-2\"><a href=\"#文章-2\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"http://www.w3school.com.cn/js/pro_js_referencetypes.asp\" target=\"_blank\" rel=\"noopener\">ECMAScript 引用类型 —— W3school</a></li>\n<li>:book: <a href=\"https://www.cnblogs.com/leiting/p/8081413.html\" target=\"_blank\" rel=\"noopener\">js 中的值类型和引用类型的区别 —— 博客园</a></li>\n<li>:book: <a href=\"https://blog.fundebug.com/2017/08/09/explain_value_reference_in_js/\" target=\"_blank\" rel=\"noopener\">JavaScript 的值传递和引用传递 —— FunDebug</a></li>\n<li>:book: <a href=\"https://docstore.mik.ua/orelly/webprog/jscript/ch04_04.htm\" target=\"_blank\" rel=\"noopener\">Primitive Types &amp; Reference Types in JavaScript —— Bran van der Meer</a></li>\n<li>:book: <a href=\"https://blog.csdn.net/xiaojia_boke/article/details/54906509\" target=\"_blank\" rel=\"noopener\">JavaScript: Passing by Value or by Reference —— CSDN</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000015411195\" target=\"_blank\" rel=\"noopener\">js 值引用和值复制 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://blog.csdn.net/zzzaquarius/article/details/4902235\" target=\"_blank\" rel=\"noopener\">js- 引用和复制(传值和传址) —— CSDN</a></li>\n</ul>\n<h3 id=\"视频-2\"><a href=\"#视频-2\" class=\"headerlink\" title=\"视频\"></a>视频</h3><ul>\n<li>:tv: <a href=\"https://www.youtube.com/watch?v=E-dAnFdq8k8\" target=\"_blank\" rel=\"noopener\">Javascript Pass by Value vs Pass by Reference — techsith</a></li>\n<li>:tv: <a href=\"https://www.youtube.com/watch?v=fD0t_DKREbE\" target=\"_blank\" rel=\"noopener\">JavaScript Value vs Reference Types — Programming with Mosh</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"4-隐式-显式-名义和鸭子类型\"><a href=\"#4-隐式-显式-名义和鸭子类型\" class=\"headerlink\" title=\"4. 隐式, 显式, 名义和鸭子类型\"></a>4. 隐式, 显式, 名义和鸭子类型</h2><h3 id=\"文章-3\"><a href=\"#文章-3\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"http://www.w3school.com.cn/js/pro_js_typeconversion.asp\" target=\"_blank\" rel=\"noopener\">ECMAScript 类型转换 —— W3school</a></li>\n<li>:book: <a href=\"http://justjavac.com/javascript/2013/04/08/javascript-quirk-1-implicit-conversion-of-values.html\" target=\"_blank\" rel=\"noopener\">JavaScript 的怪癖 1：隐式类型转换 —— justjavac</a></li>\n<li>:book: <a href=\"https://juejin.im/post/59ad2585f265da246a20e026\" target=\"_blank\" rel=\"noopener\">JavaScript 运算符规则与隐式类型转换详解 —— 掘金</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000004482388\" target=\"_blank\" rel=\"noopener\">聊一聊 JS 中的隐式类型转换 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://www.cnblogs.com/yugege/p/5277883.html\" target=\"_blank\" rel=\"noopener\">有趣的 JavaScript 隐式类型转换 —— 博客园</a></li>\n<li>:book: <a href=\"https://blog.csdn.net/yangjvn/article/details/48284163\" target=\"_blank\" rel=\"noopener\">JavaScript 显式类型转换与隐式类型转换 —— CSDN</a></li>\n<li>:book: <a href=\"https://www.jianshu.com/p/777a89b4ed9a\" target=\"_blank\" rel=\"noopener\">你不知道的 JavaScript（中卷）强制类型转换 —— 简书</a></li>\n<li>:book: <a href=\"https://ithelp.ithome.com.tw/articles/10201512\" target=\"_blank\" rel=\"noopener\">你懂 JavaScript 嗎？#8 強制轉型 —— cythilya</a></li>\n<li>:book: <a href=\"http://book.51cto.com/art/201505/475153.htm\" target=\"_blank\" rel=\"noopener\">动态类型语言和鸭子类型 —— 曾探</a></li>\n<li>:book: <a href=\"https://flow.org/en/docs/lang/nominal-structural/\" target=\"_blank\" rel=\"noopener\">Nominal &amp; Structural Typing —— flow</a></li>\n<li>:book: <a href=\"https://stackoverflow.com/questions/19915688/what-exactly-is-type-coercion-in-javascript\" target=\"_blank\" rel=\"noopener\">What exactly is Type Coercion in Javascript? —— stackoverflow</a></li>\n<li>:book: <a href=\"https://github.com/getify/You-Dont-Know-JS/blob/master/types%20&amp;%20grammar/ch4.md\" target=\"_blank\" rel=\"noopener\">You Don’t Know JS: Types &amp; Grammar —— github</a></li>\n</ul>\n<h3 id=\"视频-3\"><a href=\"#视频-3\" class=\"headerlink\" title=\"视频\"></a>视频</h3><ul>\n<li>:tv: <a href=\"https://www.imooc.com/video/5675\" target=\"_blank\" rel=\"noopener\">javascript 隐式转换 —— 慕课网</a></li>\n<li>:tv: <a href=\"http://www.le.com/ptv/vplay/27767009.html\" target=\"_blank\" rel=\"noopener\">Javascript 基础加强-类型转换 —— 黑马程序员</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<div id=\"5--vs--typeof-vs-instanceof\"></div>\n\n<h2 id=\"5-vs-typeof-vs-instanceof\"><a href=\"#5-vs-typeof-vs-instanceof\" class=\"headerlink\" title=\"5. == vs ===, typeof vs instanceof\"></a>5. == vs ===, typeof vs instanceof</h2><h3 id=\"文章-4\"><a href=\"#文章-4\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Equality_comparisons_and_sameness\" target=\"_blank\" rel=\"noopener\">JavaScript 中的相等性判断 —— MDN</a></li>\n<li>:book: <a href=\"https://juejin.im/entry/584918612f301e005716add6\" target=\"_blank\" rel=\"noopener\">js 中 == 和 === 的区别 —— 掘金</a></li>\n<li>:book: <a href=\"https://blog.csdn.net/w97531/article/details/82255225\" target=\"_blank\" rel=\"noopener\">== vs === in Javascript —— CSDN</a></li>\n<li>:book: <a href=\"https://blog.csdn.net/mevicky/article/details/50353881\" target=\"_blank\" rel=\"noopener\">深入理解 javascript 之 typeof 和 instanceof —— CSDN</a></li>\n<li>:book: <a href=\"http://justjavac.com/javascript/2012/12/23/what-is-javascripts-typeof-operator-used-for.html\" target=\"_blank\" rel=\"noopener\">JavaScript 的 typeof 的用途 —— justjavac</a></li>\n<li>:book: <a href=\"https://juejin.im/post/58358606570c35005e4142bd\" target=\"_blank\" rel=\"noopener\">一张图看懂 Function 和 Object 的关系及简述 instanceof 运算符 —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/post/5b0b9b9051882515773ae714\" target=\"_blank\" rel=\"noopener\">浅谈 instanceof 和 typeof 的实现原理 —— 掘金</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000000730982\" target=\"_blank\" rel=\"noopener\">typeof 和 instanceOf 的区别</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"6-this-call-apply-和-bind\"><a href=\"#6-this-call-apply-和-bind\" class=\"headerlink\" title=\"6. this, call, apply 和 bind\"></a>6. this, call, apply 和 bind</h2><h3 id=\"文章-5\"><a href=\"#文章-5\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"http://www.ruanyifeng.com/blog/2010/04/using_this_keyword_in_javascript.html\" target=\"_blank\" rel=\"noopener\">Javascript 的 this 用法 —— 阮一峰</a></li>\n<li>:book: <a href=\"https://www.jianshu.com/p/6b4333e78bf5\" target=\"_blank\" rel=\"noopener\">学会 JS 的 this 这一篇就够了，根本不用记 —— 简书</a></li>\n<li>:book: <a href=\"https://juejin.im/post/5b9f176b6fb9a05d3827d03f\" target=\"_blank\" rel=\"noopener\">[译] this（他喵的）到底是什么 — 理解 JavaScript 中的 this、call、apply 和 bind —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/post/59bfe84351882531b730bac2\" target=\"_blank\" rel=\"noopener\">this、apply、call、bind —— 掘金</a></li>\n<li>:book: <a href=\"https://www.cnblogs.com/tingyu-blog/p/6212392.html\" target=\"_blank\" rel=\"noopener\">使用 call、apply 和 bind 解决 js 中烦人的 this，事件绑定时的 this 和传参问题 —— 博客园</a></li>\n<li>:book: <a href=\"https://github.com/Abiel1024/blog/issues/16\" target=\"_blank\" rel=\"noopener\">call、apply 和 bind 的原生实现 —— github</a></li>\n</ul>\n<h3 id=\"视频-4\"><a href=\"#视频-4\" class=\"headerlink\" title=\"视频\"></a>视频</h3><ul>\n<li>:tv: <a href=\"https://www.iqiyi.com/w_19rr1augsd.html\" target=\"_blank\" rel=\"noopener\">JavaScript 关于 this 关键字解释 —— 爱奇艺</a></li>\n<li>:tv: <a href=\"http://baidu.iqiyi.com/watch/845335533383874688.html?page=videoMultiNeed\" target=\"_blank\" rel=\"noopener\">JS 关于作用域闭包和 this 的综合面试题 —— 百度视频</a></li>\n<li>:tv: <a href=\"http://www.le.com/ptv/vplay/27478413.html?ch=baidu_s\" target=\"_blank\" rel=\"noopener\">js 面向对象闭包数组 12.函数中的 this —— 乐视视频</a></li>\n<li>:tv: <a href=\"http://www.le.com/ptv/vplay/24835911.html?ch=baidu_s\" target=\"_blank\" rel=\"noopener\">1.3.10-this 指向及 this 应用 —— 乐视视频</a></li>\n<li>:tv: <a href=\"https://study.163.com/course/introduction/590005.htm\" target=\"_blank\" rel=\"noopener\">珠峰培训 JavaScript 开发课程：关于 this 关键字、闭包作用域 —— 网易云课堂</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"7-函数作用域-块级作用域和词法作用域\"><a href=\"#7-函数作用域-块级作用域和词法作用域\" class=\"headerlink\" title=\"7. 函数作用域, 块级作用域和词法作用域\"></a>7. 函数作用域, 块级作用域和词法作用域</h2><h3 id=\"文章-6\"><a href=\"#文章-6\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/0014344993159773a464f34e1724700a6d5dd9e235ceb7c000\" target=\"_blank\" rel=\"noopener\">变量作用域与解构赋值 —— 廖雪峰</a></li>\n<li>:book: <a href=\"http://www.ruanyifeng.com/blog/2009/08/learning_javascript_closures.html\" target=\"_blank\" rel=\"noopener\">学习 Javascript 闭包（Closure） —— 阮一峰</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000006671020\" target=\"_blank\" rel=\"noopener\">JavaScript 中词法作用域、闭包与跳出闭包 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://juejin.im/entry/58e70077b123db15eb88dc7e\" target=\"_blank\" rel=\"noopener\">JavaScript 深入之词法作用域和动态作用域 —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/post/5afb0ae56fb9a07aa2138425\" target=\"_blank\" rel=\"noopener\">深入理解闭包之前置知识 → 作用域与词法作用域 —— 掘金</a></li>\n<li>:book: <a href=\"https://stackoverflow.com/questions/1047454/what-is-lexical-scope\" target=\"_blank\" rel=\"noopener\">What is lexical scope? —— stackoverflow</a></li>\n<li>:book: <a href=\"https://github.com/fishenal/You-Dont-Know-JS/blob/master/scope%20&amp;%20closures/ch2.md\" target=\"_blank\" rel=\"noopener\">You Don’t Know JS: Scope &amp; Closures —— Kyle Simpson</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"8-闭包\"><a href=\"#8-闭包\" class=\"headerlink\" title=\"8. 闭包\"></a>8. 闭包</h2><h3 id=\"文章-7\"><a href=\"#文章-7\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Closures\" target=\"_blank\" rel=\"noopener\">闭包 —— MDN</a></li>\n<li>:book: <a href=\"http://www.w3school.com.cn/js/pro_js_functions_closures.asp\" target=\"_blank\" rel=\"noopener\">ECMAScript 闭包（closure）—— w3school</a></li>\n<li>:book: <a href=\"http://www.ruanyifeng.com/blog/2009/08/learning_javascript_closures.html\" target=\"_blank\" rel=\"noopener\">学习 Javascript 闭包（Closure） —— 阮一峰</a></li>\n<li>:book: <a href=\"https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/00143449934543461c9d5dfeeb848f5b72bd012e1113d15000\" target=\"_blank\" rel=\"noopener\">闭包 —— 廖雪峰</a></li>\n<li>:book: <a href=\"https://www.jianshu.com/p/796e903754f1\" target=\"_blank\" rel=\"noopener\">一次性搞懂 JavaScript 闭包 —— 简书</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000006875662\" target=\"_blank\" rel=\"noopener\">JavaScript 闭包 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://juejin.im/entry/5800eb7da22b9d005b36156e\" target=\"_blank\" rel=\"noopener\">js 匿名自执行函数中闭包的高级使用 —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/entry/59df405251882551bf7e58c6\" target=\"_blank\" rel=\"noopener\">高效使用 JavaScript 闭包 —— 掘金</a></li>\n<li>:book: <a href=\"https://www.cnblogs.com/wangfupeng1988/p/3977924.html\" target=\"_blank\" rel=\"noopener\">深入理解 JavaScript 原型与闭包 —— 王福朋</a></li>\n</ul>\n<h3 id=\"视频-5\"><a href=\"#视频-5\" class=\"headerlink\" title=\"视频\"></a>视频</h3><ul>\n<li>:tv: <a href=\"http://www.iqiyi.com/w_19rr1amael.html\" target=\"_blank\" rel=\"noopener\">JavaScript 闭包和闭包面试题 —— 爱奇艺</a></li>\n<li>:tv: <a href=\"http://www.le.com/ptv/vplay/27478410.html\" target=\"_blank\" rel=\"noopener\">js 面向对象闭包数组 11.闭包 —— 乐视</a></li>\n<li>:tv: <a href=\"http://www.le.com/ptv/vplay/30505852.html\" target=\"_blank\" rel=\"noopener\">白贺翔_函数(闭包) —— 乐视</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"9-map-reduce-filter-等高阶函数\"><a href=\"#9-map-reduce-filter-等高阶函数\" class=\"headerlink\" title=\"9. map, reduce, filter 等高阶函数\"></a>9. map, reduce, filter 等高阶函数</h2><h3 id=\"文章-8\"><a href=\"#文章-8\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/001434499355829ead974e550644e2ebd9fd8bb1b0dd721000\" target=\"_blank\" rel=\"noopener\">高阶函数 —— 廖雪峰</a></li>\n<li>:book: <a href=\"https://www.zhangxinxu.com/wordpress/2013/04/es5%e6%96%b0%e5%a2%9e%e6%95%b0%e7%bb%84%e6%96%b9%e6%b3%95/\" target=\"_blank\" rel=\"noopener\">ES5 中新增的 Array 方法详细说明 —— 张鑫旭</a></li>\n<li>:book: <a href=\"https://juejin.im/post/5835808067f3560065ed4ab2\" target=\"_blank\" rel=\"noopener\">一张图看懂 JavaScript 中数组的迭代方法：forEach、map、filter、reduce、every、some —— 掘金</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000012127329\" target=\"_blank\" rel=\"noopener\">Transducing（上）－《JavaScript 轻量级函数式编程》 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://github.com/BuptStEve/blog/issues/15\" target=\"_blank\" rel=\"noopener\">JavaScript 函数式编程（三） —— @BuptStEve</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"10-表达式和语句\"><a href=\"#10-表达式和语句\" class=\"headerlink\" title=\"10. 表达式和语句\"></a>10. 表达式和语句</h2><h3 id=\"文章-9\"><a href=\"#文章-9\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://www.cnblogs.com/xianshenglu/p/8386918.html\" target=\"_blank\" rel=\"noopener\">js 表达式与语句 —— 博客园</a></li>\n<li>:book: <a href=\"https://segmentfault.com/q/1010000004102804\" target=\"_blank\" rel=\"noopener\">JS 表达式和语句的区别 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://blog.csdn.net/mett_smith/article/details/78761247\" target=\"_blank\" rel=\"noopener\">JavaScript 中的表达式（expression）和语句/声明（statement） —— CSDN</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000004565693\" target=\"_blank\" rel=\"noopener\">重讀 Axel 的 Javascript 中的 Expression vs Statement 一文 —— SegmentFault</a></li>\n<li>:book: <a href=\"http://2ality.com/2012/09/expressions-vs-statements.html\" target=\"_blank\" rel=\"noopener\">Expressions versus statements in JavaScript —— Dr. Axel</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"11-变量提升\"><a href=\"#11-变量提升\" class=\"headerlink\" title=\"11. 变量提升\"></a>11. 变量提升</h2><h3 id=\"文章-10\"><a href=\"#文章-10\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"http://www.runoob.com/js/js-hoisting.html\" target=\"_blank\" rel=\"noopener\">JavaScript 变量提升 —— 菜鸟教程</a></li>\n<li>:book: <a href=\"https://juejin.im/post/59905bea6fb9a03c34192c51\" target=\"_blank\" rel=\"noopener\">ES6 变量作用域与提升：变量的生命周期详解 —— 掘金</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000004345355#articleHeader5\" target=\"_blank\" rel=\"noopener\">[翻译] JavaScript Scoping and Hoisting —— SegmentFault</a></li>\n<li>:book: <a href=\"http://www.adequatelygood.com/JavaScript-Scoping-and-Hoisting.html\" target=\"_blank\" rel=\"noopener\">JavaScript Scoping and Hoisting —— Ben Cherry</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"12-Promise\"><a href=\"#12-Promise\" class=\"headerlink\" title=\"12. Promise\"></a>12. Promise</h2><h3 id=\"文章-11\"><a href=\"#文章-11\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Using_promises\" target=\"_blank\" rel=\"noopener\">使用 promises —— MDN</a></li>\n<li>:book: <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\" target=\"_blank\" rel=\"noopener\">Promise —— MDN</a></li>\n<li>:book: <a href=\"https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/0014345008539155e93fc16046d4bb7854943814c4f9dc2000\" target=\"_blank\" rel=\"noopener\">Promise — 廖雪峰</a></li>\n<li>:book: <a href=\"https://www.cnblogs.com/rubylouvre/p/3495286.html\" target=\"_blank\" rel=\"noopener\">JavaScript Promise：去而复返 —— 司徒正美</a></li>\n<li>:book: <a href=\"https://developers.google.com/web/fundamentals/primers/promises#_1\" target=\"_blank\" rel=\"noopener\">(上面的原文)JavaScript Promise：简介 —— Web Fundamentals</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000011813934\" target=\"_blank\" rel=\"noopener\">1 分钟读完《10 分钟学会 JavaScript 的 Async/Await》 —— justjavac</a></li>\n<li>:book: <a href=\"https://juejin.im/entry/56499ae160b2d1404c4f8834\" target=\"_blank\" rel=\"noopener\">JavaScript Promise 迷你书（中文版）</a></li>\n<li>:book: <a href=\"https://www.cnblogs.com/yunfeifei/p/4453690.html\" target=\"_blank\" rel=\"noopener\">JavaScript 进阶之路——认识和使用 Promise，重构你的 Js 代码 —— 博客园</a></li>\n</ul>\n<h3 id=\"视频-6\"><a href=\"#视频-6\" class=\"headerlink\" title=\"视频\"></a>视频</h3><ul>\n<li>:tv: <a href=\"https://www.imooc.com/learn/949\" target=\"_blank\" rel=\"noopener\">Promise 入门 —— 慕课网</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"13-立即执行函数-模块化-命名空间\"><a href=\"#13-立即执行函数-模块化-命名空间\" class=\"headerlink\" title=\"13. 立即执行函数, 模块化, 命名空间\"></a>13. 立即执行函数, 模块化, 命名空间</h2><h3 id=\"文章-12\"><a href=\"#文章-12\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"http://www.ruanyifeng.com/blog/2012/10/javascript_module.html\" target=\"_blank\" rel=\"noopener\">Javascript 模块化编程（一）：模块的写法 —— 阮一峰</a></li>\n<li>:book: <a href=\"https://www.jianshu.com/p/4dbf4a4c8ebb\" target=\"_blank\" rel=\"noopener\">javascript 模块化编程-详解立即执行函数表达式 —— 简书</a></li>\n<li>:book: <a href=\"https://juejin.im/entry/57fee360a22b9d005b1d9ae3\" target=\"_blank\" rel=\"noopener\">Javascript 的匿名函数与自执行 —— 掘金</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000006966358\" target=\"_blank\" rel=\"noopener\">前端模块化——技术选型 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000015991869#articleHeader8\" target=\"_blank\" rel=\"noopener\">谈谈 Js 前端模块化规范 —— SegmentFault</a></li>\n<li>:book: <a href=\"http://web.jobbole.com/87534/\" target=\"_blank\" rel=\"noopener\">函数声明与函数表达式的区别 —— 伯乐在线</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"14-递归\"><a href=\"#14-递归\" class=\"headerlink\" title=\"14. 递归\"></a>14. 递归</h2><h3 id=\"文章-13\"><a href=\"#文章-13\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://segmentfault.com/q/1010000003942347\" target=\"_blank\" rel=\"noopener\">求解释 js 递归 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://juejin.im/post/5948c0d8fe88c2006a939e2a\" target=\"_blank\" rel=\"noopener\">JavaScript 中的递归 —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/post/59c1d91d6fb9a00a53275f79\" target=\"_blank\" rel=\"noopener\">递归（上）－《JavaScript 轻量级函数式编程》 —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/post/59c87fb46fb9a00a437b1a2e\" target=\"_blank\" rel=\"noopener\">递归（下）－《JavaScript 轻量级函数式编程》 —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/post/5acdd7486fb9a028ca53547c\" target=\"_blank\" rel=\"noopener\">尾调用和尾递归 —— 掘金</a></li>\n<li>:book: <a href=\"https://blog.csdn.net/qianqianstd/article/details/75807462\" target=\"_blank\" rel=\"noopener\">几个经典递归问题用 js 实现 —— CSDN</a></li>\n<li>:book: <a href=\"https://blog.csdn.net/x_i_xw/article/details/72026868\" target=\"_blank\" rel=\"noopener\">递归函数的几个例子 —— CSDN</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"15-算法\"><a href=\"#15-算法\" class=\"headerlink\" title=\"15. 算法\"></a>15. 算法</h2><h3 id=\"文章-14\"><a href=\"#文章-14\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://juejin.im/post/57dcd394a22b9d00610c5ec8\" target=\"_blank\" rel=\"noopener\">十大经典排序算法总结（JavaScript 描述） —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/post/594dfe795188250d725a220a#comment\" target=\"_blank\" rel=\"noopener\">在 JavaScript 中学习数据结构与算法 —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/post/58c9d5fb1b69e6006b686bce\" target=\"_blank\" rel=\"noopener\">JS 中可能用得到的全部的排序算法 —— 掘金</a></li>\n<li>:book: <a href=\"https://www.jianshu.com/p/1b4068ccd505\" target=\"_blank\" rel=\"noopener\">JS 家的排序算法 —— 简书</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000008593715\" target=\"_blank\" rel=\"noopener\">前端常见算法的 JS 实现 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://www.jackpu.com/qian-duan-mian-shi-zhong-de-chang-jian-de-suan-fa-wen-ti/\" target=\"_blank\" rel=\"noopener\">前端面试中的常见的算法问题 ——蒲小花的博客</a></li>\n</ul>\n<h3 id=\"视频-7\"><a href=\"#视频-7\" class=\"headerlink\" title=\"视频\"></a>视频</h3><ul>\n<li>:tv: <a href=\"https://www.imooc.com/learn/888\" target=\"_blank\" rel=\"noopener\">Javascript 实现二叉树算法 —— 慕课网</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"16-数据结构\"><a href=\"#16-数据结构\" class=\"headerlink\" title=\"16. 数据结构\"></a>16. 数据结构</h2><h3 id=\"文章-15\"><a href=\"#文章-15\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://www.jianshu.com/p/5e0e8d183102\" target=\"_blank\" rel=\"noopener\">来我们浅谈一下 js 的数据结构 —— 简书</a></li>\n<li>:book: <a href=\"https://www.jianshu.com/nb/16835496\" target=\"_blank\" rel=\"noopener\">JavaScript 中的算法与数据结构 —— 简书</a></li>\n<li>:book: <a href=\"http://blog.sina.com.cn/s/blog_7b9c5e4101017mjt.html\" target=\"_blank\" rel=\"noopener\">学 JS 必看-JavaScript 数据结构深度剖析 —— 大道至简的博客</a></li>\n<li>:book: <a href=\"https://juejin.im/entry/586effe0da2f600053d85a9a\" target=\"_blank\" rel=\"noopener\">js 中基础数据结构数组去重问题 —— 掘金</a></li>\n</ul>\n<h3 id=\"视频-8\"><a href=\"#视频-8\" class=\"headerlink\" title=\"视频\"></a>视频</h3><ul>\n<li>:tv: :tv: <a href=\"http://www.le.com/ptv/vplay/27606964.html\" target=\"_blank\" rel=\"noopener\">JavaScript 数据结构-运算符 —— 乐视</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"17-消息队列和事件循环\"><a href=\"#17-消息队列和事件循环\" class=\"headerlink\" title=\"17. 消息队列和事件循环\"></a>17. 消息队列和事件循环</h2><h3 id=\"文章-16\"><a href=\"#文章-16\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/EventLoop\" target=\"_blank\" rel=\"noopener\">并发模型与事件循环 —— MDN</a></li>\n<li>:book: <a href=\"http://www.ruanyifeng.com/blog/2014/10/event-loop.html\" target=\"_blank\" rel=\"noopener\">JavaScript 运行机制详解：再谈 Event Loop —— 阮一峰</a></li>\n<li>:book: <a href=\"https://www.cnblogs.com/dong-xu/p/7000163.html\" target=\"_blank\" rel=\"noopener\">深入理解 JavaScript 事件循环 —— 博客园</a></li>\n<li>:book: <a href=\"https://zhuanlan.zhihu.com/p/26229293\" target=\"_blank\" rel=\"noopener\">深入浅出 Javascript 事件循环机制 —— 知乎</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000014940904#articleHeader7\" target=\"_blank\" rel=\"noopener\">JS 事件循环机制（event loop）之宏任务、微任务 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000004322358\" target=\"_blank\" rel=\"noopener\">JavaScript：彻底理解同步、异步和事件循环 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://juejin.im/post/5a6547d0f265da3e283a1df7\" target=\"_blank\" rel=\"noopener\">从浏览器多进程到 JS 单线程，JS 运行机制最全面的一次梳理 —— 掘金</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"18-setTimeout-setInterval-和-requestAnimationFrame\"><a href=\"#18-setTimeout-setInterval-和-requestAnimationFrame\" class=\"headerlink\" title=\"18. setTimeout, setInterval 和 requestAnimationFrame\"></a>18. setTimeout, setInterval 和 requestAnimationFrame</h2><h3 id=\"文章-17\"><a href=\"#文章-17\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"http://www.runoob.com/jsref/met-win-settimeout.html\" target=\"_blank\" rel=\"noopener\">Window setTimeout() 方法 —— 菜鸟教程</a></li>\n<li>:book: <a href=\"http://www.runoob.com/jsref/met-win-setinterval.html\" target=\"_blank\" rel=\"noopener\">Window setInterval() 方法 —— 菜鸟教程</a></li>\n<li>:book: <a href=\"https://juejin.im/post/5aa4c47af265da239866e236\" target=\"_blank\" rel=\"noopener\">关于 setTimeout —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/post/5a77f8ce5188257a6d635d76\" target=\"_blank\" rel=\"noopener\">你不知道的 Javascript：有趣的 setTimeout —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/entry/5861ebf01b69e6006ce61d38\" target=\"_blank\" rel=\"noopener\">原来你是这样的 setTimeout —— 掘金</a></li>\n<li>:book: <a href=\"https://segmentfault.com/q/1010000005989491\" target=\"_blank\" rel=\"noopener\">setTimeout() 和 setInterval() 本质区别在哪里？ —— SegmentFault</a></li>\n<li>book: <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/requestAnimationFrame\" target=\"_blank\" rel=\"noopener\">window.requestAnimationFrame —— MDN</a></li>\n<li>:book: <a href=\"http://www.cnblogs.com/onepixel/p/7078617.html\" target=\"_blank\" rel=\"noopener\">requestAnimationFrame 知多少？ —— 博客园</a></li>\n<li>:book: <a href=\"https://www.zhangxinxu.com/wordpress/2013/09/css3-animation-requestanimationframe-tween-%e5%8a%a8%e7%94%bb%e7%ae%97%e6%b3%95/\" target=\"_blank\" rel=\"noopener\">CSS3 动画那么强，requestAnimationFrame 还有毛线用？ —— 张鑫旭</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000014661035\" target=\"_blank\" rel=\"noopener\">「JavaScript 定时器」setInterval、setTimeout 和 requestAnimationFrame 浅析 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000000386368\" target=\"_blank\" rel=\"noopener\">翻译：setInterval 与 requestAnimationFrame 的时间间隔测试 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://segmentfault.com/q/1010000013909430\" target=\"_blank\" rel=\"noopener\">阿里前端面试题：requestAnimationFrame 实现类似 setInterval 的计时器 —— SegmentFault</a></li>\n</ul>\n<h3 id=\"视频-9\"><a href=\"#视频-9\" class=\"headerlink\" title=\"视频\"></a>视频</h3><ul>\n<li>:tv: <a href=\"http://v.youku.com/v_show/id_XNTA4OTQ0NzA0.html\" target=\"_blank\" rel=\"noopener\">setTimeout 和 setInterval —— 优酷</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"19-继承-多态和代码复用\"><a href=\"#19-继承-多态和代码复用\" class=\"headerlink\" title=\"19. 继承, 多态和代码复用\"></a>19. 继承, 多态和代码复用</h2><h3 id=\"文章-18\"><a href=\"#文章-18\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://www.cnblogs.com/Leo_wl/p/5734794.html\" target=\"_blank\" rel=\"noopener\">JS 面向对象编程之：封装、继承、多态 —— 博客园</a></li>\n<li>:book: <a href=\"https://www.jianshu.com/p/5cb692658704\" target=\"_blank\" rel=\"noopener\">Javascript 的继承与多态 —— 简书</a></li>\n<li>:book: <a href=\"https://juejin.im/post/59396c96fe88c2006afc2707\" target=\"_blank\" rel=\"noopener\">js:面向对象编程，带你认识封装、继承和多态 —— 掘金</a></li>\n<li>:book: <a href=\"https://zhuanlan.zhihu.com/p/34693209\" target=\"_blank\" rel=\"noopener\">JavaScript 中的“多继承” —— 掘金</a></li>\n<li>:book: <a href=\"https://github.com/TooBug/javascript.patterns/blob/master/chapter6.markdown\" target=\"_blank\" rel=\"noopener\">代码复用模式 —— github</a></li>\n<li>:book: <a href=\"http://www.cnblogs.com/TomXu/archive/2012/04/24/2438050.html\" target=\"_blank\" rel=\"noopener\">深入理解 JavaScript：代码复用模式(推荐篇) —— 汤姆大叔</a></li>\n<li>:book: <a href=\"https://www.cnblogs.com/TomXu/archive/2012/04/23/2438005.html\" target=\"_blank\" rel=\"noopener\">深入理解 JavaScript：代码复用模式(避免篇) —— 汤姆大叔</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"20-按位操作符-类数组对象和类型化数组\"><a href=\"#20-按位操作符-类数组对象和类型化数组\" class=\"headerlink\" title=\"20. 按位操作符, 类数组对象和类型化数组\"></a>20. 按位操作符, 类数组对象和类型化数组</h2><h3 id=\"文章-19\"><a href=\"#文章-19\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators\" target=\"_blank\" rel=\"noopener\">按位操作符 —— MDN</a></li>\n<li>:book: <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Typed_arrays\" target=\"_blank\" rel=\"noopener\">类数组对象 —— MDN</a></li>\n<li>:book: <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\" target=\"_blank\" rel=\"noopener\">类型化数组 —— MDN</a></li>\n<li>:book: <a href=\"https://www.cnblogs.com/gradolabs/p/4762134.html\" target=\"_blank\" rel=\"noopener\">JavaScript ArrayBuffer 浅析 —— 博客园</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"21-DOM-树和渲染过程\"><a href=\"#21-DOM-树和渲染过程\" class=\"headerlink\" title=\"21. DOM 树和渲染过程\"></a>21. DOM 树和渲染过程</h2><h3 id=\"文章-20\"><a href=\"#文章-20\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Document_Object_Model/How_to_create_a_DOM_tree\" target=\"_blank\" rel=\"noopener\">如何创建一个 DOM 树 —— MDN</a></li>\n<li>:book: <a href=\"http://www.w3school.com.cn/htmldom/dom_nodes.asp\" target=\"_blank\" rel=\"noopener\">HTML DOM 节点 —— W3school</a></li>\n<li>:book: <a href=\"http://javascript.ruanyifeng.com/dom/node.html\" target=\"_blank\" rel=\"noopener\">DOM 概述 —— 阮一峰</a></li>\n<li>:book: <a href=\"https://juejin.im/post/583cbbfa61ff4b006ccc41fe\" target=\"_blank\" rel=\"noopener\">《JavaScript 闯关记》之 DOM（上）—— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/post/583cbc4961ff4b006ccc44fb\" target=\"_blank\" rel=\"noopener\">《JavaScript 闯关记》之 DOM（下）—— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/entry/58314efd8ac2470061bb30fd\" target=\"_blank\" rel=\"noopener\">掌握 DOM 操作 —— 掘金</a></li>\n<li>:book: <a href=\"https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/001434500494451273e6b3dec9d411d9ba841dee8caec45000\" target=\"_blank\" rel=\"noopener\">操作 DOM —— 廖雪峰</a></li>\n<li>:book: <a href=\"https://juejin.im/post/59c60691518825396f4f71a1\" target=\"_blank\" rel=\"noopener\">原来 CSS 与 JS 是这样阻塞 DOM 解析和渲染的 —— 掘金</a></li>\n</ul>\n<h3 id=\"视频-10\"><a href=\"#视频-10\" class=\"headerlink\" title=\"视频\"></a>视频</h3><ul>\n<li>:tv: <a href=\"https://www.imooc.com/learn/488\" target=\"_blank\" rel=\"noopener\">DOM 探索之基础详解篇 —— 慕课网</a></li>\n<li>:tv: <a href=\"https://www.imooc.com/learn/138\" target=\"_blank\" rel=\"noopener\">DOM 事件探秘 —— 慕课网</a></li>\n<li>:tv: <a href=\"https://www.imooc.com/learn/530\" target=\"_blank\" rel=\"noopener\">jQuery 基础(二)DOM 篇 —— 慕课网</a></li>\n<li>:tv: <a href=\"http://www.iqiyi.com/w_19rr19s08l.html\" target=\"_blank\" rel=\"noopener\">JS 操作 DOM 对象属性和方法 —— 爱奇艺</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"22-new-与构造函数-instanceof-与实例\"><a href=\"#22-new-与构造函数-instanceof-与实例\" class=\"headerlink\" title=\"22. new 与构造函数, instanceof 与实例\"></a>22. new 与构造函数, instanceof 与实例</h2><h3 id=\"文章-21\"><a href=\"#文章-21\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"http://javascript.ruanyifeng.com/oop/basic.html\" target=\"_blank\" rel=\"noopener\">构造函数与 new 命令 —— 阮一峰</a></li>\n<li>:book: <a href=\"http://www.ruanyifeng.com/blog/2010/05/object-oriented_javascript_inheritance.html\" target=\"_blank\" rel=\"noopener\">Javascript 面向对象编程（二）：构造函数的继承 —— 阮一峰</a></li>\n<li>:book: <a href=\"https://blog.csdn.net/SpicyBoiledFish/article/details/71123162\" target=\"_blank\" rel=\"noopener\">完整原型链详细图解(构造函数、原型、实例化对象) —— CSDN</a></li>\n<li>:book: <a href=\"http://www.php.cn/js-tutorial-376246.html\" target=\"_blank\" rel=\"noopener\">JavaScript 中构造函数与 new 操作符的实例详解 —— PHP 中文网</a></li>\n<li>:book: <a href=\"https://blog.csdn.net/yin_991/article/details/80954453\" target=\"_blank\" rel=\"noopener\">构造函数、实例、原型、原型链之间的关系 —— CSDN</a></li>\n<li>:book: <a href=\"https://blog.csdn.net/cecilia620/article/details/71158048\" target=\"_blank\" rel=\"noopener\">深入理解 JS—instanceof 和原型链 —— CSDN</a></li>\n<li>:book: <a href=\"https://www.jianshu.com/p/15ac7393bc1f\" target=\"_blank\" rel=\"noopener\">前端基础进阶（九）：详解面向对象、构造函数、原型与原型链 —— 简书</a></li>\n<li>:book: <a href=\"https://www.jianshu.com/p/60ffc4831bff\" target=\"_blank\" rel=\"noopener\">js 用 new 实例化对象与直接调用的 this 的区别 —— 简书</a></li>\n<li>:book: <a href=\"http://justjavac.com/javascript/2012/12/22/javascript-values-not-everything-is-an-object.html\" target=\"_blank\" rel=\"noopener\">JavaScript 并非所有的东西都是对象 —— justjavac</a></li>\n<li>:book: <a href=\"https://www.ibm.com/developerworks/cn/web/1306_jiangjj_jsinstanceof/\" target=\"_blank\" rel=\"noopener\">JavaScript instanceof 运算符深入剖析 —— IBM</a></li>\n</ul>\n<h3 id=\"视频-11\"><a href=\"#视频-11\" class=\"headerlink\" title=\"视频\"></a>视频</h3><ul>\n<li>:tv: <a href=\"http://www.le.com/ptv/vplay/27766889.html\" target=\"_blank\" rel=\"noopener\">改良版的构造函数 —— 乐视</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"23-原型继承与原型链\"><a href=\"#23-原型继承与原型链\" class=\"headerlink\" title=\"23. 原型继承与原型链\"></a>23. 原型继承与原型链</h2><h3 id=\"文章-22\"><a href=\"#文章-22\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Inheritance_and_the_prototype_chain\" target=\"_blank\" rel=\"noopener\">继承与原型链 —— MDN</a></li>\n<li>:book: <a href=\"https://github.com/bigdots/blog/issues/1\" target=\"_blank\" rel=\"noopener\">构造函数、原型与原型链 —— github</a></li>\n<li>:book: <a href=\"https://github.com/stone0090/javascript-lessons/tree/master/2.5-Prototype\" target=\"_blank\" rel=\"noopener\">原型及原型链 —— github(1269 Star)</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000004282206\" target=\"_blank\" rel=\"noopener\">理清 javascript 中的面向对象(一) 原型继承 —— SegmentFault</a></li>\n<li>:book: <a href=\"http://justjavac.com/2015/12/09/inheritance-and-the-prototype-chain.html\" target=\"_blank\" rel=\"noopener\">JavaScript：继承和原型链(译) —— justjavac</a></li>\n<li>:book: <a href=\"http://www.cnblogs.com/shuiyi/p/5305435.html\" target=\"_blank\" rel=\"noopener\">三张图搞懂 JavaScript 的原型对象与原型链 —— 博客园</a></li>\n<li>:book: <a href=\"https://blog.csdn.net/the__apollo/article/details/76774698\" target=\"_blank\" rel=\"noopener\">一张图让你搞懂 JavaScript 的继承与原型链 —— CSDN</a></li>\n<li>:book: <a href=\"https://blog.csdn.net/xiaotao_css/article/details/72782416\" target=\"_blank\" rel=\"noopener\">JS 高级–原型链(一看就懂，但 18 岁以下请绕道) —— CSDN</a></li>\n<li>:book: <a href=\"https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/0014344997013405abfb7f0e1904a04ba6898a384b1e925000\" target=\"_blank\" rel=\"noopener\">原型继承 —— 廖雪峰</a></li>\n<li>:book: <a href=\"https://juejin.im/post/58f94c9bb123db411953691b\" target=\"_blank\" rel=\"noopener\">JS 原型链与继承别再被问倒了 —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/entry/5885db221b69e600592253e7\" target=\"_blank\" rel=\"noopener\">征服 JavaScript 面试系列：类继承和原型继承的区别 —— 掘金</a></li>\n<li>:book: <a href=\"https://github.com/mqyqingfeng/Blog/issues/2\" target=\"_blank\" rel=\"noopener\">JavaScript 深入之从原型到原型链 —— 冴羽</a></li>\n<li>:book: <a href=\"https://www.cnblogs.com/wangfupeng1988/p/3977924.html\" target=\"_blank\" rel=\"noopener\">深入理解 JavaScript 原型与闭包 —— 王福朋</a></li>\n</ul>\n<h3 id=\"视频-12\"><a href=\"#视频-12\" class=\"headerlink\" title=\"视频\"></a>视频</h3><ul>\n<li>:tv: <a href=\"http://www.le.com/ptv/vplay/27552753.html\" target=\"_blank\" rel=\"noopener\">JS 高级-07-原型链继承 —— 乐视</a></li>\n<li>:tv: <a href=\"https://v.qq.com/x/page/b0511nwa7d3.html\" target=\"_blank\" rel=\"noopener\">JS 原型对象和原型链简介 —— 腾讯视频</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"24-Object-create-和-Object-assign\"><a href=\"#24-Object-create-和-Object-assign\" class=\"headerlink\" title=\"24. Object.create 和 Object.assign\"></a>24. Object.create 和 Object.assign</h2><h3 id=\"文章-23\"><a href=\"#文章-23\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/create\" target=\"_blank\" rel=\"noopener\">Object.create —— MDN</a></li>\n<li>:book: <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\" target=\"_blank\" rel=\"noopener\">Object.assign —— MDN</a></li>\n<li>:book: <a href=\"https://www.imooc.com/article/17591\" target=\"_blank\" rel=\"noopener\">Object.create vs Object.assign —— 慕课网手记</a></li>\n<li>:book: <a href=\"https://blog.csdn.net/DeepLies/article/details/52915143\" target=\"_blank\" rel=\"noopener\">JS 中的 Object.assign()、Object.create()、Object.defineProperty() —— CSDN</a></li>\n<li>:book: <a href=\"http://www.onlyfordream.cn/2018/03/19/es6%E4%B8%ADobject-create%E5%92%8Cobject-assign/\" target=\"_blank\" rel=\"noopener\">es6 中 object.create()和 object.assign() —— 风信子博客</a></li>\n<li>:book: <a href=\"https://github.com/saikojosh/Object-Assign-Deep\" target=\"_blank\" rel=\"noopener\">Object-Assign-Deep —— github</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"25-工厂函数和类\"><a href=\"#25-工厂函数和类\" class=\"headerlink\" title=\"25. 工厂函数和类\"></a>25. 工厂函数和类</h2><h3 id=\"文章-24\"><a href=\"#文章-24\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Classes\" target=\"_blank\" rel=\"noopener\">类 —— MDN</a></li>\n<li>:book: <a href=\"https://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/00138682004077376d2d7f8cc8a4e2c9982f92788588322000\" target=\"_blank\" rel=\"noopener\">类和实例 —— 廖雪峰</a></li>\n<li>:book: <a href=\"http://www.ruanyifeng.com/blog/2012/07/three_ways_to_define_a_javascript_class.html\" target=\"_blank\" rel=\"noopener\">Javascript 定义类（class）的三种方法 —— 阮一峰</a></li>\n<li>:book: <a href=\"https://juejin.im/post/59c8c8756fb9a00a681ae5bd\" target=\"_blank\" rel=\"noopener\">【译】ES6 的工厂函数 —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/entry/587992c961ff4b0065edf1ff\" target=\"_blank\" rel=\"noopener\">JavaScript 创建对象之单例、工厂、构造函数模式 —— 掘金</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"26-设计模式\"><a href=\"#26-设计模式\" class=\"headerlink\" title=\"26. 设计模式\"></a>26. 设计模式</h2><h3 id=\"文章-25\"><a href=\"#文章-25\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://juejin.im/post/59df4f74f265da430f311909\" target=\"_blank\" rel=\"noopener\">JavaScript 设计模式 —— 掘金</a></li>\n<li>:book: <a href=\"http://wiki.jikexueyuan.com/project/javascript-design-patterns/\" target=\"_blank\" rel=\"noopener\">学用 JavaScript 设计模式 —— 极客学院</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000010914032\" target=\"_blank\" rel=\"noopener\">[面试专题]JS 设计模式 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://github.com/lxj/javascript.patterns\" target=\"_blank\" rel=\"noopener\">JavaScript Patterns 中译本 —— github</a></li>\n</ul>\n<h3 id=\"视频-13\"><a href=\"#视频-13\" class=\"headerlink\" title=\"视频\"></a>视频</h3><ul>\n<li>:tv: <a href=\"https://tv.sohu.com/v/dXMvMjQwNzYwNzQ4Lzg5NzM2MDA3LnNodG1s.html\" target=\"_blank\" rel=\"noopener\">HTML5 课程大纲 2-11JS 设计模式</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"27-Memoization\"><a href=\"#27-Memoization\" class=\"headerlink\" title=\"27. Memoization\"></a>27. Memoization</h2><h3 id=\"文章-26\"><a href=\"#文章-26\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://www.cnblogs.com/rubylouvre/archive/2009/08/06/1540678.html\" target=\"_blank\" rel=\"noopener\">JavaScript Memoization —— 司徒正美</a></li>\n<li>:book: <a href=\"https://www.cnblogs.com/yingshuizy/p/4517102.html\" target=\"_blank\" rel=\"noopener\">memoization 提升递归效率 —— 博客园</a></li>\n<li>:book: <a href=\"http://developer.51cto.com/art/201010/231513.htm\" target=\"_blank\" rel=\"noopener\">如何提升 JavaScript 的递归效率 —— 51CTO</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000016703106\" target=\"_blank\" rel=\"noopener\">JavaScript 高级技巧 Memoization —— SegmentFaut</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"28-纯函数-函数副作用和状态变化\"><a href=\"#28-纯函数-函数副作用和状态变化\" class=\"headerlink\" title=\"28. 纯函数, 函数副作用和状态变化\"></a>28. 纯函数, 函数副作用和状态变化</h2><h3 id=\"文章-27\"><a href=\"#文章-27\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"http://huziketang.mangojuice.top/books/react/lesson32\" target=\"_blank\" rel=\"noopener\">纯函数(Pure Function) —— React.js 小书</a></li>\n<li>:book: <a href=\"https://ninghao.net/blog/4634\" target=\"_blank\" rel=\"noopener\">JavaScript Functional Programming：纯函数 —— 宁皓网</a></li>\n<li>:book: <a href=\"https://www.jb51.net/article/28079.htm\" target=\"_blank\" rel=\"noopener\">js 函数的副作用分析 —— 脚本之家</a></li>\n<li>:book: <a href=\"https://juejin.im/post/5b82bdb351882542e241ed32?utm_medium=hao.caibaojian.com&amp;utm_source=hao.caibaojian.com\" target=\"_blank\" rel=\"noopener\">如何使用纯函数式 JavaScript 处理脏副作用 —— 掘金</a></li>\n<li>:book: <a href=\"http://www.cnblogs.com/zhangycun/p/9403335.html\" target=\"_blank\" rel=\"noopener\">原生 JavaScript 实现 state 状态管理系统 —— 博客园</a></li>\n<li>:book: <a href=\"https://github.com/BuptStEve/blog/issues/10\" target=\"_blank\" rel=\"noopener\">JavaScript 函数式编程 —— @BuptStEve</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"29-耗性能操作和时间复杂度\"><a href=\"#29-耗性能操作和时间复杂度\" class=\"headerlink\" title=\"29. 耗性能操作和时间复杂度\"></a>29. 耗性能操作和时间复杂度</h2><h3 id=\"文章-28\"><a href=\"#文章-28\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://juejin.im/entry/593f56528d6d810058a355f4\" target=\"_blank\" rel=\"noopener\">时间复杂度 O(log n) 意味着什么？ —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/entry/5a49f7d36fb9a0450a67b269\" target=\"_blank\" rel=\"noopener\">算法的时间复杂度和空间复杂度 —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/post/58d15f1044d90400691834d4\" target=\"_blank\" rel=\"noopener\">算法（一）时间复杂度 —— 掘金</a></li>\n<li>:book: <a href=\"http://www.bradoncode.com/blog/2012/04/big-o-algorithm-examples-in-javascript.html\" target=\"_blank\" rel=\"noopener\">Big O Search Algorithms in JavaScript —— Bradley Braithwaite</a></li>\n<li>:book: <a href=\"https://www.jenniferbland.com/time-complexity-analysis-in-javascript/\" target=\"_blank\" rel=\"noopener\">Time Complexity Analysis in JavaScript — Jennifer Bland</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"30-JavaScript-引擎\"><a href=\"#30-JavaScript-引擎\" class=\"headerlink\" title=\"30. JavaScript 引擎\"></a>30. JavaScript 引擎</h2><h3 id=\"文章-29\"><a href=\"#文章-29\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://baike.baidu.com/item/javascript引擎/5356108\" target=\"_blank\" rel=\"noopener\">javascript 引擎 —— 百度百科</a></li>\n<li>:book: <a href=\"https://baike.baidu.com/item/V8/6178125\" target=\"_blank\" rel=\"noopener\">V8(JavaScript 引擎) —— 百度百科</a></li>\n<li>:book: <a href=\"https://juejin.im/post/5a6309f76fb9a01cab2858b1\" target=\"_blank\" rel=\"noopener\">图解搞懂 JavaScript 引擎 Event Loop —— 掘金</a>3</li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000010819020\" target=\"_blank\" rel=\"noopener\">V8 JavaScript 引擎：高性能的 ES2015+ —— justjavac</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000012806637\" target=\"_blank\" rel=\"noopener\">10 分钟理解 JS 引擎的执行机制 —— SegmentFaut</a></li>\n<li>:book: <a href=\"https://www.cnblogs.com/weirdoQi/p/6609811.html\" target=\"_blank\" rel=\"noopener\">V8 javascript 引擎 —— 博客园</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"31-二进制-十六进制-十进制-科学记数法\"><a href=\"#31-二进制-十六进制-十进制-科学记数法\" class=\"headerlink\" title=\"31. 二进制, 十六进制, 十进制, 科学记数法\"></a>31. 二进制, 十六进制, 十进制, 科学记数法</h2><h3 id=\"文章-30\"><a href=\"#文章-30\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"http://www.cnblogs.com/gaizai/p/4233780.html\" target=\"_blank\" rel=\"noopener\">二、八、十、十六进制转换(图解篇) —— 博客园</a></li>\n<li>:book: <a href=\"https://juejin.im/post/5b93dadaf265da0a857a58a3\" target=\"_blank\" rel=\"noopener\">JavaScript 读写二进制数据 —— 掘金</a></li>\n</ul>\n<h3 id=\"视频-14\"><a href=\"#视频-14\" class=\"headerlink\" title=\"视频\"></a>视频</h3><ul>\n<li>:tv: <a href=\"http://baishi.baidu.com/watch/7873060963471478456.html\" target=\"_blank\" rel=\"noopener\">二进制、十进制、十六进制互相转化很难吗？ —— 百度视频</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"32-偏函数-柯里化-Compose-和-Pipe\"><a href=\"#32-偏函数-柯里化-Compose-和-Pipe\" class=\"headerlink\" title=\"32. 偏函数, 柯里化, Compose 和 Pipe\"></a>32. 偏函数, 柯里化, Compose 和 Pipe</h2><h3 id=\"文章-31\"><a href=\"#文章-31\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://blog.csdn.net/qq_42129063/article/details/81874314\" target=\"_blank\" rel=\"noopener\">Javascript 函数式编程之偏函数 —— CSDN</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000010686144\" target=\"_blank\" rel=\"noopener\">JavaScript 专题之偏函数 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://segmentfault.com/q/1010000008626058\" target=\"_blank\" rel=\"noopener\">柯里化和偏函数有什么区别？ —— SegmentFault</a></li>\n<li>:book: <a href=\"https://blog.csdn.net/neweastsun/article/details/75947785\" target=\"_blank\" rel=\"noopener\">Javascript 偏函数与柯里化 —— CSDN</a></li>\n<li>:book: <a href=\"https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch4.html\" target=\"_blank\" rel=\"noopener\">柯里化(curry) —— JS 函数式编程指南</a></li>\n<li>:book: <a href=\"https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch5.html\" target=\"_blank\" rel=\"noopener\">代码组合(compose) —— JS 函数式编程指南</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000008394749\" target=\"_blank\" rel=\"noopener\">关于 javascript 函数式编程中 compose 的实现 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000011447164\" target=\"_blank\" rel=\"noopener\">实现 compose 的五种思路 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://segmentfault.com/a/1190000015102804\" target=\"_blank\" rel=\"noopener\">JavaScript 函数式编程之函数组合函数 compose 和 pipe 的实现 —— SegmentFault</a></li>\n<li>:book: <a href=\"https://juejin.im/post/59a62f3d6fb9a0248363fd9d#comment\" target=\"_blank\" rel=\"noopener\">JavaScript 轻量级函数式编程-第 4 章:组合函数 ——掘金</a></li>\n<li>:book: <a href=\"https://github.com/BuptStEve/blog/issues/11\" target=\"_blank\" rel=\"noopener\">JavaScript 函数式编程（二） —— @BuptStEve</a></li>\n</ul>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n<h2 id=\"33-代码整洁之道\"><a href=\"#33-代码整洁之道\" class=\"headerlink\" title=\"33. 代码整洁之道\"></a>33. 代码整洁之道</h2><h3 id=\"文章-32\"><a href=\"#文章-32\" class=\"headerlink\" title=\"文章\"></a>文章</h3><ul>\n<li>:book: <a href=\"https://www.zcfy.cc/article/clean-code-javascript-readme-md-at-master-ryanmcdermott-clean-code-javascript-github-2273.html\" target=\"_blank\" rel=\"noopener\">[译] JavaScript 代码整洁之道 —— 边城</a></li>\n<li>:book: <a href=\"http://www.ruanyifeng.com/blog/2012/04/javascript_programming_style.html\" target=\"_blank\" rel=\"noopener\">Javascript 编程风格 —— 阮一峰</a></li>\n<li>:book: <a href=\"https://juejin.im/post/5a5b2a5c6fb9a01cbc6e59f9\" target=\"_blank\" rel=\"noopener\">重构 - 代码整洁之道 —— 掘金</a></li>\n<li>:book: <a href=\"https://juejin.im/post/5a7d71836fb9a063435ecf51\" target=\"_blank\" rel=\"noopener\">让你的代码更简短，更整洁，更易读的 ES6 小技巧 —— 掘金</a></li>\n<li>:book: <a href=\"http://blog.jobbole.com/23617/\" target=\"_blank\" rel=\"noopener\">Web 前端：11 个让你代码整洁的原则 —— 伯乐在线</a></li>\n<li>:book: <a href=\"https://github.com/ryanmcdermott/clean-code-javascript\" target=\"_blank\" rel=\"noopener\">Clean Code concepts adapted for JavaScript —— ryanmcdermott</a></li>\n</ul>\n<p><br></p>\n<p><strong><a href=\"#目录\">:arrow_up: 返回目录</a></strong></p>\n<hr>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjxtyumpy0000hbghfad4j8en","category_id":"cjxtyumq60004hbghgwlnppgy","_id":"cjxtyumqh000hhbghfvbbz2br"},{"post_id":"cjxtyumq30002hbgh0zj7dchg","category_id":"cjxtyumqc000bhbghfqmwj331","_id":"cjxtyumql000nhbghcl3mfhct"},{"post_id":"cjxtyumq70006hbgh6ol2bpg6","category_id":"cjxtyumqh000ihbghqzx5djvk","_id":"cjxtyumqt000shbgho0619t4v"},{"post_id":"cjxtyumqc000ahbgh7f4zkx2x","category_id":"cjxtyumql000ohbghryioint9","_id":"cjxtyumqx0012hbghzlsgkj0z"},{"post_id":"cjxtyumqg000ghbgh45him9j0","category_id":"cjxtyumqh000ihbghqzx5djvk","_id":"cjxtyumqy001ahbghuz8zjqh8"},{"post_id":"cjxtyumqi000khbghzom0ywgd","category_id":"cjxtyumqy0015hbgh3s2lipxh","_id":"cjxtyumqz001dhbghqdxgzeu0"},{"post_id":"cjxtyumql000qhbghrp89vd3f","category_id":"cjxtyumqz001ehbghgxp9mtd1","_id":"cjxtyumqz001khbghb1n8lt80"},{"post_id":"cjxtyumqs000rhbghujvt4e2d","category_id":"cjxtyumqz001ihbghi9gvdef4","_id":"cjxtyumr1001qhbghacsvyky0"},{"post_id":"cjxtyumqt000vhbgh93mzupk4","category_id":"cjxtyumqy0015hbgh3s2lipxh","_id":"cjxtyumr1001shbghwe6vqt0j"},{"post_id":"cjxtyumqk000mhbghp3btkh2u","category_id":"cjxtyumqy001bhbghdjg1ujpo","_id":"cjxtyumr1001whbghwqz83blg"},{"post_id":"cjxtyumqk000mhbghp3btkh2u","category_id":"cjxtyumr0001phbgh86ehbwy4","_id":"cjxtyumr1001yhbghoc6otwg9"},{"post_id":"cjxx6lm4w0000s5ghoo619vne","category_id":"cjxtyumql000ohbghryioint9","_id":"cjxx6lm540004s5gh4ajim90d"},{"post_id":"cjxx6lm500001s5ghh59fom2e","category_id":"cjxtyumqw000yhbgh70eew4mz","_id":"cjxx6lm550006s5ghyy8yefxi"},{"post_id":"cjxxjgbk80000akghjb0sst7h","category_id":"cjxxjgbkg0001akghpb5heusb","_id":"cjxxjgbkj0004akgh02ccjf1j"},{"post_id":"cjxxjgc5c0005akghllrnhaoe","category_id":"cjxtyumqw000yhbgh70eew4mz","_id":"cjxxjgc5d0007akghxu8z4e60"}],"PostTag":[{"post_id":"cjxtyumpy0000hbghfad4j8en","tag_id":"cjxtyumq70005hbghn4lsrjq5","_id":"cjxtyumqe000ehbghvsdshkod"},{"post_id":"cjxtyumq30002hbgh0zj7dchg","tag_id":"cjxtyumqc000chbgh0jn0ae9h","_id":"cjxtyumqj000lhbghqsvvdi8v"},{"post_id":"cjxtyumq70006hbgh6ol2bpg6","tag_id":"cjxtyumqh000jhbghqxc0xf9t","_id":"cjxtyumqv000whbghjpwtndkz"},{"post_id":"cjxtyumq70006hbgh6ol2bpg6","tag_id":"cjxtyumql000phbghnd7nfp0p","_id":"cjxtyumqw000xhbghbzgphsr2"},{"post_id":"cjxtyumqc000ahbgh7f4zkx2x","tag_id":"cjxtyumqh000jhbghqxc0xf9t","_id":"cjxtyumqy0018hbghwas2yvfy"},{"post_id":"cjxtyumqc000ahbgh7f4zkx2x","tag_id":"cjxtyumqt000uhbghlkcxwmcg","_id":"cjxtyumqy0019hbgh1bh1wvo9"},{"post_id":"cjxtyumqg000ghbgh45him9j0","tag_id":"cjxtyumqz001fhbgh19n2goso","_id":"cjxtyumr0001nhbghuqk1egmd"},{"post_id":"cjxtyumqg000ghbgh45him9j0","tag_id":"cjxtyumql000phbghnd7nfp0p","_id":"cjxtyumr0001ohbgh0dvb7w1h"},{"post_id":"cjxtyumqi000khbghzom0ywgd","tag_id":"cjxtyumr0001lhbghn2xr7u1m","_id":"cjxtyumr1001uhbghblgroxyf"},{"post_id":"cjxtyumqi000khbghzom0ywgd","tag_id":"cjxtyumr1001rhbghd9n2jcf9","_id":"cjxtyumr1001vhbghs5i6ri1o"},{"post_id":"cjxtyumqk000mhbghp3btkh2u","tag_id":"cjxtyumr1001thbgh5yrali40","_id":"cjxtyumr20020hbgh9lwdc0nk"},{"post_id":"cjxtyumqk000mhbghp3btkh2u","tag_id":"cjxtyumr1001xhbghxm4vkgmb","_id":"cjxtyumr20021hbghovfg5jwi"},{"post_id":"cjxtyumql000qhbghrp89vd3f","tag_id":"cjxtyumr1001xhbghxm4vkgmb","_id":"cjxtyumr20023hbghepjx06m5"},{"post_id":"cjxtyumqs000rhbghujvt4e2d","tag_id":"cjxtyumr20022hbgh32qhtyfj","_id":"cjxtyumr30026hbgh6yzpefnf"},{"post_id":"cjxtyumqs000rhbghujvt4e2d","tag_id":"cjxtyumr20024hbgh8ob75me3","_id":"cjxtyumr30027hbgh0gs28uda"},{"post_id":"cjxtyumqt000vhbgh93mzupk4","tag_id":"cjxtyumr30025hbghpcn3ahmn","_id":"cjxtyumr30029hbghdpv5528n"},{"post_id":"cjxtyumqt000vhbgh93mzupk4","tag_id":"cjxtyumr30028hbghq0s8guqa","_id":"cjxtyumr3002ahbghu41n5xy6"},{"post_id":"cjxx6lm4w0000s5ghoo619vne","tag_id":"cjxtyumqt000uhbghlkcxwmcg","_id":"cjxx6lm510002s5ghfg5imyg7"},{"post_id":"cjxx6lm500001s5ghh59fom2e","tag_id":"cjxtyumqy0017hbghinoe42ba","_id":"cjxx6lm530003s5gh8ityxu5a"},{"post_id":"cjxx6lm500001s5ghh59fom2e","tag_id":"cjxtyumqy001chbgh01teal3e","_id":"cjxx6lm540005s5ghivkqrnnj"},{"post_id":"cjxxjgbk80000akghjb0sst7h","tag_id":"cjxxjgbki0002akgh6ihcwjaw","_id":"cjxxjgbkj0003akghrx972gax"},{"post_id":"cjxxjgc5c0005akghllrnhaoe","tag_id":"cjxtyumqy0017hbghinoe42ba","_id":"cjxxjgc5d0006akghktpyiebx"}],"Tag":[{"name":"stateogjs","_id":"cjxtyumq70005hbghn4lsrjq5"},{"name":"ScarSu","_id":"cjxtyumqc000chbgh0jn0ae9h"},{"name":"360fed","_id":"cjxtyumqh000jhbghqxc0xf9t"},{"name":"html","_id":"cjxtyumql000phbghnd7nfp0p"},{"name":"css","_id":"cjxtyumqt000uhbghlkcxwmcg"},{"name":"js","_id":"cjxtyumqy0017hbghinoe42ba"},{"name":"FullPage.js","_id":"cjxtyumqy001chbgh01teal3e"},{"name":"table","_id":"cjxtyumqz001fhbgh19n2goso"},{"name":"chrome","_id":"cjxtyumr0001lhbghn2xr7u1m"},{"name":"node.js","_id":"cjxtyumr1001rhbghd9n2jcf9"},{"name":"daily","_id":"cjxtyumr1001thbgh5yrali40"},{"name":"blog","_id":"cjxtyumr1001xhbghxm4vkgmb"},{"name":"mongodb","_id":"cjxtyumr20022hbgh32qhtyfj"},{"name":"mongoose","_id":"cjxtyumr20024hbgh8ob75me3"},{"name":"node","_id":"cjxtyumr30025hbghpcn3ahmn"},{"name":"nvm","_id":"cjxtyumr30028hbghq0s8guqa"},{"name":"grunt","_id":"cjxxjgbki0002akgh6ihcwjaw"}]}}